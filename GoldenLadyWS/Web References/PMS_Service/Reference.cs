//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace GoldenLadyWS.PMS_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetThe_Employee_NameOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderCount_KPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductTypeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompanyOutputPaperCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompanyDesignCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThreeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback MonthThreeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback XC_PageCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback XK_PageCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SeparateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubtractOrderLogoNumberForSeparateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewOrderLogoForSeparateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SeparateOrderAndCreateNewOrderLogo_aOperationCompleted;
        
        private System.Threading.SendOrPostCallback SeparateOrderAndCreateNewOrderLogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback MergeOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_OrderPath_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOutPut_DirectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_OutPut_DirectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOutPut_DirectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_OutPut_Direction_SizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheSumByPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOutPut_OpTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Products_SizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockEnterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchStockLogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDeleteSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_workbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersInfoAndOrders_WorkBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_PathOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_SCFSOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWork_TimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkShop_TimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Count_ProductsPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_Orders_Products_OrderMemory_Product_backOperationCompleted;
        
        private System.Threading.SendOrPostCallback selset_Product_backOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BarCodes_backOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Orders_Products_OrderMemory_Product_backOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_Report_BackOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Reports_BackOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductTypeCount_XCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Count_PricesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_JoinProductTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_OutProductTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Orders_Products_OrderMemory_Product_back_CJOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrders_Products_BackOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrdersInfo_DDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrders_ProductsInfo_XXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrders_ProductsInfo_XXOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Orders_Products_OrderMemory_Product_back_CJ_TimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDeleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Orders_Products_ProductTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDeleteProduct_IsDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDesignCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOrderProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_JYBTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_DJTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Count_TotalCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrders_ProductsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompamyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCompanyTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCompanyTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCompanyTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheAllDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheDepByDepNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheDepNameByDepNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheAllEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheAllEmployee_SCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Employee_InfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheEmpNameByEmpNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheEmpNoByEmpNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheProductNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheProdactByProductTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheProdactNoByProductNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThePathByOrderNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheProductNameByProductNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProductSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheProducts_SizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyProductToOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProductTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheProductsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProductsPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductsPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductsPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProductsPrice_CompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductsPrice_CompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsPrice_CompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProductsPrice_ProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductsPrice_ProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsPrice_ProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProductsPrice_SizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductsPrice_SizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsPrice_SizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductsPrice_SizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrdersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersInfoAndOrders_ProductsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrdersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrders_ProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_ProductsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback returnOrderNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductTypeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfig_Code_NoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrdersPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_OutPutOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_OutputDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_ProductDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_GetGoodsDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_GetGoodsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_ProductTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductTypeXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfig_CodeXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Reports_AreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsPrice_ProductandProductsPrice_SizeXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ComposeXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_OrderPathXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_InsertOrderLogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_Products_InsertOrderLogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrders_OrderLogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Select_OrderLogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_OrderLogo_Employee2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheCurrentGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Orders_Products_OrderMemoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Reports_StateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Report_GetGoodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Report_Orders_ProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Report_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_LogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_LogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_LogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_LogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BarCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_BarCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_DetailTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CountTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_DetailEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CountEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Count_RecordListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Detail_RecordListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_ComposeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_ComposeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_ComposeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ComposeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThe_EmployeeNOOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::GoldenLadyWS.Properties.Settings.Default.GoldenLadyWS_PMS_Service_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetThe_Employee_NameCompletedEventHandler GetThe_Employee_NameCompleted;
        
        /// <remarks/>
        public event OrderCountCompletedEventHandler OrderCountCompleted;
        
        /// <remarks/>
        public event OrderCount_KPCompletedEventHandler OrderCount_KPCompleted;
        
        /// <remarks/>
        public event ProductTypeCountCompletedEventHandler ProductTypeCountCompleted;
        
        /// <remarks/>
        public event CompanyOutputPaperCountCompletedEventHandler CompanyOutputPaperCountCompleted;
        
        /// <remarks/>
        public event CompanyDesignCountCompletedEventHandler CompanyDesignCountCompleted;
        
        /// <remarks/>
        public event ThreeCountCompletedEventHandler ThreeCountCompleted;
        
        /// <remarks/>
        public event MonthThreeCountCompletedEventHandler MonthThreeCountCompleted;
        
        /// <remarks/>
        public event XC_PageCountCompletedEventHandler XC_PageCountCompleted;
        
        /// <remarks/>
        public event XK_PageCountCompletedEventHandler XK_PageCountCompleted;
        
        /// <remarks/>
        public event SeparateOrderCompletedEventHandler SeparateOrderCompleted;
        
        /// <remarks/>
        public event SubtractOrderLogoNumberForSeparateOrderCompletedEventHandler SubtractOrderLogoNumberForSeparateOrderCompleted;
        
        /// <remarks/>
        public event CreateNewOrderLogoForSeparateOrderCompletedEventHandler CreateNewOrderLogoForSeparateOrderCompleted;
        
        /// <remarks/>
        public event SeparateOrderAndCreateNewOrderLogo_aCompletedEventHandler SeparateOrderAndCreateNewOrderLogo_aCompleted;
        
        /// <remarks/>
        public event SeparateOrderAndCreateNewOrderLogoCompletedEventHandler SeparateOrderAndCreateNewOrderLogoCompleted;
        
        /// <remarks/>
        public event MergeOrderCompletedEventHandler MergeOrderCompleted;
        
        /// <remarks/>
        public event Get_OrderPath_AllCompletedEventHandler Get_OrderPath_AllCompleted;
        
        /// <remarks/>
        public event InsertOutPut_DirectionCompletedEventHandler InsertOutPut_DirectionCompleted;
        
        /// <remarks/>
        public event Get_OutPut_DirectionCompletedEventHandler Get_OutPut_DirectionCompleted;
        
        /// <remarks/>
        public event DeleteOutPut_DirectionCompletedEventHandler DeleteOutPut_DirectionCompleted;
        
        /// <remarks/>
        public event Get_OutPut_Direction_SizeCompletedEventHandler Get_OutPut_Direction_SizeCompleted;
        
        /// <remarks/>
        public event GetTheSumByPageCompletedEventHandler GetTheSumByPageCompleted;
        
        /// <remarks/>
        public event UpdateOutPut_OpTypeCompletedEventHandler UpdateOutPut_OpTypeCompleted;
        
        /// <remarks/>
        public event Get_Products_SizeCompletedEventHandler Get_Products_SizeCompleted;
        
        /// <remarks/>
        public event SearchStockCompletedEventHandler SearchStockCompleted;
        
        /// <remarks/>
        public event UpdateStockCompletedEventHandler UpdateStockCompleted;
        
        /// <remarks/>
        public event StockEnterCompletedEventHandler StockEnterCompleted;
        
        /// <remarks/>
        public event SearchStockLogoCompletedEventHandler SearchStockLogoCompleted;
        
        /// <remarks/>
        public event SearchSupplierCompletedEventHandler SearchSupplierCompleted;
        
        /// <remarks/>
        public event InsertSupplierCompletedEventHandler InsertSupplierCompleted;
        
        /// <remarks/>
        public event UpdateSupplierCompletedEventHandler UpdateSupplierCompleted;
        
        /// <remarks/>
        public event IsDeleteSupplierCompletedEventHandler IsDeleteSupplierCompleted;
        
        /// <remarks/>
        public event Insert_workbackCompletedEventHandler Insert_workbackCompleted;
        
        /// <remarks/>
        public event GetOrdersInfoAndOrders_WorkBackCompletedEventHandler GetOrdersInfoAndOrders_WorkBackCompleted;
        
        /// <remarks/>
        public event UpdateOrders_PathCompletedEventHandler UpdateOrders_PathCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_SCFSCompletedEventHandler UpdateOrders_Products_SCFSCompleted;
        
        /// <remarks/>
        public event UpdateWork_TimeCompletedEventHandler UpdateWork_TimeCompleted;
        
        /// <remarks/>
        public event UpdateWorkShop_TimeCompletedEventHandler UpdateWorkShop_TimeCompleted;
        
        /// <remarks/>
        public event Count_ProductsPriceCompletedEventHandler Count_ProductsPriceCompleted;
        
        /// <remarks/>
        public event Insert_Orders_Products_OrderMemory_Product_backCompletedEventHandler Insert_Orders_Products_OrderMemory_Product_backCompleted;
        
        /// <remarks/>
        public event selset_Product_backCompletedEventHandler selset_Product_backCompleted;
        
        /// <remarks/>
        public event Get_BarCodes_backCompletedEventHandler Get_BarCodes_backCompleted;
        
        /// <remarks/>
        public event Update_Orders_Products_OrderMemory_Product_backCompletedEventHandler Update_Orders_Products_OrderMemory_Product_backCompleted;
        
        /// <remarks/>
        public event Insert_Report_BackCompletedEventHandler Insert_Report_BackCompleted;
        
        /// <remarks/>
        public event Get_Reports_BackCompletedEventHandler Get_Reports_BackCompleted;
        
        /// <remarks/>
        public event ProductTypeCount_XCCompletedEventHandler ProductTypeCount_XCCompleted;
        
        /// <remarks/>
        public event Count_PricesCompletedEventHandler Count_PricesCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_JoinProductTimeCompletedEventHandler UpdateOrders_Products_JoinProductTimeCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_OutProductTimeCompletedEventHandler UpdateOrders_Products_OutProductTimeCompleted;
        
        /// <remarks/>
        public event Update_Orders_Products_OrderMemory_Product_back_CJCompletedEventHandler Update_Orders_Products_OrderMemory_Product_back_CJCompleted;
        
        /// <remarks/>
        public event DeleteOrders_Products_BackCompletedEventHandler DeleteOrders_Products_BackCompleted;
        
        /// <remarks/>
        public event AddOrdersInfo_DDCompletedEventHandler AddOrdersInfo_DDCompleted;
        
        /// <remarks/>
        public event AddOrders_ProductsInfo_XXCompletedEventHandler AddOrders_ProductsInfo_XXCompleted;
        
        /// <remarks/>
        public event GetOrders_ProductsInfo_XXCompletedEventHandler GetOrders_ProductsInfo_XXCompleted;
        
        /// <remarks/>
        public event Update_Orders_Products_OrderMemory_Product_back_CJ_TimeCompletedEventHandler Update_Orders_Products_OrderMemory_Product_back_CJ_TimeCompleted;
        
        /// <remarks/>
        public event SearchProductCompletedEventHandler SearchProductCompleted;
        
        /// <remarks/>
        public event SaveProductCompletedEventHandler SaveProductCompleted;
        
        /// <remarks/>
        public event UpdateProductCompletedEventHandler UpdateProductCompleted;
        
        /// <remarks/>
        public event IsDeleteProductCompletedEventHandler IsDeleteProductCompleted;
        
        /// <remarks/>
        public event Update_Orders_Products_ProductTimeCompletedEventHandler Update_Orders_Products_ProductTimeCompleted;
        
        /// <remarks/>
        public event IsDeleteProduct_IsDeleteCompletedEventHandler IsDeleteProduct_IsDeleteCompleted;
        
        /// <remarks/>
        public event EmployeeDesignCountCompletedEventHandler EmployeeDesignCountCompleted;
        
        /// <remarks/>
        public event SearchOrderProductsCompletedEventHandler SearchOrderProductsCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_JYBTimeCompletedEventHandler UpdateOrders_Products_JYBTimeCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_DJTimeCompletedEventHandler UpdateOrders_Products_DJTimeCompleted;
        
        /// <remarks/>
        public event Count_TotalCashCompletedEventHandler Count_TotalCashCompleted;
        
        /// <remarks/>
        public event GetPTypeCompletedEventHandler GetPTypeCompleted;
        
        /// <remarks/>
        public event AddOrders_ProductsInfoCompletedEventHandler AddOrders_ProductsInfoCompleted;
        
        /// <remarks/>
        public event GetCompamyCompletedEventHandler GetCompamyCompleted;
        
        /// <remarks/>
        public event InsertCompanyCompletedEventHandler InsertCompanyCompleted;
        
        /// <remarks/>
        public event DeleteCompanyCompletedEventHandler DeleteCompanyCompleted;
        
        /// <remarks/>
        public event UpdateCompanyCompletedEventHandler UpdateCompanyCompleted;
        
        /// <remarks/>
        public event GetCompanyTypeCompletedEventHandler GetCompanyTypeCompleted;
        
        /// <remarks/>
        public event InsertCompanyTypeCompletedEventHandler InsertCompanyTypeCompleted;
        
        /// <remarks/>
        public event UpdateCompanyTypeCompletedEventHandler UpdateCompanyTypeCompleted;
        
        /// <remarks/>
        public event DeleteCompanyTypeCompletedEventHandler DeleteCompanyTypeCompleted;
        
        /// <remarks/>
        public event GetDepartmentInfoCompletedEventHandler GetDepartmentInfoCompleted;
        
        /// <remarks/>
        public event GetTheAllDepartmentCompletedEventHandler GetTheAllDepartmentCompleted;
        
        /// <remarks/>
        public event GetTheDepByDepNoCompletedEventHandler GetTheDepByDepNoCompleted;
        
        /// <remarks/>
        public event GetTheDepNameByDepNoCompletedEventHandler GetTheDepNameByDepNoCompleted;
        
        /// <remarks/>
        public event InsertDepartmentCompletedEventHandler InsertDepartmentCompleted;
        
        /// <remarks/>
        public event DeleteDepartmentCompletedEventHandler DeleteDepartmentCompleted;
        
        /// <remarks/>
        public event UpdateDepartmentCompletedEventHandler UpdateDepartmentCompleted;
        
        /// <remarks/>
        public event GetEmployeeInfoCompletedEventHandler GetEmployeeInfoCompleted;
        
        /// <remarks/>
        public event GetTheAllEmployeeCompletedEventHandler GetTheAllEmployeeCompleted;
        
        /// <remarks/>
        public event GetTheAllEmployee_SCCompletedEventHandler GetTheAllEmployee_SCCompleted;
        
        /// <remarks/>
        public event Get_Employee_InfoCompletedEventHandler Get_Employee_InfoCompleted;
        
        /// <remarks/>
        public event GetTheEmpNameByEmpNoCompletedEventHandler GetTheEmpNameByEmpNoCompleted;
        
        /// <remarks/>
        public event GetTheEmpNoByEmpNameCompletedEventHandler GetTheEmpNoByEmpNameCompleted;
        
        /// <remarks/>
        public event InsertEmployeeCompletedEventHandler InsertEmployeeCompleted;
        
        /// <remarks/>
        public event DeleteEmployeeCompletedEventHandler DeleteEmployeeCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeCompletedEventHandler UpdateEmployeeCompleted;
        
        /// <remarks/>
        public event GetTheProductNumberCompletedEventHandler GetTheProductNumberCompleted;
        
        /// <remarks/>
        public event GetTheProdactByProductTypeCompletedEventHandler GetTheProdactByProductTypeCompleted;
        
        /// <remarks/>
        public event GetTheProdactNoByProductNameCompletedEventHandler GetTheProdactNoByProductNameCompleted;
        
        /// <remarks/>
        public event GetThePathByOrderNOCompletedEventHandler GetThePathByOrderNOCompleted;
        
        /// <remarks/>
        public event GetTheProductNameByProductNoCompletedEventHandler GetTheProductNameByProductNoCompleted;
        
        /// <remarks/>
        public event InsertProductsCompletedEventHandler InsertProductsCompleted;
        
        /// <remarks/>
        public event InsertProductSizeCompletedEventHandler InsertProductSizeCompleted;
        
        /// <remarks/>
        public event UpdateProductSizeCompletedEventHandler UpdateProductSizeCompleted;
        
        /// <remarks/>
        public event UpdateProductAreaCompletedEventHandler UpdateProductAreaCompleted;
        
        /// <remarks/>
        public event DeleteProductSizeCompletedEventHandler DeleteProductSizeCompleted;
        
        /// <remarks/>
        public event GetTheProducts_SizeCompletedEventHandler GetTheProducts_SizeCompleted;
        
        /// <remarks/>
        public event DeleteProductsCompletedEventHandler DeleteProductsCompleted;
        
        /// <remarks/>
        public event UpdateProductsCompletedEventHandler UpdateProductsCompleted;
        
        /// <remarks/>
        public event GetProductsCompletedEventHandler GetProductsCompleted;
        
        /// <remarks/>
        public event CopyProductToCompletedEventHandler CopyProductToCompleted;
        
        /// <remarks/>
        public event InsertProductTypeCompletedEventHandler InsertProductTypeCompleted;
        
        /// <remarks/>
        public event DeleteProductTypeCompletedEventHandler DeleteProductTypeCompleted;
        
        /// <remarks/>
        public event UpdateProductTypeCompletedEventHandler UpdateProductTypeCompleted;
        
        /// <remarks/>
        public event GetTheProductsTypeCompletedEventHandler GetTheProductsTypeCompleted;
        
        /// <remarks/>
        public event GetProductTypeCompletedEventHandler GetProductTypeCompleted;
        
        /// <remarks/>
        public event InsertProductsPriceCompletedEventHandler InsertProductsPriceCompleted;
        
        /// <remarks/>
        public event DeleteProductsPriceCompletedEventHandler DeleteProductsPriceCompleted;
        
        /// <remarks/>
        public event GetProductsPriceCompletedEventHandler GetProductsPriceCompleted;
        
        /// <remarks/>
        public event UpdateProductsPriceCompletedEventHandler UpdateProductsPriceCompleted;
        
        /// <remarks/>
        public event InsertProductsPrice_CompanyCompletedEventHandler InsertProductsPrice_CompanyCompleted;
        
        /// <remarks/>
        public event DeleteProductsPrice_CompanyCompletedEventHandler DeleteProductsPrice_CompanyCompleted;
        
        /// <remarks/>
        public event GetProductsPrice_CompanyCompletedEventHandler GetProductsPrice_CompanyCompleted;
        
        /// <remarks/>
        public event InsertProductsPrice_ProductCompletedEventHandler InsertProductsPrice_ProductCompleted;
        
        /// <remarks/>
        public event DeleteProductsPrice_ProductCompletedEventHandler DeleteProductsPrice_ProductCompleted;
        
        /// <remarks/>
        public event GetProductsPrice_ProductCompletedEventHandler GetProductsPrice_ProductCompleted;
        
        /// <remarks/>
        public event InsertProductsPrice_SizeCompletedEventHandler InsertProductsPrice_SizeCompleted;
        
        /// <remarks/>
        public event DeleteProductsPrice_SizeCompletedEventHandler DeleteProductsPrice_SizeCompleted;
        
        /// <remarks/>
        public event GetProductsPrice_SizeCompletedEventHandler GetProductsPrice_SizeCompleted;
        
        /// <remarks/>
        public event UpdateProductsPrice_SizeCompletedEventHandler UpdateProductsPrice_SizeCompleted;
        
        /// <remarks/>
        public event AddOrdersInfoCompletedEventHandler AddOrdersInfoCompleted;
        
        /// <remarks/>
        public event GetOrdersInfoAndOrders_ProductsInfoCompletedEventHandler GetOrdersInfoAndOrders_ProductsInfoCompleted;
        
        /// <remarks/>
        public event GetProductPhotoCompletedEventHandler GetProductPhotoCompleted;
        
        /// <remarks/>
        public event GetOrdersInfoCompletedEventHandler GetOrdersInfoCompleted;
        
        /// <remarks/>
        public event UpdateOrdersInfoCompletedEventHandler UpdateOrdersInfoCompleted;
        
        /// <remarks/>
        public event DeleteOrdersCompletedEventHandler DeleteOrdersCompleted;
        
        /// <remarks/>
        public event DeleteOrders_ProductsCompletedEventHandler DeleteOrders_ProductsCompleted;
        
        /// <remarks/>
        public event UpdateOrders_ProductsInfoCompletedEventHandler UpdateOrders_ProductsInfoCompleted;
        
        /// <remarks/>
        public event returnOrderNOCompletedEventHandler returnOrderNOCompleted;
        
        /// <remarks/>
        public event GetProductTypeNameCompletedEventHandler GetProductTypeNameCompleted;
        
        /// <remarks/>
        public event GetConfig_Code_NoCompletedEventHandler GetConfig_Code_NoCompleted;
        
        /// <remarks/>
        public event UpdateOrdersPathCompletedEventHandler UpdateOrdersPathCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_OutPutCompletedEventHandler UpdateOrders_Products_OutPutCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_OutputDateCompletedEventHandler UpdateOrders_Products_OutputDateCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_ProductDateCompletedEventHandler UpdateOrders_Products_ProductDateCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_GetGoodsDateCompletedEventHandler UpdateOrders_Products_GetGoodsDateCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_GetGoodsTypeCompletedEventHandler UpdateOrders_Products_GetGoodsTypeCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_ProductTypeCompletedEventHandler UpdateOrders_Products_ProductTypeCompleted;
        
        /// <remarks/>
        public event GetProductTypeXMLCompletedEventHandler GetProductTypeXMLCompleted;
        
        /// <remarks/>
        public event GetProductsXMLCompletedEventHandler GetProductsXMLCompleted;
        
        /// <remarks/>
        public event GetConfig_CodeXMLCompletedEventHandler GetConfig_CodeXMLCompleted;
        
        /// <remarks/>
        public event GetCompanyXMLCompletedEventHandler GetCompanyXMLCompleted;
        
        /// <remarks/>
        public event GetDepartmentXMLCompletedEventHandler GetDepartmentXMLCompleted;
        
        /// <remarks/>
        public event Get_Reports_AreaCompletedEventHandler Get_Reports_AreaCompleted;
        
        /// <remarks/>
        public event GetEmployeeXMLCompletedEventHandler GetEmployeeXMLCompleted;
        
        /// <remarks/>
        public event GetProductsPrice_ProductandProductsPrice_SizeXMLCompletedEventHandler GetProductsPrice_ProductandProductsPrice_SizeXMLCompleted;
        
        /// <remarks/>
        public event Get_ComposeXMLCompletedEventHandler Get_ComposeXMLCompleted;
        
        /// <remarks/>
        public event Get_OrderPathXMLCompletedEventHandler Get_OrderPathXMLCompleted;
        
        /// <remarks/>
        public event LoginSelectCompletedEventHandler LoginSelectCompleted;
        
        /// <remarks/>
        public event UpdateOrders_InsertOrderLogoCompletedEventHandler UpdateOrders_InsertOrderLogoCompleted;
        
        /// <remarks/>
        public event UpdateOrders_Products_InsertOrderLogoCompletedEventHandler UpdateOrders_Products_InsertOrderLogoCompleted;
        
        /// <remarks/>
        public event UpdateOrders_OrderLogoCompletedEventHandler UpdateOrders_OrderLogoCompleted;
        
        /// <remarks/>
        public event Select_OrderLogoCompletedEventHandler Select_OrderLogoCompleted;
        
        /// <remarks/>
        public event Get_OrderLogo_Employee2CompletedEventHandler Get_OrderLogo_Employee2Completed;
        
        /// <remarks/>
        public event GetTheCurrentGroupCompletedEventHandler GetTheCurrentGroupCompleted;
        
        /// <remarks/>
        public event Update_Orders_Products_OrderMemoryCompletedEventHandler Update_Orders_Products_OrderMemoryCompleted;
        
        /// <remarks/>
        public event Insert_ReportCompletedEventHandler Insert_ReportCompleted;
        
        /// <remarks/>
        public event Get_ReportsCompletedEventHandler Get_ReportsCompleted;
        
        /// <remarks/>
        public event Get_Reports_StateCompletedEventHandler Get_Reports_StateCompleted;
        
        /// <remarks/>
        public event Get_Report_GetGoodsCompletedEventHandler Get_Report_GetGoodsCompleted;
        
        /// <remarks/>
        public event Get_Report_Orders_ProductsCompletedEventHandler Get_Report_Orders_ProductsCompleted;
        
        /// <remarks/>
        public event Get_Report_AllCompletedEventHandler Get_Report_AllCompleted;
        
        /// <remarks/>
        public event Insert_LogoCompletedEventHandler Insert_LogoCompleted;
        
        /// <remarks/>
        public event Delete_LogoCompletedEventHandler Delete_LogoCompleted;
        
        /// <remarks/>
        public event Update_LogoCompletedEventHandler Update_LogoCompleted;
        
        /// <remarks/>
        public event Get_LogoCompletedEventHandler Get_LogoCompleted;
        
        /// <remarks/>
        public event Get_BarCodesCompletedEventHandler Get_BarCodesCompleted;
        
        /// <remarks/>
        public event Get_BarCodeCompletedEventHandler Get_BarCodeCompleted;
        
        /// <remarks/>
        public event Get_DetailTableCompletedEventHandler Get_DetailTableCompleted;
        
        /// <remarks/>
        public event Get_CountTableCompletedEventHandler Get_CountTableCompleted;
        
        /// <remarks/>
        public event Get_DetailEmployeeCompletedEventHandler Get_DetailEmployeeCompleted;
        
        /// <remarks/>
        public event Get_CountEmployeeCompletedEventHandler Get_CountEmployeeCompleted;
        
        /// <remarks/>
        public event Count_RecordListCompletedEventHandler Count_RecordListCompleted;
        
        /// <remarks/>
        public event Detail_RecordListCompletedEventHandler Detail_RecordListCompleted;
        
        /// <remarks/>
        public event Insert_ComposeCompletedEventHandler Insert_ComposeCompleted;
        
        /// <remarks/>
        public event Update_ComposeCompletedEventHandler Update_ComposeCompleted;
        
        /// <remarks/>
        public event Delete_ComposeCompletedEventHandler Delete_ComposeCompleted;
        
        /// <remarks/>
        public event Get_ComposeCompletedEventHandler Get_ComposeCompleted;
        
        /// <remarks/>
        public event GetThe_EmployeeNOCompletedEventHandler GetThe_EmployeeNOCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThe_Employee_Name", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetThe_Employee_Name(string sOrderNO) {
            object[] results = this.Invoke("GetThe_Employee_Name", new object[] {
                        sOrderNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetThe_Employee_NameAsync(string sOrderNO) {
            this.GetThe_Employee_NameAsync(sOrderNO, null);
        }
        
        /// <remarks/>
        public void GetThe_Employee_NameAsync(string sOrderNO, object userState) {
            if ((this.GetThe_Employee_NameOperationCompleted == null)) {
                this.GetThe_Employee_NameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThe_Employee_NameOperationCompleted);
            }
            this.InvokeAsync("GetThe_Employee_Name", new object[] {
                        sOrderNO}, this.GetThe_Employee_NameOperationCompleted, userState);
        }
        
        private void OnGetThe_Employee_NameOperationCompleted(object arg) {
            if ((this.GetThe_Employee_NameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThe_Employee_NameCompleted(this, new GetThe_Employee_NameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OrderCount(string sql) {
            object[] results = this.Invoke("OrderCount", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OrderCountAsync(string sql) {
            this.OrderCountAsync(sql, null);
        }
        
        /// <remarks/>
        public void OrderCountAsync(string sql, object userState) {
            if ((this.OrderCountOperationCompleted == null)) {
                this.OrderCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderCountOperationCompleted);
            }
            this.InvokeAsync("OrderCount", new object[] {
                        sql}, this.OrderCountOperationCompleted, userState);
        }
        
        private void OnOrderCountOperationCompleted(object arg) {
            if ((this.OrderCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderCountCompleted(this, new OrderCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderCount_KP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OrderCount_KP(string sql) {
            object[] results = this.Invoke("OrderCount_KP", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OrderCount_KPAsync(string sql) {
            this.OrderCount_KPAsync(sql, null);
        }
        
        /// <remarks/>
        public void OrderCount_KPAsync(string sql, object userState) {
            if ((this.OrderCount_KPOperationCompleted == null)) {
                this.OrderCount_KPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderCount_KPOperationCompleted);
            }
            this.InvokeAsync("OrderCount_KP", new object[] {
                        sql}, this.OrderCount_KPOperationCompleted, userState);
        }
        
        private void OnOrderCount_KPOperationCompleted(object arg) {
            if ((this.OrderCount_KPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderCount_KPCompleted(this, new OrderCount_KPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProductTypeCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ProductTypeCount(string sql) {
            object[] results = this.Invoke("ProductTypeCount", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ProductTypeCountAsync(string sql) {
            this.ProductTypeCountAsync(sql, null);
        }
        
        /// <remarks/>
        public void ProductTypeCountAsync(string sql, object userState) {
            if ((this.ProductTypeCountOperationCompleted == null)) {
                this.ProductTypeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductTypeCountOperationCompleted);
            }
            this.InvokeAsync("ProductTypeCount", new object[] {
                        sql}, this.ProductTypeCountOperationCompleted, userState);
        }
        
        private void OnProductTypeCountOperationCompleted(object arg) {
            if ((this.ProductTypeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductTypeCountCompleted(this, new ProductTypeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompanyOutputPaperCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CompanyOutputPaperCount(string sql) {
            object[] results = this.Invoke("CompanyOutputPaperCount", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CompanyOutputPaperCountAsync(string sql) {
            this.CompanyOutputPaperCountAsync(sql, null);
        }
        
        /// <remarks/>
        public void CompanyOutputPaperCountAsync(string sql, object userState) {
            if ((this.CompanyOutputPaperCountOperationCompleted == null)) {
                this.CompanyOutputPaperCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompanyOutputPaperCountOperationCompleted);
            }
            this.InvokeAsync("CompanyOutputPaperCount", new object[] {
                        sql}, this.CompanyOutputPaperCountOperationCompleted, userState);
        }
        
        private void OnCompanyOutputPaperCountOperationCompleted(object arg) {
            if ((this.CompanyOutputPaperCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompanyOutputPaperCountCompleted(this, new CompanyOutputPaperCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompanyDesignCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CompanyDesignCount(string sql) {
            object[] results = this.Invoke("CompanyDesignCount", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CompanyDesignCountAsync(string sql) {
            this.CompanyDesignCountAsync(sql, null);
        }
        
        /// <remarks/>
        public void CompanyDesignCountAsync(string sql, object userState) {
            if ((this.CompanyDesignCountOperationCompleted == null)) {
                this.CompanyDesignCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompanyDesignCountOperationCompleted);
            }
            this.InvokeAsync("CompanyDesignCount", new object[] {
                        sql}, this.CompanyDesignCountOperationCompleted, userState);
        }
        
        private void OnCompanyDesignCountOperationCompleted(object arg) {
            if ((this.CompanyDesignCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompanyDesignCountCompleted(this, new CompanyDesignCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThreeCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ThreeCount(string sql) {
            object[] results = this.Invoke("ThreeCount", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ThreeCountAsync(string sql) {
            this.ThreeCountAsync(sql, null);
        }
        
        /// <remarks/>
        public void ThreeCountAsync(string sql, object userState) {
            if ((this.ThreeCountOperationCompleted == null)) {
                this.ThreeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThreeCountOperationCompleted);
            }
            this.InvokeAsync("ThreeCount", new object[] {
                        sql}, this.ThreeCountOperationCompleted, userState);
        }
        
        private void OnThreeCountOperationCompleted(object arg) {
            if ((this.ThreeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThreeCountCompleted(this, new ThreeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MonthThreeCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet MonthThreeCount(string sql) {
            object[] results = this.Invoke("MonthThreeCount", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void MonthThreeCountAsync(string sql) {
            this.MonthThreeCountAsync(sql, null);
        }
        
        /// <remarks/>
        public void MonthThreeCountAsync(string sql, object userState) {
            if ((this.MonthThreeCountOperationCompleted == null)) {
                this.MonthThreeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMonthThreeCountOperationCompleted);
            }
            this.InvokeAsync("MonthThreeCount", new object[] {
                        sql}, this.MonthThreeCountOperationCompleted, userState);
        }
        
        private void OnMonthThreeCountOperationCompleted(object arg) {
            if ((this.MonthThreeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MonthThreeCountCompleted(this, new MonthThreeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XC_PageCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet XC_PageCount(string sql) {
            object[] results = this.Invoke("XC_PageCount", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void XC_PageCountAsync(string sql) {
            this.XC_PageCountAsync(sql, null);
        }
        
        /// <remarks/>
        public void XC_PageCountAsync(string sql, object userState) {
            if ((this.XC_PageCountOperationCompleted == null)) {
                this.XC_PageCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXC_PageCountOperationCompleted);
            }
            this.InvokeAsync("XC_PageCount", new object[] {
                        sql}, this.XC_PageCountOperationCompleted, userState);
        }
        
        private void OnXC_PageCountOperationCompleted(object arg) {
            if ((this.XC_PageCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XC_PageCountCompleted(this, new XC_PageCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XK_PageCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet XK_PageCount(string sql) {
            object[] results = this.Invoke("XK_PageCount", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void XK_PageCountAsync(string sql) {
            this.XK_PageCountAsync(sql, null);
        }
        
        /// <remarks/>
        public void XK_PageCountAsync(string sql, object userState) {
            if ((this.XK_PageCountOperationCompleted == null)) {
                this.XK_PageCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXK_PageCountOperationCompleted);
            }
            this.InvokeAsync("XK_PageCount", new object[] {
                        sql}, this.XK_PageCountOperationCompleted, userState);
        }
        
        private void OnXK_PageCountOperationCompleted(object arg) {
            if ((this.XK_PageCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XK_PageCountCompleted(this, new XK_PageCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeparateOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SeparateOrder(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sProcess) {
            object[] results = this.Invoke("SeparateOrder", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SeparateOrderAsync(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sProcess) {
            this.SeparateOrderAsync(sOrderNO, sOrderIndex, sSeparateOrder, sProcess, null);
        }
        
        /// <remarks/>
        public void SeparateOrderAsync(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sProcess, object userState) {
            if ((this.SeparateOrderOperationCompleted == null)) {
                this.SeparateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeparateOrderOperationCompleted);
            }
            this.InvokeAsync("SeparateOrder", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess}, this.SeparateOrderOperationCompleted, userState);
        }
        
        private void OnSeparateOrderOperationCompleted(object arg) {
            if ((this.SeparateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeparateOrderCompleted(this, new SeparateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubtractOrderLogoNumberForSeparateOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubtractOrderLogoNumberForSeparateOrder(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sCurrentNumber) {
            this.Invoke("SubtractOrderLogoNumberForSeparateOrder", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sCurrentNumber});
        }
        
        /// <remarks/>
        public void SubtractOrderLogoNumberForSeparateOrderAsync(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sCurrentNumber) {
            this.SubtractOrderLogoNumberForSeparateOrderAsync(sOrderNO, sOrderIndex, sSeparateOrder, sCurrentNumber, null);
        }
        
        /// <remarks/>
        public void SubtractOrderLogoNumberForSeparateOrderAsync(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sCurrentNumber, object userState) {
            if ((this.SubtractOrderLogoNumberForSeparateOrderOperationCompleted == null)) {
                this.SubtractOrderLogoNumberForSeparateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubtractOrderLogoNumberForSeparateOrderOperationCompleted);
            }
            this.InvokeAsync("SubtractOrderLogoNumberForSeparateOrder", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sCurrentNumber}, this.SubtractOrderLogoNumberForSeparateOrderOperationCompleted, userState);
        }
        
        private void OnSubtractOrderLogoNumberForSeparateOrderOperationCompleted(object arg) {
            if ((this.SubtractOrderLogoNumberForSeparateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubtractOrderLogoNumberForSeparateOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateNewOrderLogoForSeparateOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateNewOrderLogoForSeparateOrder(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sProcess, string sCurrentNumber, string sDepartment1, string sEmployee1, string sEmployee2, string sOpType) {
            this.Invoke("CreateNewOrderLogoForSeparateOrder", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess,
                        sCurrentNumber,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sOpType});
        }
        
        /// <remarks/>
        public void CreateNewOrderLogoForSeparateOrderAsync(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sProcess, string sCurrentNumber, string sDepartment1, string sEmployee1, string sEmployee2, string sOpType) {
            this.CreateNewOrderLogoForSeparateOrderAsync(sOrderNO, sOrderIndex, sSeparateOrder, sProcess, sCurrentNumber, sDepartment1, sEmployee1, sEmployee2, sOpType, null);
        }
        
        /// <remarks/>
        public void CreateNewOrderLogoForSeparateOrderAsync(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sProcess, string sCurrentNumber, string sDepartment1, string sEmployee1, string sEmployee2, string sOpType, object userState) {
            if ((this.CreateNewOrderLogoForSeparateOrderOperationCompleted == null)) {
                this.CreateNewOrderLogoForSeparateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewOrderLogoForSeparateOrderOperationCompleted);
            }
            this.InvokeAsync("CreateNewOrderLogoForSeparateOrder", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess,
                        sCurrentNumber,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sOpType}, this.CreateNewOrderLogoForSeparateOrderOperationCompleted, userState);
        }
        
        private void OnCreateNewOrderLogoForSeparateOrderOperationCompleted(object arg) {
            if ((this.CreateNewOrderLogoForSeparateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewOrderLogoForSeparateOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeparateOrderAndCreateNewOrderLogo_a", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SeparateOrderAndCreateNewOrderLogo_a(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sProcess, string sCurrentNumber, string sDepartment1, string sEmployee1, string sEmployee2, string sOpType) {
            this.Invoke("SeparateOrderAndCreateNewOrderLogo_a", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess,
                        sCurrentNumber,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sOpType});
        }
        
        /// <remarks/>
        public void SeparateOrderAndCreateNewOrderLogo_aAsync(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sProcess, string sCurrentNumber, string sDepartment1, string sEmployee1, string sEmployee2, string sOpType) {
            this.SeparateOrderAndCreateNewOrderLogo_aAsync(sOrderNO, sOrderIndex, sSeparateOrder, sProcess, sCurrentNumber, sDepartment1, sEmployee1, sEmployee2, sOpType, null);
        }
        
        /// <remarks/>
        public void SeparateOrderAndCreateNewOrderLogo_aAsync(string sOrderNO, string sOrderIndex, string sSeparateOrder, string sProcess, string sCurrentNumber, string sDepartment1, string sEmployee1, string sEmployee2, string sOpType, object userState) {
            if ((this.SeparateOrderAndCreateNewOrderLogo_aOperationCompleted == null)) {
                this.SeparateOrderAndCreateNewOrderLogo_aOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeparateOrderAndCreateNewOrderLogo_aOperationCompleted);
            }
            this.InvokeAsync("SeparateOrderAndCreateNewOrderLogo_a", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess,
                        sCurrentNumber,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sOpType}, this.SeparateOrderAndCreateNewOrderLogo_aOperationCompleted, userState);
        }
        
        private void OnSeparateOrderAndCreateNewOrderLogo_aOperationCompleted(object arg) {
            if ((this.SeparateOrderAndCreateNewOrderLogo_aCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeparateOrderAndCreateNewOrderLogo_aCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeparateOrderAndCreateNewOrderLogo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SeparateOrderAndCreateNewOrderLogo(string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string sProcess, string[] sCurrentNumber, string sDepartment1, string sEmployee1, string sEmployee2, string sOpType) {
            this.Invoke("SeparateOrderAndCreateNewOrderLogo", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess,
                        sCurrentNumber,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sOpType});
        }
        
        /// <remarks/>
        public void SeparateOrderAndCreateNewOrderLogoAsync(string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string sProcess, string[] sCurrentNumber, string sDepartment1, string sEmployee1, string sEmployee2, string sOpType) {
            this.SeparateOrderAndCreateNewOrderLogoAsync(sOrderNO, sOrderIndex, sSeparateOrder, sProcess, sCurrentNumber, sDepartment1, sEmployee1, sEmployee2, sOpType, null);
        }
        
        /// <remarks/>
        public void SeparateOrderAndCreateNewOrderLogoAsync(string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string sProcess, string[] sCurrentNumber, string sDepartment1, string sEmployee1, string sEmployee2, string sOpType, object userState) {
            if ((this.SeparateOrderAndCreateNewOrderLogoOperationCompleted == null)) {
                this.SeparateOrderAndCreateNewOrderLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeparateOrderAndCreateNewOrderLogoOperationCompleted);
            }
            this.InvokeAsync("SeparateOrderAndCreateNewOrderLogo", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess,
                        sCurrentNumber,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sOpType}, this.SeparateOrderAndCreateNewOrderLogoOperationCompleted, userState);
        }
        
        private void OnSeparateOrderAndCreateNewOrderLogoOperationCompleted(object arg) {
            if ((this.SeparateOrderAndCreateNewOrderLogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeparateOrderAndCreateNewOrderLogoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MergeOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MergeOrder(string sOrderNO, string sOrderIndex, string sProcess) {
            this.Invoke("MergeOrder", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sProcess});
        }
        
        /// <remarks/>
        public void MergeOrderAsync(string sOrderNO, string sOrderIndex, string sProcess) {
            this.MergeOrderAsync(sOrderNO, sOrderIndex, sProcess, null);
        }
        
        /// <remarks/>
        public void MergeOrderAsync(string sOrderNO, string sOrderIndex, string sProcess, object userState) {
            if ((this.MergeOrderOperationCompleted == null)) {
                this.MergeOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMergeOrderOperationCompleted);
            }
            this.InvokeAsync("MergeOrder", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sProcess}, this.MergeOrderOperationCompleted, userState);
        }
        
        private void OnMergeOrderOperationCompleted(object arg) {
            if ((this.MergeOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MergeOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OrderPath_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_OrderPath_All() {
            object[] results = this.Invoke("Get_OrderPath_All", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_OrderPath_AllAsync() {
            this.Get_OrderPath_AllAsync(null);
        }
        
        /// <remarks/>
        public void Get_OrderPath_AllAsync(object userState) {
            if ((this.Get_OrderPath_AllOperationCompleted == null)) {
                this.Get_OrderPath_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_OrderPath_AllOperationCompleted);
            }
            this.InvokeAsync("Get_OrderPath_All", new object[0], this.Get_OrderPath_AllOperationCompleted, userState);
        }
        
        private void OnGet_OrderPath_AllOperationCompleted(object arg) {
            if ((this.Get_OrderPath_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_OrderPath_AllCompleted(this, new Get_OrderPath_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertOutPut_Direction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertOutPut_Direction(string sql) {
            this.Invoke("InsertOutPut_Direction", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void InsertOutPut_DirectionAsync(string sql) {
            this.InsertOutPut_DirectionAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsertOutPut_DirectionAsync(string sql, object userState) {
            if ((this.InsertOutPut_DirectionOperationCompleted == null)) {
                this.InsertOutPut_DirectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOutPut_DirectionOperationCompleted);
            }
            this.InvokeAsync("InsertOutPut_Direction", new object[] {
                        sql}, this.InsertOutPut_DirectionOperationCompleted, userState);
        }
        
        private void OnInsertOutPut_DirectionOperationCompleted(object arg) {
            if ((this.InsertOutPut_DirectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOutPut_DirectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OutPut_Direction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_OutPut_Direction() {
            object[] results = this.Invoke("Get_OutPut_Direction", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_OutPut_DirectionAsync() {
            this.Get_OutPut_DirectionAsync(null);
        }
        
        /// <remarks/>
        public void Get_OutPut_DirectionAsync(object userState) {
            if ((this.Get_OutPut_DirectionOperationCompleted == null)) {
                this.Get_OutPut_DirectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_OutPut_DirectionOperationCompleted);
            }
            this.InvokeAsync("Get_OutPut_Direction", new object[0], this.Get_OutPut_DirectionOperationCompleted, userState);
        }
        
        private void OnGet_OutPut_DirectionOperationCompleted(object arg) {
            if ((this.Get_OutPut_DirectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_OutPut_DirectionCompleted(this, new Get_OutPut_DirectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOutPut_Direction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOutPut_Direction(string ID) {
            this.Invoke("DeleteOutPut_Direction", new object[] {
                        ID});
        }
        
        /// <remarks/>
        public void DeleteOutPut_DirectionAsync(string ID) {
            this.DeleteOutPut_DirectionAsync(ID, null);
        }
        
        /// <remarks/>
        public void DeleteOutPut_DirectionAsync(string ID, object userState) {
            if ((this.DeleteOutPut_DirectionOperationCompleted == null)) {
                this.DeleteOutPut_DirectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOutPut_DirectionOperationCompleted);
            }
            this.InvokeAsync("DeleteOutPut_Direction", new object[] {
                        ID}, this.DeleteOutPut_DirectionOperationCompleted, userState);
        }
        
        private void OnDeleteOutPut_DirectionOperationCompleted(object arg) {
            if ((this.DeleteOutPut_DirectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOutPut_DirectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OutPut_Direction_Size", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_OutPut_Direction_Size(string sProductType, string Size) {
            object[] results = this.Invoke("Get_OutPut_Direction_Size", new object[] {
                        sProductType,
                        Size});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_OutPut_Direction_SizeAsync(string sProductType, string Size) {
            this.Get_OutPut_Direction_SizeAsync(sProductType, Size, null);
        }
        
        /// <remarks/>
        public void Get_OutPut_Direction_SizeAsync(string sProductType, string Size, object userState) {
            if ((this.Get_OutPut_Direction_SizeOperationCompleted == null)) {
                this.Get_OutPut_Direction_SizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_OutPut_Direction_SizeOperationCompleted);
            }
            this.InvokeAsync("Get_OutPut_Direction_Size", new object[] {
                        sProductType,
                        Size}, this.Get_OutPut_Direction_SizeOperationCompleted, userState);
        }
        
        private void OnGet_OutPut_Direction_SizeOperationCompleted(object arg) {
            if ((this.Get_OutPut_Direction_SizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_OutPut_Direction_SizeCompleted(this, new Get_OutPut_Direction_SizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheSumByPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetTheSumByPage(string sOrderDate) {
            object[] results = this.Invoke("GetTheSumByPage", new object[] {
                        sOrderDate});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTheSumByPageAsync(string sOrderDate) {
            this.GetTheSumByPageAsync(sOrderDate, null);
        }
        
        /// <remarks/>
        public void GetTheSumByPageAsync(string sOrderDate, object userState) {
            if ((this.GetTheSumByPageOperationCompleted == null)) {
                this.GetTheSumByPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheSumByPageOperationCompleted);
            }
            this.InvokeAsync("GetTheSumByPage", new object[] {
                        sOrderDate}, this.GetTheSumByPageOperationCompleted, userState);
        }
        
        private void OnGetTheSumByPageOperationCompleted(object arg) {
            if ((this.GetTheSumByPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheSumByPageCompleted(this, new GetTheSumByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOutPut_OpType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOutPut_OpType(string sql) {
            this.Invoke("UpdateOutPut_OpType", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void UpdateOutPut_OpTypeAsync(string sql) {
            this.UpdateOutPut_OpTypeAsync(sql, null);
        }
        
        /// <remarks/>
        public void UpdateOutPut_OpTypeAsync(string sql, object userState) {
            if ((this.UpdateOutPut_OpTypeOperationCompleted == null)) {
                this.UpdateOutPut_OpTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOutPut_OpTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateOutPut_OpType", new object[] {
                        sql}, this.UpdateOutPut_OpTypeOperationCompleted, userState);
        }
        
        private void OnUpdateOutPut_OpTypeOperationCompleted(object arg) {
            if ((this.UpdateOutPut_OpTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOutPut_OpTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Products_Size", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Products_Size(string sql) {
            object[] results = this.Invoke("Get_Products_Size", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Products_SizeAsync(string sql) {
            this.Get_Products_SizeAsync(sql, null);
        }
        
        /// <remarks/>
        public void Get_Products_SizeAsync(string sql, object userState) {
            if ((this.Get_Products_SizeOperationCompleted == null)) {
                this.Get_Products_SizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Products_SizeOperationCompleted);
            }
            this.InvokeAsync("Get_Products_Size", new object[] {
                        sql}, this.Get_Products_SizeOperationCompleted, userState);
        }
        
        private void OnGet_Products_SizeOperationCompleted(object arg) {
            if ((this.Get_Products_SizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Products_SizeCompleted(this, new Get_Products_SizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchStock(string sql) {
            object[] results = this.Invoke("SearchStock", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchStockAsync(string sql) {
            this.SearchStockAsync(sql, null);
        }
        
        /// <remarks/>
        public void SearchStockAsync(string sql, object userState) {
            if ((this.SearchStockOperationCompleted == null)) {
                this.SearchStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchStockOperationCompleted);
            }
            this.InvokeAsync("SearchStock", new object[] {
                        sql}, this.SearchStockOperationCompleted, userState);
        }
        
        private void OnSearchStockOperationCompleted(object arg) {
            if ((this.SearchStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchStockCompleted(this, new SearchStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStock(string sProductNO, string sIsStock, string sPSI_Way, string sWarning, string sPSI_Unit, string sLoss, string sPSI_Supplier, string sProductMem, string sIsDelete) {
            object[] results = this.Invoke("UpdateStock", new object[] {
                        sProductNO,
                        sIsStock,
                        sPSI_Way,
                        sWarning,
                        sPSI_Unit,
                        sLoss,
                        sPSI_Supplier,
                        sProductMem,
                        sIsDelete});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStockAsync(string sProductNO, string sIsStock, string sPSI_Way, string sWarning, string sPSI_Unit, string sLoss, string sPSI_Supplier, string sProductMem, string sIsDelete) {
            this.UpdateStockAsync(sProductNO, sIsStock, sPSI_Way, sWarning, sPSI_Unit, sLoss, sPSI_Supplier, sProductMem, sIsDelete, null);
        }
        
        /// <remarks/>
        public void UpdateStockAsync(string sProductNO, string sIsStock, string sPSI_Way, string sWarning, string sPSI_Unit, string sLoss, string sPSI_Supplier, string sProductMem, string sIsDelete, object userState) {
            if ((this.UpdateStockOperationCompleted == null)) {
                this.UpdateStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStockOperationCompleted);
            }
            this.InvokeAsync("UpdateStock", new object[] {
                        sProductNO,
                        sIsStock,
                        sPSI_Way,
                        sWarning,
                        sPSI_Unit,
                        sLoss,
                        sPSI_Supplier,
                        sProductMem,
                        sIsDelete}, this.UpdateStockOperationCompleted, userState);
        }
        
        private void OnUpdateStockOperationCompleted(object arg) {
            if ((this.UpdateStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStockCompleted(this, new UpdateStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StockEnter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockEnter(string sProductNO, string Reserve, string sUnit, string sPSI_Memory, string sExcuter, string sExcuteDate) {
            object[] results = this.Invoke("StockEnter", new object[] {
                        sProductNO,
                        Reserve,
                        sUnit,
                        sPSI_Memory,
                        sExcuter,
                        sExcuteDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StockEnterAsync(string sProductNO, string Reserve, string sUnit, string sPSI_Memory, string sExcuter, string sExcuteDate) {
            this.StockEnterAsync(sProductNO, Reserve, sUnit, sPSI_Memory, sExcuter, sExcuteDate, null);
        }
        
        /// <remarks/>
        public void StockEnterAsync(string sProductNO, string Reserve, string sUnit, string sPSI_Memory, string sExcuter, string sExcuteDate, object userState) {
            if ((this.StockEnterOperationCompleted == null)) {
                this.StockEnterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockEnterOperationCompleted);
            }
            this.InvokeAsync("StockEnter", new object[] {
                        sProductNO,
                        Reserve,
                        sUnit,
                        sPSI_Memory,
                        sExcuter,
                        sExcuteDate}, this.StockEnterOperationCompleted, userState);
        }
        
        private void OnStockEnterOperationCompleted(object arg) {
            if ((this.StockEnterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockEnterCompleted(this, new StockEnterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchStockLogo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchStockLogo(string sql) {
            object[] results = this.Invoke("SearchStockLogo", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchStockLogoAsync(string sql) {
            this.SearchStockLogoAsync(sql, null);
        }
        
        /// <remarks/>
        public void SearchStockLogoAsync(string sql, object userState) {
            if ((this.SearchStockLogoOperationCompleted == null)) {
                this.SearchStockLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchStockLogoOperationCompleted);
            }
            this.InvokeAsync("SearchStockLogo", new object[] {
                        sql}, this.SearchStockLogoOperationCompleted, userState);
        }
        
        private void OnSearchStockLogoOperationCompleted(object arg) {
            if ((this.SearchStockLogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchStockLogoCompleted(this, new SearchStockLogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchSupplier(string sql) {
            object[] results = this.Invoke("SearchSupplier", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchSupplierAsync(string sql) {
            this.SearchSupplierAsync(sql, null);
        }
        
        /// <remarks/>
        public void SearchSupplierAsync(string sql, object userState) {
            if ((this.SearchSupplierOperationCompleted == null)) {
                this.SearchSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchSupplierOperationCompleted);
            }
            this.InvokeAsync("SearchSupplier", new object[] {
                        sql}, this.SearchSupplierOperationCompleted, userState);
        }
        
        private void OnSearchSupplierOperationCompleted(object arg) {
            if ((this.SearchSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchSupplierCompleted(this, new SearchSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertSupplier(string sSupplierNO, string sSupplierName, string sSupplierPhone, string sSupplierAddress) {
            object[] results = this.Invoke("InsertSupplier", new object[] {
                        sSupplierNO,
                        sSupplierName,
                        sSupplierPhone,
                        sSupplierAddress});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSupplierAsync(string sSupplierNO, string sSupplierName, string sSupplierPhone, string sSupplierAddress) {
            this.InsertSupplierAsync(sSupplierNO, sSupplierName, sSupplierPhone, sSupplierAddress, null);
        }
        
        /// <remarks/>
        public void InsertSupplierAsync(string sSupplierNO, string sSupplierName, string sSupplierPhone, string sSupplierAddress, object userState) {
            if ((this.InsertSupplierOperationCompleted == null)) {
                this.InsertSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSupplierOperationCompleted);
            }
            this.InvokeAsync("InsertSupplier", new object[] {
                        sSupplierNO,
                        sSupplierName,
                        sSupplierPhone,
                        sSupplierAddress}, this.InsertSupplierOperationCompleted, userState);
        }
        
        private void OnInsertSupplierOperationCompleted(object arg) {
            if ((this.InsertSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSupplierCompleted(this, new InsertSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSupplier(string sSupplierNO, string sSupplierName, string sSupplierPhone, string sSupplierAddress, string sIsDelete) {
            object[] results = this.Invoke("UpdateSupplier", new object[] {
                        sSupplierNO,
                        sSupplierName,
                        sSupplierPhone,
                        sSupplierAddress,
                        sIsDelete});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSupplierAsync(string sSupplierNO, string sSupplierName, string sSupplierPhone, string sSupplierAddress, string sIsDelete) {
            this.UpdateSupplierAsync(sSupplierNO, sSupplierName, sSupplierPhone, sSupplierAddress, sIsDelete, null);
        }
        
        /// <remarks/>
        public void UpdateSupplierAsync(string sSupplierNO, string sSupplierName, string sSupplierPhone, string sSupplierAddress, string sIsDelete, object userState) {
            if ((this.UpdateSupplierOperationCompleted == null)) {
                this.UpdateSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSupplierOperationCompleted);
            }
            this.InvokeAsync("UpdateSupplier", new object[] {
                        sSupplierNO,
                        sSupplierName,
                        sSupplierPhone,
                        sSupplierAddress,
                        sIsDelete}, this.UpdateSupplierOperationCompleted, userState);
        }
        
        private void OnUpdateSupplierOperationCompleted(object arg) {
            if ((this.UpdateSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSupplierCompleted(this, new UpdateSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsDeleteSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDeleteSupplier(string sSupplierNO) {
            object[] results = this.Invoke("IsDeleteSupplier", new object[] {
                        sSupplierNO});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDeleteSupplierAsync(string sSupplierNO) {
            this.IsDeleteSupplierAsync(sSupplierNO, null);
        }
        
        /// <remarks/>
        public void IsDeleteSupplierAsync(string sSupplierNO, object userState) {
            if ((this.IsDeleteSupplierOperationCompleted == null)) {
                this.IsDeleteSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDeleteSupplierOperationCompleted);
            }
            this.InvokeAsync("IsDeleteSupplier", new object[] {
                        sSupplierNO}, this.IsDeleteSupplierOperationCompleted, userState);
        }
        
        private void OnIsDeleteSupplierOperationCompleted(object arg) {
            if ((this.IsDeleteSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDeleteSupplierCompleted(this, new IsDeleteSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_workback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insert_workback(string[] OrderNO, string[] OrderIndex, string[] sSeparateOrder, string sTime, string sWorkInfo) {
            object[] results = this.Invoke("Insert_workback", new object[] {
                        OrderNO,
                        OrderIndex,
                        sSeparateOrder,
                        sTime,
                        sWorkInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_workbackAsync(string[] OrderNO, string[] OrderIndex, string[] sSeparateOrder, string sTime, string sWorkInfo) {
            this.Insert_workbackAsync(OrderNO, OrderIndex, sSeparateOrder, sTime, sWorkInfo, null);
        }
        
        /// <remarks/>
        public void Insert_workbackAsync(string[] OrderNO, string[] OrderIndex, string[] sSeparateOrder, string sTime, string sWorkInfo, object userState) {
            if ((this.Insert_workbackOperationCompleted == null)) {
                this.Insert_workbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_workbackOperationCompleted);
            }
            this.InvokeAsync("Insert_workback", new object[] {
                        OrderNO,
                        OrderIndex,
                        sSeparateOrder,
                        sTime,
                        sWorkInfo}, this.Insert_workbackOperationCompleted, userState);
        }
        
        private void OnInsert_workbackOperationCompleted(object arg) {
            if ((this.Insert_workbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_workbackCompleted(this, new Insert_workbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdersInfoAndOrders_WorkBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrdersInfoAndOrders_WorkBack(string Sql) {
            object[] results = this.Invoke("GetOrdersInfoAndOrders_WorkBack", new object[] {
                        Sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersInfoAndOrders_WorkBackAsync(string Sql) {
            this.GetOrdersInfoAndOrders_WorkBackAsync(Sql, null);
        }
        
        /// <remarks/>
        public void GetOrdersInfoAndOrders_WorkBackAsync(string Sql, object userState) {
            if ((this.GetOrdersInfoAndOrders_WorkBackOperationCompleted == null)) {
                this.GetOrdersInfoAndOrders_WorkBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersInfoAndOrders_WorkBackOperationCompleted);
            }
            this.InvokeAsync("GetOrdersInfoAndOrders_WorkBack", new object[] {
                        Sql}, this.GetOrdersInfoAndOrders_WorkBackOperationCompleted, userState);
        }
        
        private void OnGetOrdersInfoAndOrders_WorkBackOperationCompleted(object arg) {
            if ((this.GetOrdersInfoAndOrders_WorkBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersInfoAndOrders_WorkBackCompleted(this, new GetOrdersInfoAndOrders_WorkBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Path", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateOrders_Path(string sPath1, string sPath2) {
            object[] results = this.Invoke("UpdateOrders_Path", new object[] {
                        sPath1,
                        sPath2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrders_PathAsync(string sPath1, string sPath2) {
            this.UpdateOrders_PathAsync(sPath1, sPath2, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_PathAsync(string sPath1, string sPath2, object userState) {
            if ((this.UpdateOrders_PathOperationCompleted == null)) {
                this.UpdateOrders_PathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_PathOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Path", new object[] {
                        sPath1,
                        sPath2}, this.UpdateOrders_PathOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_PathOperationCompleted(object arg) {
            if ((this.UpdateOrders_PathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_PathCompleted(this, new UpdateOrders_PathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_SCFS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_SCFS(string sOrderNO, string sOrderIndex, string SCFS) {
            this.Invoke("UpdateOrders_Products_SCFS", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        SCFS});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_SCFSAsync(string sOrderNO, string sOrderIndex, string SCFS) {
            this.UpdateOrders_Products_SCFSAsync(sOrderNO, sOrderIndex, SCFS, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_SCFSAsync(string sOrderNO, string sOrderIndex, string SCFS, object userState) {
            if ((this.UpdateOrders_Products_SCFSOperationCompleted == null)) {
                this.UpdateOrders_Products_SCFSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_SCFSOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_SCFS", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        SCFS}, this.UpdateOrders_Products_SCFSOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_SCFSOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_SCFSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_SCFSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWork_Time", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateWork_Time(string[] OrdersNo, string[] sOrderIndex, string EmployeeName, string DoumentName, string time) {
            this.Invoke("UpdateWork_Time", new object[] {
                        OrdersNo,
                        sOrderIndex,
                        EmployeeName,
                        DoumentName,
                        time});
        }
        
        /// <remarks/>
        public void UpdateWork_TimeAsync(string[] OrdersNo, string[] sOrderIndex, string EmployeeName, string DoumentName, string time) {
            this.UpdateWork_TimeAsync(OrdersNo, sOrderIndex, EmployeeName, DoumentName, time, null);
        }
        
        /// <remarks/>
        public void UpdateWork_TimeAsync(string[] OrdersNo, string[] sOrderIndex, string EmployeeName, string DoumentName, string time, object userState) {
            if ((this.UpdateWork_TimeOperationCompleted == null)) {
                this.UpdateWork_TimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWork_TimeOperationCompleted);
            }
            this.InvokeAsync("UpdateWork_Time", new object[] {
                        OrdersNo,
                        sOrderIndex,
                        EmployeeName,
                        DoumentName,
                        time}, this.UpdateWork_TimeOperationCompleted, userState);
        }
        
        private void OnUpdateWork_TimeOperationCompleted(object arg) {
            if ((this.UpdateWork_TimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWork_TimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWorkShop_Time", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateWorkShop_Time(string[] OrdersNo, string[] sOrderIndex, string time) {
            this.Invoke("UpdateWorkShop_Time", new object[] {
                        OrdersNo,
                        sOrderIndex,
                        time});
        }
        
        /// <remarks/>
        public void UpdateWorkShop_TimeAsync(string[] OrdersNo, string[] sOrderIndex, string time) {
            this.UpdateWorkShop_TimeAsync(OrdersNo, sOrderIndex, time, null);
        }
        
        /// <remarks/>
        public void UpdateWorkShop_TimeAsync(string[] OrdersNo, string[] sOrderIndex, string time, object userState) {
            if ((this.UpdateWorkShop_TimeOperationCompleted == null)) {
                this.UpdateWorkShop_TimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkShop_TimeOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkShop_Time", new object[] {
                        OrdersNo,
                        sOrderIndex,
                        time}, this.UpdateWorkShop_TimeOperationCompleted, userState);
        }
        
        private void OnUpdateWorkShop_TimeOperationCompleted(object arg) {
            if ((this.UpdateWorkShop_TimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkShop_TimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Count_ProductsPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Count_ProductsPrice(string sSql) {
            object[] results = this.Invoke("Count_ProductsPrice", new object[] {
                        sSql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Count_ProductsPriceAsync(string sSql) {
            this.Count_ProductsPriceAsync(sSql, null);
        }
        
        /// <remarks/>
        public void Count_ProductsPriceAsync(string sSql, object userState) {
            if ((this.Count_ProductsPriceOperationCompleted == null)) {
                this.Count_ProductsPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCount_ProductsPriceOperationCompleted);
            }
            this.InvokeAsync("Count_ProductsPrice", new object[] {
                        sSql}, this.Count_ProductsPriceOperationCompleted, userState);
        }
        
        private void OnCount_ProductsPriceOperationCompleted(object arg) {
            if ((this.Count_ProductsPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Count_ProductsPriceCompleted(this, new Count_ProductsPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Orders_Products_OrderMemory_Product_back", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_Orders_Products_OrderMemory_Product_back(string sSql) {
            this.Invoke("Insert_Orders_Products_OrderMemory_Product_back", new object[] {
                        sSql});
        }
        
        /// <remarks/>
        public void Insert_Orders_Products_OrderMemory_Product_backAsync(string sSql) {
            this.Insert_Orders_Products_OrderMemory_Product_backAsync(sSql, null);
        }
        
        /// <remarks/>
        public void Insert_Orders_Products_OrderMemory_Product_backAsync(string sSql, object userState) {
            if ((this.Insert_Orders_Products_OrderMemory_Product_backOperationCompleted == null)) {
                this.Insert_Orders_Products_OrderMemory_Product_backOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Orders_Products_OrderMemory_Product_backOperationCompleted);
            }
            this.InvokeAsync("Insert_Orders_Products_OrderMemory_Product_back", new object[] {
                        sSql}, this.Insert_Orders_Products_OrderMemory_Product_backOperationCompleted, userState);
        }
        
        private void OnInsert_Orders_Products_OrderMemory_Product_backOperationCompleted(object arg) {
            if ((this.Insert_Orders_Products_OrderMemory_Product_backCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Orders_Products_OrderMemory_Product_backCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selset_Product_back", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selset_Product_back(string sSql) {
            object[] results = this.Invoke("selset_Product_back", new object[] {
                        sSql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selset_Product_backAsync(string sSql) {
            this.selset_Product_backAsync(sSql, null);
        }
        
        /// <remarks/>
        public void selset_Product_backAsync(string sSql, object userState) {
            if ((this.selset_Product_backOperationCompleted == null)) {
                this.selset_Product_backOperationCompleted = new System.Threading.SendOrPostCallback(this.Onselset_Product_backOperationCompleted);
            }
            this.InvokeAsync("selset_Product_back", new object[] {
                        sSql}, this.selset_Product_backOperationCompleted, userState);
        }
        
        private void Onselset_Product_backOperationCompleted(object arg) {
            if ((this.selset_Product_backCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selset_Product_backCompleted(this, new selset_Product_backCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BarCodes_back", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_BarCodes_back(string[] sID) {
            object[] results = this.Invoke("Get_BarCodes_back", new object[] {
                        sID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BarCodes_backAsync(string[] sID) {
            this.Get_BarCodes_backAsync(sID, null);
        }
        
        /// <remarks/>
        public void Get_BarCodes_backAsync(string[] sID, object userState) {
            if ((this.Get_BarCodes_backOperationCompleted == null)) {
                this.Get_BarCodes_backOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BarCodes_backOperationCompleted);
            }
            this.InvokeAsync("Get_BarCodes_back", new object[] {
                        sID}, this.Get_BarCodes_backOperationCompleted, userState);
        }
        
        private void OnGet_BarCodes_backOperationCompleted(object arg) {
            if ((this.Get_BarCodes_backCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BarCodes_backCompleted(this, new Get_BarCodes_backCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Orders_Products_OrderMemory_Product_back", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Orders_Products_OrderMemory_Product_back(string sID) {
            this.Invoke("Update_Orders_Products_OrderMemory_Product_back", new object[] {
                        sID});
        }
        
        /// <remarks/>
        public void Update_Orders_Products_OrderMemory_Product_backAsync(string sID) {
            this.Update_Orders_Products_OrderMemory_Product_backAsync(sID, null);
        }
        
        /// <remarks/>
        public void Update_Orders_Products_OrderMemory_Product_backAsync(string sID, object userState) {
            if ((this.Update_Orders_Products_OrderMemory_Product_backOperationCompleted == null)) {
                this.Update_Orders_Products_OrderMemory_Product_backOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Orders_Products_OrderMemory_Product_backOperationCompleted);
            }
            this.InvokeAsync("Update_Orders_Products_OrderMemory_Product_back", new object[] {
                        sID}, this.Update_Orders_Products_OrderMemory_Product_backOperationCompleted, userState);
        }
        
        private void OnUpdate_Orders_Products_OrderMemory_Product_backOperationCompleted(object arg) {
            if ((this.Update_Orders_Products_OrderMemory_Product_backCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Orders_Products_OrderMemory_Product_backCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Report_Back", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_Report_Back(string sRpNo, string sRpName, string sRpFile, string[] sID, string[] sRpNumber, string sCreater, string sCreateDate) {
            this.Invoke("Insert_Report_Back", new object[] {
                        sRpNo,
                        sRpName,
                        sRpFile,
                        sID,
                        sRpNumber,
                        sCreater,
                        sCreateDate});
        }
        
        /// <remarks/>
        public void Insert_Report_BackAsync(string sRpNo, string sRpName, string sRpFile, string[] sID, string[] sRpNumber, string sCreater, string sCreateDate) {
            this.Insert_Report_BackAsync(sRpNo, sRpName, sRpFile, sID, sRpNumber, sCreater, sCreateDate, null);
        }
        
        /// <remarks/>
        public void Insert_Report_BackAsync(string sRpNo, string sRpName, string sRpFile, string[] sID, string[] sRpNumber, string sCreater, string sCreateDate, object userState) {
            if ((this.Insert_Report_BackOperationCompleted == null)) {
                this.Insert_Report_BackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Report_BackOperationCompleted);
            }
            this.InvokeAsync("Insert_Report_Back", new object[] {
                        sRpNo,
                        sRpName,
                        sRpFile,
                        sID,
                        sRpNumber,
                        sCreater,
                        sCreateDate}, this.Insert_Report_BackOperationCompleted, userState);
        }
        
        private void OnInsert_Report_BackOperationCompleted(object arg) {
            if ((this.Insert_Report_BackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Report_BackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Reports_Back", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Reports_Back(string sReNo, string No) {
            object[] results = this.Invoke("Get_Reports_Back", new object[] {
                        sReNo,
                        No});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Reports_BackAsync(string sReNo, string No) {
            this.Get_Reports_BackAsync(sReNo, No, null);
        }
        
        /// <remarks/>
        public void Get_Reports_BackAsync(string sReNo, string No, object userState) {
            if ((this.Get_Reports_BackOperationCompleted == null)) {
                this.Get_Reports_BackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Reports_BackOperationCompleted);
            }
            this.InvokeAsync("Get_Reports_Back", new object[] {
                        sReNo,
                        No}, this.Get_Reports_BackOperationCompleted, userState);
        }
        
        private void OnGet_Reports_BackOperationCompleted(object arg) {
            if ((this.Get_Reports_BackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Reports_BackCompleted(this, new Get_Reports_BackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProductTypeCount_XC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ProductTypeCount_XC(string sql) {
            object[] results = this.Invoke("ProductTypeCount_XC", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ProductTypeCount_XCAsync(string sql) {
            this.ProductTypeCount_XCAsync(sql, null);
        }
        
        /// <remarks/>
        public void ProductTypeCount_XCAsync(string sql, object userState) {
            if ((this.ProductTypeCount_XCOperationCompleted == null)) {
                this.ProductTypeCount_XCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductTypeCount_XCOperationCompleted);
            }
            this.InvokeAsync("ProductTypeCount_XC", new object[] {
                        sql}, this.ProductTypeCount_XCOperationCompleted, userState);
        }
        
        private void OnProductTypeCount_XCOperationCompleted(object arg) {
            if ((this.ProductTypeCount_XCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductTypeCount_XCCompleted(this, new ProductTypeCount_XCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Count_Prices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Count_Prices(string Products_No, string Hight, string Width) {
            object[] results = this.Invoke("Count_Prices", new object[] {
                        Products_No,
                        Hight,
                        Width});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Count_PricesAsync(string Products_No, string Hight, string Width) {
            this.Count_PricesAsync(Products_No, Hight, Width, null);
        }
        
        /// <remarks/>
        public void Count_PricesAsync(string Products_No, string Hight, string Width, object userState) {
            if ((this.Count_PricesOperationCompleted == null)) {
                this.Count_PricesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCount_PricesOperationCompleted);
            }
            this.InvokeAsync("Count_Prices", new object[] {
                        Products_No,
                        Hight,
                        Width}, this.Count_PricesOperationCompleted, userState);
        }
        
        private void OnCount_PricesOperationCompleted(object arg) {
            if ((this.Count_PricesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Count_PricesCompleted(this, new Count_PricesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_JoinProductTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_JoinProductTime(string sOrderNO, string sOrderIndex, string sJoinProductTime) {
            this.Invoke("UpdateOrders_Products_JoinProductTime", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sJoinProductTime});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_JoinProductTimeAsync(string sOrderNO, string sOrderIndex, string sJoinProductTime) {
            this.UpdateOrders_Products_JoinProductTimeAsync(sOrderNO, sOrderIndex, sJoinProductTime, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_JoinProductTimeAsync(string sOrderNO, string sOrderIndex, string sJoinProductTime, object userState) {
            if ((this.UpdateOrders_Products_JoinProductTimeOperationCompleted == null)) {
                this.UpdateOrders_Products_JoinProductTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_JoinProductTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_JoinProductTime", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sJoinProductTime}, this.UpdateOrders_Products_JoinProductTimeOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_JoinProductTimeOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_JoinProductTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_JoinProductTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_OutProductTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_OutProductTime(string sOrderNO, string sOrderIndex, string sOutProductTime) {
            this.Invoke("UpdateOrders_Products_OutProductTime", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutProductTime});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_OutProductTimeAsync(string sOrderNO, string sOrderIndex, string sOutProductTime) {
            this.UpdateOrders_Products_OutProductTimeAsync(sOrderNO, sOrderIndex, sOutProductTime, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_OutProductTimeAsync(string sOrderNO, string sOrderIndex, string sOutProductTime, object userState) {
            if ((this.UpdateOrders_Products_OutProductTimeOperationCompleted == null)) {
                this.UpdateOrders_Products_OutProductTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_OutProductTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_OutProductTime", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutProductTime}, this.UpdateOrders_Products_OutProductTimeOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_OutProductTimeOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_OutProductTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_OutProductTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Orders_Products_OrderMemory_Product_back_CJ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Orders_Products_OrderMemory_Product_back_CJ(string sID, string sEmployeeID, string sBackType) {
            this.Invoke("Update_Orders_Products_OrderMemory_Product_back_CJ", new object[] {
                        sID,
                        sEmployeeID,
                        sBackType});
        }
        
        /// <remarks/>
        public void Update_Orders_Products_OrderMemory_Product_back_CJAsync(string sID, string sEmployeeID, string sBackType) {
            this.Update_Orders_Products_OrderMemory_Product_back_CJAsync(sID, sEmployeeID, sBackType, null);
        }
        
        /// <remarks/>
        public void Update_Orders_Products_OrderMemory_Product_back_CJAsync(string sID, string sEmployeeID, string sBackType, object userState) {
            if ((this.Update_Orders_Products_OrderMemory_Product_back_CJOperationCompleted == null)) {
                this.Update_Orders_Products_OrderMemory_Product_back_CJOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Orders_Products_OrderMemory_Product_back_CJOperationCompleted);
            }
            this.InvokeAsync("Update_Orders_Products_OrderMemory_Product_back_CJ", new object[] {
                        sID,
                        sEmployeeID,
                        sBackType}, this.Update_Orders_Products_OrderMemory_Product_back_CJOperationCompleted, userState);
        }
        
        private void OnUpdate_Orders_Products_OrderMemory_Product_back_CJOperationCompleted(object arg) {
            if ((this.Update_Orders_Products_OrderMemory_Product_back_CJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Orders_Products_OrderMemory_Product_back_CJCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOrders_Products_Back", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOrders_Products_Back(string sID) {
            this.Invoke("DeleteOrders_Products_Back", new object[] {
                        sID});
        }
        
        /// <remarks/>
        public void DeleteOrders_Products_BackAsync(string sID) {
            this.DeleteOrders_Products_BackAsync(sID, null);
        }
        
        /// <remarks/>
        public void DeleteOrders_Products_BackAsync(string sID, object userState) {
            if ((this.DeleteOrders_Products_BackOperationCompleted == null)) {
                this.DeleteOrders_Products_BackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrders_Products_BackOperationCompleted);
            }
            this.InvokeAsync("DeleteOrders_Products_Back", new object[] {
                        sID}, this.DeleteOrders_Products_BackOperationCompleted, userState);
        }
        
        private void OnDeleteOrders_Products_BackOperationCompleted(object arg) {
            if ((this.DeleteOrders_Products_BackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrders_Products_BackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrdersInfo_DD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrdersInfo_DD(
                    string[] OrderNO, 
                    string[] CompanyID, 
                    string[] Customer, 
                    string[] Phone, 
                    string[] Email, 
                    string[] FPH, 
                    string[] Files, 
                    string[] Path1, 
                    string[] Path2, 
                    string[] Path3, 
                    string[] SendWay, 
                    string[] OrderMemory, 
                    string[] OrderDate, 
                    string[] EmployeesID, 
                    string[] EmployeesName, 
                    string[] GetGoodsDate, 
                    string[] IsDelete, 
                    string[] WorkAddress, 
                    string[] TotalCash) {
            this.Invoke("AddOrdersInfo_DD", new object[] {
                        OrderNO,
                        CompanyID,
                        Customer,
                        Phone,
                        Email,
                        FPH,
                        Files,
                        Path1,
                        Path2,
                        Path3,
                        SendWay,
                        OrderMemory,
                        OrderDate,
                        EmployeesID,
                        EmployeesName,
                        GetGoodsDate,
                        IsDelete,
                        WorkAddress,
                        TotalCash});
        }
        
        /// <remarks/>
        public void AddOrdersInfo_DDAsync(
                    string[] OrderNO, 
                    string[] CompanyID, 
                    string[] Customer, 
                    string[] Phone, 
                    string[] Email, 
                    string[] FPH, 
                    string[] Files, 
                    string[] Path1, 
                    string[] Path2, 
                    string[] Path3, 
                    string[] SendWay, 
                    string[] OrderMemory, 
                    string[] OrderDate, 
                    string[] EmployeesID, 
                    string[] EmployeesName, 
                    string[] GetGoodsDate, 
                    string[] IsDelete, 
                    string[] WorkAddress, 
                    string[] TotalCash) {
            this.AddOrdersInfo_DDAsync(OrderNO, CompanyID, Customer, Phone, Email, FPH, Files, Path1, Path2, Path3, SendWay, OrderMemory, OrderDate, EmployeesID, EmployeesName, GetGoodsDate, IsDelete, WorkAddress, TotalCash, null);
        }
        
        /// <remarks/>
        public void AddOrdersInfo_DDAsync(
                    string[] OrderNO, 
                    string[] CompanyID, 
                    string[] Customer, 
                    string[] Phone, 
                    string[] Email, 
                    string[] FPH, 
                    string[] Files, 
                    string[] Path1, 
                    string[] Path2, 
                    string[] Path3, 
                    string[] SendWay, 
                    string[] OrderMemory, 
                    string[] OrderDate, 
                    string[] EmployeesID, 
                    string[] EmployeesName, 
                    string[] GetGoodsDate, 
                    string[] IsDelete, 
                    string[] WorkAddress, 
                    string[] TotalCash, 
                    object userState) {
            if ((this.AddOrdersInfo_DDOperationCompleted == null)) {
                this.AddOrdersInfo_DDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrdersInfo_DDOperationCompleted);
            }
            this.InvokeAsync("AddOrdersInfo_DD", new object[] {
                        OrderNO,
                        CompanyID,
                        Customer,
                        Phone,
                        Email,
                        FPH,
                        Files,
                        Path1,
                        Path2,
                        Path3,
                        SendWay,
                        OrderMemory,
                        OrderDate,
                        EmployeesID,
                        EmployeesName,
                        GetGoodsDate,
                        IsDelete,
                        WorkAddress,
                        TotalCash}, this.AddOrdersInfo_DDOperationCompleted, userState);
        }
        
        private void OnAddOrdersInfo_DDOperationCompleted(object arg) {
            if ((this.AddOrdersInfo_DDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrdersInfo_DDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrders_ProductsInfo_XX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrders_ProductsInfo_XX(
                    string OrderNO, 
                    string OrderIndex, 
                    string ProductNO, 
                    string Box, 
                    string Hight, 
                    string Width, 
                    string Unit, 
                    string Page, 
                    string ProductNumber, 
                    string Paper, 
                    string Add_Photo, 
                    string Gold_Paper, 
                    string Customer_Confirm1, 
                    string Customer_Confirm2, 
                    string film, 
                    string InsidePage, 
                    string Biao, 
                    string Ban, 
                    string Diao, 
                    string Price1, 
                    string Price2, 
                    string SCFS, 
                    string OrderMemory, 
                    string WorkMemory, 
                    string GetGoodsType, 
                    string GetGoodsDate, 
                    string Process, 
                    string Output, 
                    string OrderDate, 
                    string OrderEmployee, 
                    string ProductType, 
                    string Department, 
                    string EmployeeName, 
                    string WorkAddress, 
                    string WorkNumber, 
                    string BackProductTypeNO, 
                    double SCZXPrice, 
                    double XCPrice, 
                    double XKPrice, 
                    string Fram, 
                    double JYBPrice) {
            this.Invoke("AddOrders_ProductsInfo_XX", new object[] {
                        OrderNO,
                        OrderIndex,
                        ProductNO,
                        Box,
                        Hight,
                        Width,
                        Unit,
                        Page,
                        ProductNumber,
                        Paper,
                        Add_Photo,
                        Gold_Paper,
                        Customer_Confirm1,
                        Customer_Confirm2,
                        film,
                        InsidePage,
                        Biao,
                        Ban,
                        Diao,
                        Price1,
                        Price2,
                        SCFS,
                        OrderMemory,
                        WorkMemory,
                        GetGoodsType,
                        GetGoodsDate,
                        Process,
                        Output,
                        OrderDate,
                        OrderEmployee,
                        ProductType,
                        Department,
                        EmployeeName,
                        WorkAddress,
                        WorkNumber,
                        BackProductTypeNO,
                        SCZXPrice,
                        XCPrice,
                        XKPrice,
                        Fram,
                        JYBPrice});
        }
        
        /// <remarks/>
        public void AddOrders_ProductsInfo_XXAsync(
                    string OrderNO, 
                    string OrderIndex, 
                    string ProductNO, 
                    string Box, 
                    string Hight, 
                    string Width, 
                    string Unit, 
                    string Page, 
                    string ProductNumber, 
                    string Paper, 
                    string Add_Photo, 
                    string Gold_Paper, 
                    string Customer_Confirm1, 
                    string Customer_Confirm2, 
                    string film, 
                    string InsidePage, 
                    string Biao, 
                    string Ban, 
                    string Diao, 
                    string Price1, 
                    string Price2, 
                    string SCFS, 
                    string OrderMemory, 
                    string WorkMemory, 
                    string GetGoodsType, 
                    string GetGoodsDate, 
                    string Process, 
                    string Output, 
                    string OrderDate, 
                    string OrderEmployee, 
                    string ProductType, 
                    string Department, 
                    string EmployeeName, 
                    string WorkAddress, 
                    string WorkNumber, 
                    string BackProductTypeNO, 
                    double SCZXPrice, 
                    double XCPrice, 
                    double XKPrice, 
                    string Fram, 
                    double JYBPrice) {
            this.AddOrders_ProductsInfo_XXAsync(OrderNO, OrderIndex, ProductNO, Box, Hight, Width, Unit, Page, ProductNumber, Paper, Add_Photo, Gold_Paper, Customer_Confirm1, Customer_Confirm2, film, InsidePage, Biao, Ban, Diao, Price1, Price2, SCFS, OrderMemory, WorkMemory, GetGoodsType, GetGoodsDate, Process, Output, OrderDate, OrderEmployee, ProductType, Department, EmployeeName, WorkAddress, WorkNumber, BackProductTypeNO, SCZXPrice, XCPrice, XKPrice, Fram, JYBPrice, null);
        }
        
        /// <remarks/>
        public void AddOrders_ProductsInfo_XXAsync(
                    string OrderNO, 
                    string OrderIndex, 
                    string ProductNO, 
                    string Box, 
                    string Hight, 
                    string Width, 
                    string Unit, 
                    string Page, 
                    string ProductNumber, 
                    string Paper, 
                    string Add_Photo, 
                    string Gold_Paper, 
                    string Customer_Confirm1, 
                    string Customer_Confirm2, 
                    string film, 
                    string InsidePage, 
                    string Biao, 
                    string Ban, 
                    string Diao, 
                    string Price1, 
                    string Price2, 
                    string SCFS, 
                    string OrderMemory, 
                    string WorkMemory, 
                    string GetGoodsType, 
                    string GetGoodsDate, 
                    string Process, 
                    string Output, 
                    string OrderDate, 
                    string OrderEmployee, 
                    string ProductType, 
                    string Department, 
                    string EmployeeName, 
                    string WorkAddress, 
                    string WorkNumber, 
                    string BackProductTypeNO, 
                    double SCZXPrice, 
                    double XCPrice, 
                    double XKPrice, 
                    string Fram, 
                    double JYBPrice, 
                    object userState) {
            if ((this.AddOrders_ProductsInfo_XXOperationCompleted == null)) {
                this.AddOrders_ProductsInfo_XXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrders_ProductsInfo_XXOperationCompleted);
            }
            this.InvokeAsync("AddOrders_ProductsInfo_XX", new object[] {
                        OrderNO,
                        OrderIndex,
                        ProductNO,
                        Box,
                        Hight,
                        Width,
                        Unit,
                        Page,
                        ProductNumber,
                        Paper,
                        Add_Photo,
                        Gold_Paper,
                        Customer_Confirm1,
                        Customer_Confirm2,
                        film,
                        InsidePage,
                        Biao,
                        Ban,
                        Diao,
                        Price1,
                        Price2,
                        SCFS,
                        OrderMemory,
                        WorkMemory,
                        GetGoodsType,
                        GetGoodsDate,
                        Process,
                        Output,
                        OrderDate,
                        OrderEmployee,
                        ProductType,
                        Department,
                        EmployeeName,
                        WorkAddress,
                        WorkNumber,
                        BackProductTypeNO,
                        SCZXPrice,
                        XCPrice,
                        XKPrice,
                        Fram,
                        JYBPrice}, this.AddOrders_ProductsInfo_XXOperationCompleted, userState);
        }
        
        private void OnAddOrders_ProductsInfo_XXOperationCompleted(object arg) {
            if ((this.AddOrders_ProductsInfo_XXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrders_ProductsInfo_XXCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrders_ProductsInfo_XX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrders_ProductsInfo_XX(string sProductNo) {
            object[] results = this.Invoke("GetOrders_ProductsInfo_XX", new object[] {
                        sProductNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrders_ProductsInfo_XXAsync(string sProductNo) {
            this.GetOrders_ProductsInfo_XXAsync(sProductNo, null);
        }
        
        /// <remarks/>
        public void GetOrders_ProductsInfo_XXAsync(string sProductNo, object userState) {
            if ((this.GetOrders_ProductsInfo_XXOperationCompleted == null)) {
                this.GetOrders_ProductsInfo_XXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrders_ProductsInfo_XXOperationCompleted);
            }
            this.InvokeAsync("GetOrders_ProductsInfo_XX", new object[] {
                        sProductNo}, this.GetOrders_ProductsInfo_XXOperationCompleted, userState);
        }
        
        private void OnGetOrders_ProductsInfo_XXOperationCompleted(object arg) {
            if ((this.GetOrders_ProductsInfo_XXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrders_ProductsInfo_XXCompleted(this, new GetOrders_ProductsInfo_XXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Orders_Products_OrderMemory_Product_back_CJ_Time", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Orders_Products_OrderMemory_Product_back_CJ_Time(string sID, string sEmployeeID, string sBackType, string sOverTime) {
            this.Invoke("Update_Orders_Products_OrderMemory_Product_back_CJ_Time", new object[] {
                        sID,
                        sEmployeeID,
                        sBackType,
                        sOverTime});
        }
        
        /// <remarks/>
        public void Update_Orders_Products_OrderMemory_Product_back_CJ_TimeAsync(string sID, string sEmployeeID, string sBackType, string sOverTime) {
            this.Update_Orders_Products_OrderMemory_Product_back_CJ_TimeAsync(sID, sEmployeeID, sBackType, sOverTime, null);
        }
        
        /// <remarks/>
        public void Update_Orders_Products_OrderMemory_Product_back_CJ_TimeAsync(string sID, string sEmployeeID, string sBackType, string sOverTime, object userState) {
            if ((this.Update_Orders_Products_OrderMemory_Product_back_CJ_TimeOperationCompleted == null)) {
                this.Update_Orders_Products_OrderMemory_Product_back_CJ_TimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Orders_Products_OrderMemory_Product_back_CJ_TimeOperationCompleted);
            }
            this.InvokeAsync("Update_Orders_Products_OrderMemory_Product_back_CJ_Time", new object[] {
                        sID,
                        sEmployeeID,
                        sBackType,
                        sOverTime}, this.Update_Orders_Products_OrderMemory_Product_back_CJ_TimeOperationCompleted, userState);
        }
        
        private void OnUpdate_Orders_Products_OrderMemory_Product_back_CJ_TimeOperationCompleted(object arg) {
            if ((this.Update_Orders_Products_OrderMemory_Product_back_CJ_TimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Orders_Products_OrderMemory_Product_back_CJ_TimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchProduct(string sSql) {
            object[] results = this.Invoke("SearchProduct", new object[] {
                        sSql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchProductAsync(string sSql) {
            this.SearchProductAsync(sSql, null);
        }
        
        /// <remarks/>
        public void SearchProductAsync(string sSql, object userState) {
            if ((this.SearchProductOperationCompleted == null)) {
                this.SearchProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchProductOperationCompleted);
            }
            this.InvokeAsync("SearchProduct", new object[] {
                        sSql}, this.SearchProductOperationCompleted, userState);
        }
        
        private void OnSearchProductOperationCompleted(object arg) {
            if ((this.SearchProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchProductCompleted(this, new SearchProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveProduct(
                    string sProductTypeNO, 
                    string sBackProductTypeNO, 
                    string sBackProductNO, 
                    string sProductNO, 
                    string sProductName, 
                    string sProductSizeA, 
                    string sProductSizeB, 
                    string sFram, 
                    string sBox, 
                    string sUnit, 
                    string sPage, 
                    string sPaper, 
                    string sfilm, 
                    string sInsidePage, 
                    string sBiao, 
                    string sBan, 
                    string sDiao, 
                    string sProductCostPrice, 
                    string sProductSellingPrice, 
                    string sProductDescribe, 
                    string sIsCountNumber, 
                    string sProductNumber, 
                    string sNoticeNumber, 
                    string sCreate, 
                    string sCreateDate, 
                    string sIsDelete) {
            object[] results = this.Invoke("SaveProduct", new object[] {
                        sProductTypeNO,
                        sBackProductTypeNO,
                        sBackProductNO,
                        sProductNO,
                        sProductName,
                        sProductSizeA,
                        sProductSizeB,
                        sFram,
                        sBox,
                        sUnit,
                        sPage,
                        sPaper,
                        sfilm,
                        sInsidePage,
                        sBiao,
                        sBan,
                        sDiao,
                        sProductCostPrice,
                        sProductSellingPrice,
                        sProductDescribe,
                        sIsCountNumber,
                        sProductNumber,
                        sNoticeNumber,
                        sCreate,
                        sCreateDate,
                        sIsDelete});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProductAsync(
                    string sProductTypeNO, 
                    string sBackProductTypeNO, 
                    string sBackProductNO, 
                    string sProductNO, 
                    string sProductName, 
                    string sProductSizeA, 
                    string sProductSizeB, 
                    string sFram, 
                    string sBox, 
                    string sUnit, 
                    string sPage, 
                    string sPaper, 
                    string sfilm, 
                    string sInsidePage, 
                    string sBiao, 
                    string sBan, 
                    string sDiao, 
                    string sProductCostPrice, 
                    string sProductSellingPrice, 
                    string sProductDescribe, 
                    string sIsCountNumber, 
                    string sProductNumber, 
                    string sNoticeNumber, 
                    string sCreate, 
                    string sCreateDate, 
                    string sIsDelete) {
            this.SaveProductAsync(sProductTypeNO, sBackProductTypeNO, sBackProductNO, sProductNO, sProductName, sProductSizeA, sProductSizeB, sFram, sBox, sUnit, sPage, sPaper, sfilm, sInsidePage, sBiao, sBan, sDiao, sProductCostPrice, sProductSellingPrice, sProductDescribe, sIsCountNumber, sProductNumber, sNoticeNumber, sCreate, sCreateDate, sIsDelete, null);
        }
        
        /// <remarks/>
        public void SaveProductAsync(
                    string sProductTypeNO, 
                    string sBackProductTypeNO, 
                    string sBackProductNO, 
                    string sProductNO, 
                    string sProductName, 
                    string sProductSizeA, 
                    string sProductSizeB, 
                    string sFram, 
                    string sBox, 
                    string sUnit, 
                    string sPage, 
                    string sPaper, 
                    string sfilm, 
                    string sInsidePage, 
                    string sBiao, 
                    string sBan, 
                    string sDiao, 
                    string sProductCostPrice, 
                    string sProductSellingPrice, 
                    string sProductDescribe, 
                    string sIsCountNumber, 
                    string sProductNumber, 
                    string sNoticeNumber, 
                    string sCreate, 
                    string sCreateDate, 
                    string sIsDelete, 
                    object userState) {
            if ((this.SaveProductOperationCompleted == null)) {
                this.SaveProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProductOperationCompleted);
            }
            this.InvokeAsync("SaveProduct", new object[] {
                        sProductTypeNO,
                        sBackProductTypeNO,
                        sBackProductNO,
                        sProductNO,
                        sProductName,
                        sProductSizeA,
                        sProductSizeB,
                        sFram,
                        sBox,
                        sUnit,
                        sPage,
                        sPaper,
                        sfilm,
                        sInsidePage,
                        sBiao,
                        sBan,
                        sDiao,
                        sProductCostPrice,
                        sProductSellingPrice,
                        sProductDescribe,
                        sIsCountNumber,
                        sProductNumber,
                        sNoticeNumber,
                        sCreate,
                        sCreateDate,
                        sIsDelete}, this.SaveProductOperationCompleted, userState);
        }
        
        private void OnSaveProductOperationCompleted(object arg) {
            if ((this.SaveProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProductCompleted(this, new SaveProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProduct(
                    string sProductTypeNO, 
                    string sBackProductTypeNO, 
                    string sBackProductNO, 
                    string sProductNO, 
                    string sProductName, 
                    string sProductSizeA, 
                    string sProductSizeB, 
                    string sFram, 
                    string sBox, 
                    string sUnit, 
                    string sPage, 
                    string sPaper, 
                    string sfilm, 
                    string sInsidePage, 
                    string sBiao, 
                    string sBan, 
                    string sDiao, 
                    string sProductCostPrice, 
                    string sProductSellingPrice, 
                    string sProductDescribe, 
                    string sIsCountNumber, 
                    string sProductNumber, 
                    string sNoticeNumber, 
                    string sCreate, 
                    string sCreateDate, 
                    string sIsDelete, 
                    string ID) {
            object[] results = this.Invoke("UpdateProduct", new object[] {
                        sProductTypeNO,
                        sBackProductTypeNO,
                        sBackProductNO,
                        sProductNO,
                        sProductName,
                        sProductSizeA,
                        sProductSizeB,
                        sFram,
                        sBox,
                        sUnit,
                        sPage,
                        sPaper,
                        sfilm,
                        sInsidePage,
                        sBiao,
                        sBan,
                        sDiao,
                        sProductCostPrice,
                        sProductSellingPrice,
                        sProductDescribe,
                        sIsCountNumber,
                        sProductNumber,
                        sNoticeNumber,
                        sCreate,
                        sCreateDate,
                        sIsDelete,
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductAsync(
                    string sProductTypeNO, 
                    string sBackProductTypeNO, 
                    string sBackProductNO, 
                    string sProductNO, 
                    string sProductName, 
                    string sProductSizeA, 
                    string sProductSizeB, 
                    string sFram, 
                    string sBox, 
                    string sUnit, 
                    string sPage, 
                    string sPaper, 
                    string sfilm, 
                    string sInsidePage, 
                    string sBiao, 
                    string sBan, 
                    string sDiao, 
                    string sProductCostPrice, 
                    string sProductSellingPrice, 
                    string sProductDescribe, 
                    string sIsCountNumber, 
                    string sProductNumber, 
                    string sNoticeNumber, 
                    string sCreate, 
                    string sCreateDate, 
                    string sIsDelete, 
                    string ID) {
            this.UpdateProductAsync(sProductTypeNO, sBackProductTypeNO, sBackProductNO, sProductNO, sProductName, sProductSizeA, sProductSizeB, sFram, sBox, sUnit, sPage, sPaper, sfilm, sInsidePage, sBiao, sBan, sDiao, sProductCostPrice, sProductSellingPrice, sProductDescribe, sIsCountNumber, sProductNumber, sNoticeNumber, sCreate, sCreateDate, sIsDelete, ID, null);
        }
        
        /// <remarks/>
        public void UpdateProductAsync(
                    string sProductTypeNO, 
                    string sBackProductTypeNO, 
                    string sBackProductNO, 
                    string sProductNO, 
                    string sProductName, 
                    string sProductSizeA, 
                    string sProductSizeB, 
                    string sFram, 
                    string sBox, 
                    string sUnit, 
                    string sPage, 
                    string sPaper, 
                    string sfilm, 
                    string sInsidePage, 
                    string sBiao, 
                    string sBan, 
                    string sDiao, 
                    string sProductCostPrice, 
                    string sProductSellingPrice, 
                    string sProductDescribe, 
                    string sIsCountNumber, 
                    string sProductNumber, 
                    string sNoticeNumber, 
                    string sCreate, 
                    string sCreateDate, 
                    string sIsDelete, 
                    string ID, 
                    object userState) {
            if ((this.UpdateProductOperationCompleted == null)) {
                this.UpdateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductOperationCompleted);
            }
            this.InvokeAsync("UpdateProduct", new object[] {
                        sProductTypeNO,
                        sBackProductTypeNO,
                        sBackProductNO,
                        sProductNO,
                        sProductName,
                        sProductSizeA,
                        sProductSizeB,
                        sFram,
                        sBox,
                        sUnit,
                        sPage,
                        sPaper,
                        sfilm,
                        sInsidePage,
                        sBiao,
                        sBan,
                        sDiao,
                        sProductCostPrice,
                        sProductSellingPrice,
                        sProductDescribe,
                        sIsCountNumber,
                        sProductNumber,
                        sNoticeNumber,
                        sCreate,
                        sCreateDate,
                        sIsDelete,
                        ID}, this.UpdateProductOperationCompleted, userState);
        }
        
        private void OnUpdateProductOperationCompleted(object arg) {
            if ((this.UpdateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductCompleted(this, new UpdateProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsDeleteProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDeleteProduct(string sProductNO, string sIsDelete) {
            object[] results = this.Invoke("IsDeleteProduct", new object[] {
                        sProductNO,
                        sIsDelete});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDeleteProductAsync(string sProductNO, string sIsDelete) {
            this.IsDeleteProductAsync(sProductNO, sIsDelete, null);
        }
        
        /// <remarks/>
        public void IsDeleteProductAsync(string sProductNO, string sIsDelete, object userState) {
            if ((this.IsDeleteProductOperationCompleted == null)) {
                this.IsDeleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDeleteProductOperationCompleted);
            }
            this.InvokeAsync("IsDeleteProduct", new object[] {
                        sProductNO,
                        sIsDelete}, this.IsDeleteProductOperationCompleted, userState);
        }
        
        private void OnIsDeleteProductOperationCompleted(object arg) {
            if ((this.IsDeleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDeleteProductCompleted(this, new IsDeleteProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Orders_Products_ProductTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Orders_Products_ProductTime(string[] OrderNO, string[] OrderIndex, string OrderEmployee, string EmployeeDepartment) {
            this.Invoke("Update_Orders_Products_ProductTime", new object[] {
                        OrderNO,
                        OrderIndex,
                        OrderEmployee,
                        EmployeeDepartment});
        }
        
        /// <remarks/>
        public void Update_Orders_Products_ProductTimeAsync(string[] OrderNO, string[] OrderIndex, string OrderEmployee, string EmployeeDepartment) {
            this.Update_Orders_Products_ProductTimeAsync(OrderNO, OrderIndex, OrderEmployee, EmployeeDepartment, null);
        }
        
        /// <remarks/>
        public void Update_Orders_Products_ProductTimeAsync(string[] OrderNO, string[] OrderIndex, string OrderEmployee, string EmployeeDepartment, object userState) {
            if ((this.Update_Orders_Products_ProductTimeOperationCompleted == null)) {
                this.Update_Orders_Products_ProductTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Orders_Products_ProductTimeOperationCompleted);
            }
            this.InvokeAsync("Update_Orders_Products_ProductTime", new object[] {
                        OrderNO,
                        OrderIndex,
                        OrderEmployee,
                        EmployeeDepartment}, this.Update_Orders_Products_ProductTimeOperationCompleted, userState);
        }
        
        private void OnUpdate_Orders_Products_ProductTimeOperationCompleted(object arg) {
            if ((this.Update_Orders_Products_ProductTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Orders_Products_ProductTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsDeleteProduct_IsDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDeleteProduct_IsDelete(string sProductNO, string sIsDelete) {
            object[] results = this.Invoke("IsDeleteProduct_IsDelete", new object[] {
                        sProductNO,
                        sIsDelete});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDeleteProduct_IsDeleteAsync(string sProductNO, string sIsDelete) {
            this.IsDeleteProduct_IsDeleteAsync(sProductNO, sIsDelete, null);
        }
        
        /// <remarks/>
        public void IsDeleteProduct_IsDeleteAsync(string sProductNO, string sIsDelete, object userState) {
            if ((this.IsDeleteProduct_IsDeleteOperationCompleted == null)) {
                this.IsDeleteProduct_IsDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDeleteProduct_IsDeleteOperationCompleted);
            }
            this.InvokeAsync("IsDeleteProduct_IsDelete", new object[] {
                        sProductNO,
                        sIsDelete}, this.IsDeleteProduct_IsDeleteOperationCompleted, userState);
        }
        
        private void OnIsDeleteProduct_IsDeleteOperationCompleted(object arg) {
            if ((this.IsDeleteProduct_IsDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDeleteProduct_IsDeleteCompleted(this, new IsDeleteProduct_IsDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmployeeDesignCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmployeeDesignCount(string sql, string DomEnt) {
            object[] results = this.Invoke("EmployeeDesignCount", new object[] {
                        sql,
                        DomEnt});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDesignCountAsync(string sql, string DomEnt) {
            this.EmployeeDesignCountAsync(sql, DomEnt, null);
        }
        
        /// <remarks/>
        public void EmployeeDesignCountAsync(string sql, string DomEnt, object userState) {
            if ((this.EmployeeDesignCountOperationCompleted == null)) {
                this.EmployeeDesignCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDesignCountOperationCompleted);
            }
            this.InvokeAsync("EmployeeDesignCount", new object[] {
                        sql,
                        DomEnt}, this.EmployeeDesignCountOperationCompleted, userState);
        }
        
        private void OnEmployeeDesignCountOperationCompleted(object arg) {
            if ((this.EmployeeDesignCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDesignCountCompleted(this, new EmployeeDesignCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchOrderProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchOrderProducts(string sql) {
            object[] results = this.Invoke("SearchOrderProducts", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchOrderProductsAsync(string sql) {
            this.SearchOrderProductsAsync(sql, null);
        }
        
        /// <remarks/>
        public void SearchOrderProductsAsync(string sql, object userState) {
            if ((this.SearchOrderProductsOperationCompleted == null)) {
                this.SearchOrderProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOrderProductsOperationCompleted);
            }
            this.InvokeAsync("SearchOrderProducts", new object[] {
                        sql}, this.SearchOrderProductsOperationCompleted, userState);
        }
        
        private void OnSearchOrderProductsOperationCompleted(object arg) {
            if ((this.SearchOrderProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchOrderProductsCompleted(this, new SearchOrderProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_JYBTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_JYBTime(string sOrderNO, string sOrderIndex, string sOutProductTime, string sName) {
            this.Invoke("UpdateOrders_Products_JYBTime", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutProductTime,
                        sName});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_JYBTimeAsync(string sOrderNO, string sOrderIndex, string sOutProductTime, string sName) {
            this.UpdateOrders_Products_JYBTimeAsync(sOrderNO, sOrderIndex, sOutProductTime, sName, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_JYBTimeAsync(string sOrderNO, string sOrderIndex, string sOutProductTime, string sName, object userState) {
            if ((this.UpdateOrders_Products_JYBTimeOperationCompleted == null)) {
                this.UpdateOrders_Products_JYBTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_JYBTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_JYBTime", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutProductTime,
                        sName}, this.UpdateOrders_Products_JYBTimeOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_JYBTimeOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_JYBTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_JYBTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_DJTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_DJTime(string sOrderNO, string sOrderIndex, string sOutProductTime, string sName) {
            this.Invoke("UpdateOrders_Products_DJTime", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutProductTime,
                        sName});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_DJTimeAsync(string sOrderNO, string sOrderIndex, string sOutProductTime, string sName) {
            this.UpdateOrders_Products_DJTimeAsync(sOrderNO, sOrderIndex, sOutProductTime, sName, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_DJTimeAsync(string sOrderNO, string sOrderIndex, string sOutProductTime, string sName, object userState) {
            if ((this.UpdateOrders_Products_DJTimeOperationCompleted == null)) {
                this.UpdateOrders_Products_DJTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_DJTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_DJTime", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutProductTime,
                        sName}, this.UpdateOrders_Products_DJTimeOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_DJTimeOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_DJTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_DJTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Count_TotalCash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Count_TotalCash(string sql) {
            object[] results = this.Invoke("Count_TotalCash", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Count_TotalCashAsync(string sql) {
            this.Count_TotalCashAsync(sql, null);
        }
        
        /// <remarks/>
        public void Count_TotalCashAsync(string sql, object userState) {
            if ((this.Count_TotalCashOperationCompleted == null)) {
                this.Count_TotalCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCount_TotalCashOperationCompleted);
            }
            this.InvokeAsync("Count_TotalCash", new object[] {
                        sql}, this.Count_TotalCashOperationCompleted, userState);
        }
        
        private void OnCount_TotalCashOperationCompleted(object arg) {
            if ((this.Count_TotalCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Count_TotalCashCompleted(this, new Count_TotalCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPType(string ProductNo) {
            object[] results = this.Invoke("GetPType", new object[] {
                        ProductNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPTypeAsync(string ProductNo) {
            this.GetPTypeAsync(ProductNo, null);
        }
        
        /// <remarks/>
        public void GetPTypeAsync(string ProductNo, object userState) {
            if ((this.GetPTypeOperationCompleted == null)) {
                this.GetPTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPTypeOperationCompleted);
            }
            this.InvokeAsync("GetPType", new object[] {
                        ProductNo}, this.GetPTypeOperationCompleted, userState);
        }
        
        private void OnGetPTypeOperationCompleted(object arg) {
            if ((this.GetPTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPTypeCompleted(this, new GetPTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrders_ProductsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOrders_ProductsInfo(
                    string sOrderNO, 
                    string sProductNO, 
                    string Box, 
                    string[] sStandard, 
                    string sUnit, 
                    string sPage, 
                    string sQuantity, 
                    string sPaper, 
                    string sAddPhoto, 
                    string sGoldenPaper, 
                    string sDesign, 
                    string sDesignOption, 
                    string sCoation, 
                    string sInside, 
                    string sBiao, 
                    string sBan, 
                    string sDiao, 
                    string sPrice1, 
                    string sPrice2, 
                    string sSCFS, 
                    string sMemo, 
                    string sMemoFactory, 
                    string sWorkDiv, 
                    string sDateExpect, 
                    string sProcess, 
                    string sOutput, 
                    string sOrderDate, 
                    string sOrderEmployeeNO, 
                    string sDepartment, 
                    string sOrderDiv, 
                    string WorkAddress, 
                    string WorkNumber, 
                    double SCZXPrice, 
                    double XCPrice, 
                    double XKPrice, 
                    string Fram, 
                    double JYBPrice) {
            object[] results = this.Invoke("AddOrders_ProductsInfo", new object[] {
                        sOrderNO,
                        sProductNO,
                        Box,
                        sStandard,
                        sUnit,
                        sPage,
                        sQuantity,
                        sPaper,
                        sAddPhoto,
                        sGoldenPaper,
                        sDesign,
                        sDesignOption,
                        sCoation,
                        sInside,
                        sBiao,
                        sBan,
                        sDiao,
                        sPrice1,
                        sPrice2,
                        sSCFS,
                        sMemo,
                        sMemoFactory,
                        sWorkDiv,
                        sDateExpect,
                        sProcess,
                        sOutput,
                        sOrderDate,
                        sOrderEmployeeNO,
                        sDepartment,
                        sOrderDiv,
                        WorkAddress,
                        WorkNumber,
                        SCZXPrice,
                        XCPrice,
                        XKPrice,
                        Fram,
                        JYBPrice});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrders_ProductsInfoAsync(
                    string sOrderNO, 
                    string sProductNO, 
                    string Box, 
                    string[] sStandard, 
                    string sUnit, 
                    string sPage, 
                    string sQuantity, 
                    string sPaper, 
                    string sAddPhoto, 
                    string sGoldenPaper, 
                    string sDesign, 
                    string sDesignOption, 
                    string sCoation, 
                    string sInside, 
                    string sBiao, 
                    string sBan, 
                    string sDiao, 
                    string sPrice1, 
                    string sPrice2, 
                    string sSCFS, 
                    string sMemo, 
                    string sMemoFactory, 
                    string sWorkDiv, 
                    string sDateExpect, 
                    string sProcess, 
                    string sOutput, 
                    string sOrderDate, 
                    string sOrderEmployeeNO, 
                    string sDepartment, 
                    string sOrderDiv, 
                    string WorkAddress, 
                    string WorkNumber, 
                    double SCZXPrice, 
                    double XCPrice, 
                    double XKPrice, 
                    string Fram, 
                    double JYBPrice) {
            this.AddOrders_ProductsInfoAsync(sOrderNO, sProductNO, Box, sStandard, sUnit, sPage, sQuantity, sPaper, sAddPhoto, sGoldenPaper, sDesign, sDesignOption, sCoation, sInside, sBiao, sBan, sDiao, sPrice1, sPrice2, sSCFS, sMemo, sMemoFactory, sWorkDiv, sDateExpect, sProcess, sOutput, sOrderDate, sOrderEmployeeNO, sDepartment, sOrderDiv, WorkAddress, WorkNumber, SCZXPrice, XCPrice, XKPrice, Fram, JYBPrice, null);
        }
        
        /// <remarks/>
        public void AddOrders_ProductsInfoAsync(
                    string sOrderNO, 
                    string sProductNO, 
                    string Box, 
                    string[] sStandard, 
                    string sUnit, 
                    string sPage, 
                    string sQuantity, 
                    string sPaper, 
                    string sAddPhoto, 
                    string sGoldenPaper, 
                    string sDesign, 
                    string sDesignOption, 
                    string sCoation, 
                    string sInside, 
                    string sBiao, 
                    string sBan, 
                    string sDiao, 
                    string sPrice1, 
                    string sPrice2, 
                    string sSCFS, 
                    string sMemo, 
                    string sMemoFactory, 
                    string sWorkDiv, 
                    string sDateExpect, 
                    string sProcess, 
                    string sOutput, 
                    string sOrderDate, 
                    string sOrderEmployeeNO, 
                    string sDepartment, 
                    string sOrderDiv, 
                    string WorkAddress, 
                    string WorkNumber, 
                    double SCZXPrice, 
                    double XCPrice, 
                    double XKPrice, 
                    string Fram, 
                    double JYBPrice, 
                    object userState) {
            if ((this.AddOrders_ProductsInfoOperationCompleted == null)) {
                this.AddOrders_ProductsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrders_ProductsInfoOperationCompleted);
            }
            this.InvokeAsync("AddOrders_ProductsInfo", new object[] {
                        sOrderNO,
                        sProductNO,
                        Box,
                        sStandard,
                        sUnit,
                        sPage,
                        sQuantity,
                        sPaper,
                        sAddPhoto,
                        sGoldenPaper,
                        sDesign,
                        sDesignOption,
                        sCoation,
                        sInside,
                        sBiao,
                        sBan,
                        sDiao,
                        sPrice1,
                        sPrice2,
                        sSCFS,
                        sMemo,
                        sMemoFactory,
                        sWorkDiv,
                        sDateExpect,
                        sProcess,
                        sOutput,
                        sOrderDate,
                        sOrderEmployeeNO,
                        sDepartment,
                        sOrderDiv,
                        WorkAddress,
                        WorkNumber,
                        SCZXPrice,
                        XCPrice,
                        XKPrice,
                        Fram,
                        JYBPrice}, this.AddOrders_ProductsInfoOperationCompleted, userState);
        }
        
        private void OnAddOrders_ProductsInfoOperationCompleted(object arg) {
            if ((this.AddOrders_ProductsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrders_ProductsInfoCompleted(this, new AddOrders_ProductsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompamy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCompamy(string sql) {
            object[] results = this.Invoke("GetCompamy", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompamyAsync(string sql) {
            this.GetCompamyAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetCompamyAsync(string sql, object userState) {
            if ((this.GetCompamyOperationCompleted == null)) {
                this.GetCompamyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompamyOperationCompleted);
            }
            this.InvokeAsync("GetCompamy", new object[] {
                        sql}, this.GetCompamyOperationCompleted, userState);
        }
        
        private void OnGetCompamyOperationCompleted(object arg) {
            if ((this.GetCompamyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompamyCompleted(this, new GetCompamyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertCompany(string sSql) {
            this.Invoke("InsertCompany", new object[] {
                        sSql});
        }
        
        /// <remarks/>
        public void InsertCompanyAsync(string sSql) {
            this.InsertCompanyAsync(sSql, null);
        }
        
        /// <remarks/>
        public void InsertCompanyAsync(string sSql, object userState) {
            if ((this.InsertCompanyOperationCompleted == null)) {
                this.InsertCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCompanyOperationCompleted);
            }
            this.InvokeAsync("InsertCompany", new object[] {
                        sSql}, this.InsertCompanyOperationCompleted, userState);
        }
        
        private void OnInsertCompanyOperationCompleted(object arg) {
            if ((this.InsertCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompanyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCompany(string sCompanyID) {
            this.Invoke("DeleteCompany", new object[] {
                        sCompanyID});
        }
        
        /// <remarks/>
        public void DeleteCompanyAsync(string sCompanyID) {
            this.DeleteCompanyAsync(sCompanyID, null);
        }
        
        /// <remarks/>
        public void DeleteCompanyAsync(string sCompanyID, object userState) {
            if ((this.DeleteCompanyOperationCompleted == null)) {
                this.DeleteCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCompanyOperationCompleted);
            }
            this.InvokeAsync("DeleteCompany", new object[] {
                        sCompanyID}, this.DeleteCompanyOperationCompleted, userState);
        }
        
        private void OnDeleteCompanyOperationCompleted(object arg) {
            if ((this.DeleteCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompanyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCompany(string sCompanyID, string sCompanyTypeID, string sCompanyName, string sCompanyManager, string sCompanyPhone, string sCompanyAddress, string sCompanyMemory, string sRecorder, string sRecordDate, string sCompanyPwd) {
            this.Invoke("UpdateCompany", new object[] {
                        sCompanyID,
                        sCompanyTypeID,
                        sCompanyName,
                        sCompanyManager,
                        sCompanyPhone,
                        sCompanyAddress,
                        sCompanyMemory,
                        sRecorder,
                        sRecordDate,
                        sCompanyPwd});
        }
        
        /// <remarks/>
        public void UpdateCompanyAsync(string sCompanyID, string sCompanyTypeID, string sCompanyName, string sCompanyManager, string sCompanyPhone, string sCompanyAddress, string sCompanyMemory, string sRecorder, string sRecordDate, string sCompanyPwd) {
            this.UpdateCompanyAsync(sCompanyID, sCompanyTypeID, sCompanyName, sCompanyManager, sCompanyPhone, sCompanyAddress, sCompanyMemory, sRecorder, sRecordDate, sCompanyPwd, null);
        }
        
        /// <remarks/>
        public void UpdateCompanyAsync(string sCompanyID, string sCompanyTypeID, string sCompanyName, string sCompanyManager, string sCompanyPhone, string sCompanyAddress, string sCompanyMemory, string sRecorder, string sRecordDate, string sCompanyPwd, object userState) {
            if ((this.UpdateCompanyOperationCompleted == null)) {
                this.UpdateCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCompanyOperationCompleted);
            }
            this.InvokeAsync("UpdateCompany", new object[] {
                        sCompanyID,
                        sCompanyTypeID,
                        sCompanyName,
                        sCompanyManager,
                        sCompanyPhone,
                        sCompanyAddress,
                        sCompanyMemory,
                        sRecorder,
                        sRecordDate,
                        sCompanyPwd}, this.UpdateCompanyOperationCompleted, userState);
        }
        
        private void OnUpdateCompanyOperationCompleted(object arg) {
            if ((this.UpdateCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompanyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCompanyType() {
            object[] results = this.Invoke("GetCompanyType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyTypeAsync() {
            this.GetCompanyTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetCompanyTypeAsync(object userState) {
            if ((this.GetCompanyTypeOperationCompleted == null)) {
                this.GetCompanyTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyTypeOperationCompleted);
            }
            this.InvokeAsync("GetCompanyType", new object[0], this.GetCompanyTypeOperationCompleted, userState);
        }
        
        private void OnGetCompanyTypeOperationCompleted(object arg) {
            if ((this.GetCompanyTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyTypeCompleted(this, new GetCompanyTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCompanyType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertCompanyType(string sSql) {
            this.Invoke("InsertCompanyType", new object[] {
                        sSql});
        }
        
        /// <remarks/>
        public void InsertCompanyTypeAsync(string sSql) {
            this.InsertCompanyTypeAsync(sSql, null);
        }
        
        /// <remarks/>
        public void InsertCompanyTypeAsync(string sSql, object userState) {
            if ((this.InsertCompanyTypeOperationCompleted == null)) {
                this.InsertCompanyTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCompanyTypeOperationCompleted);
            }
            this.InvokeAsync("InsertCompanyType", new object[] {
                        sSql}, this.InsertCompanyTypeOperationCompleted, userState);
        }
        
        private void OnInsertCompanyTypeOperationCompleted(object arg) {
            if ((this.InsertCompanyTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompanyTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCompanyType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCompanyType(string sCompanyTypeID, string sCompanyTypeName) {
            this.Invoke("UpdateCompanyType", new object[] {
                        sCompanyTypeID,
                        sCompanyTypeName});
        }
        
        /// <remarks/>
        public void UpdateCompanyTypeAsync(string sCompanyTypeID, string sCompanyTypeName) {
            this.UpdateCompanyTypeAsync(sCompanyTypeID, sCompanyTypeName, null);
        }
        
        /// <remarks/>
        public void UpdateCompanyTypeAsync(string sCompanyTypeID, string sCompanyTypeName, object userState) {
            if ((this.UpdateCompanyTypeOperationCompleted == null)) {
                this.UpdateCompanyTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCompanyTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateCompanyType", new object[] {
                        sCompanyTypeID,
                        sCompanyTypeName}, this.UpdateCompanyTypeOperationCompleted, userState);
        }
        
        private void OnUpdateCompanyTypeOperationCompleted(object arg) {
            if ((this.UpdateCompanyTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompanyTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCompanyType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCompanyType(string sCompanyTypeID) {
            this.Invoke("DeleteCompanyType", new object[] {
                        sCompanyTypeID});
        }
        
        /// <remarks/>
        public void DeleteCompanyTypeAsync(string sCompanyTypeID) {
            this.DeleteCompanyTypeAsync(sCompanyTypeID, null);
        }
        
        /// <remarks/>
        public void DeleteCompanyTypeAsync(string sCompanyTypeID, object userState) {
            if ((this.DeleteCompanyTypeOperationCompleted == null)) {
                this.DeleteCompanyTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCompanyTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteCompanyType", new object[] {
                        sCompanyTypeID}, this.DeleteCompanyTypeOperationCompleted, userState);
        }
        
        private void OnDeleteCompanyTypeOperationCompleted(object arg) {
            if ((this.DeleteCompanyTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompanyTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepartmentInfo(string sSql) {
            object[] results = this.Invoke("GetDepartmentInfo", new object[] {
                        sSql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentInfoAsync(string sSql) {
            this.GetDepartmentInfoAsync(sSql, null);
        }
        
        /// <remarks/>
        public void GetDepartmentInfoAsync(string sSql, object userState) {
            if ((this.GetDepartmentInfoOperationCompleted == null)) {
                this.GetDepartmentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentInfoOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentInfo", new object[] {
                        sSql}, this.GetDepartmentInfoOperationCompleted, userState);
        }
        
        private void OnGetDepartmentInfoOperationCompleted(object arg) {
            if ((this.GetDepartmentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentInfoCompleted(this, new GetDepartmentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheAllDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetTheAllDepartment() {
            object[] results = this.Invoke("GetTheAllDepartment", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTheAllDepartmentAsync() {
            this.GetTheAllDepartmentAsync(null);
        }
        
        /// <remarks/>
        public void GetTheAllDepartmentAsync(object userState) {
            if ((this.GetTheAllDepartmentOperationCompleted == null)) {
                this.GetTheAllDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheAllDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetTheAllDepartment", new object[0], this.GetTheAllDepartmentOperationCompleted, userState);
        }
        
        private void OnGetTheAllDepartmentOperationCompleted(object arg) {
            if ((this.GetTheAllDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheAllDepartmentCompleted(this, new GetTheAllDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheDepByDepNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheDepByDepNo(string sDepNo) {
            object[] results = this.Invoke("GetTheDepByDepNo", new object[] {
                        sDepNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheDepByDepNoAsync(string sDepNo) {
            this.GetTheDepByDepNoAsync(sDepNo, null);
        }
        
        /// <remarks/>
        public void GetTheDepByDepNoAsync(string sDepNo, object userState) {
            if ((this.GetTheDepByDepNoOperationCompleted == null)) {
                this.GetTheDepByDepNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheDepByDepNoOperationCompleted);
            }
            this.InvokeAsync("GetTheDepByDepNo", new object[] {
                        sDepNo}, this.GetTheDepByDepNoOperationCompleted, userState);
        }
        
        private void OnGetTheDepByDepNoOperationCompleted(object arg) {
            if ((this.GetTheDepByDepNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheDepByDepNoCompleted(this, new GetTheDepByDepNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheDepNameByDepNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheDepNameByDepNo(string sDepName) {
            object[] results = this.Invoke("GetTheDepNameByDepNo", new object[] {
                        sDepName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheDepNameByDepNoAsync(string sDepName) {
            this.GetTheDepNameByDepNoAsync(sDepName, null);
        }
        
        /// <remarks/>
        public void GetTheDepNameByDepNoAsync(string sDepName, object userState) {
            if ((this.GetTheDepNameByDepNoOperationCompleted == null)) {
                this.GetTheDepNameByDepNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheDepNameByDepNoOperationCompleted);
            }
            this.InvokeAsync("GetTheDepNameByDepNo", new object[] {
                        sDepName}, this.GetTheDepNameByDepNoOperationCompleted, userState);
        }
        
        private void OnGetTheDepNameByDepNoOperationCompleted(object arg) {
            if ((this.GetTheDepNameByDepNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheDepNameByDepNoCompleted(this, new GetTheDepNameByDepNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertDepartment(string sql) {
            this.Invoke("InsertDepartment", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void InsertDepartmentAsync(string sql) {
            this.InsertDepartmentAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsertDepartmentAsync(string sql, object userState) {
            if ((this.InsertDepartmentOperationCompleted == null)) {
                this.InsertDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDepartmentOperationCompleted);
            }
            this.InvokeAsync("InsertDepartment", new object[] {
                        sql}, this.InsertDepartmentOperationCompleted, userState);
        }
        
        private void OnInsertDepartmentOperationCompleted(object arg) {
            if ((this.InsertDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDepartmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDepartment(string sDepartmentID) {
            this.Invoke("DeleteDepartment", new object[] {
                        sDepartmentID});
        }
        
        /// <remarks/>
        public void DeleteDepartmentAsync(string sDepartmentID) {
            this.DeleteDepartmentAsync(sDepartmentID, null);
        }
        
        /// <remarks/>
        public void DeleteDepartmentAsync(string sDepartmentID, object userState) {
            if ((this.DeleteDepartmentOperationCompleted == null)) {
                this.DeleteDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDepartmentOperationCompleted);
            }
            this.InvokeAsync("DeleteDepartment", new object[] {
                        sDepartmentID}, this.DeleteDepartmentOperationCompleted, userState);
        }
        
        private void OnDeleteDepartmentOperationCompleted(object arg) {
            if ((this.DeleteDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDepartmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDepartment(string sCompanyID, string sDepartmentID, string sDepartmentName, string sDepartmentManager, string sDepartmentPhone, string sDepartmentMemory, string sRecorder, string sRecordDate, string sParDepartmetnID) {
            this.Invoke("UpdateDepartment", new object[] {
                        sCompanyID,
                        sDepartmentID,
                        sDepartmentName,
                        sDepartmentManager,
                        sDepartmentPhone,
                        sDepartmentMemory,
                        sRecorder,
                        sRecordDate,
                        sParDepartmetnID});
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(string sCompanyID, string sDepartmentID, string sDepartmentName, string sDepartmentManager, string sDepartmentPhone, string sDepartmentMemory, string sRecorder, string sRecordDate, string sParDepartmetnID) {
            this.UpdateDepartmentAsync(sCompanyID, sDepartmentID, sDepartmentName, sDepartmentManager, sDepartmentPhone, sDepartmentMemory, sRecorder, sRecordDate, sParDepartmetnID, null);
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(string sCompanyID, string sDepartmentID, string sDepartmentName, string sDepartmentManager, string sDepartmentPhone, string sDepartmentMemory, string sRecorder, string sRecordDate, string sParDepartmetnID, object userState) {
            if ((this.UpdateDepartmentOperationCompleted == null)) {
                this.UpdateDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDepartmentOperationCompleted);
            }
            this.InvokeAsync("UpdateDepartment", new object[] {
                        sCompanyID,
                        sDepartmentID,
                        sDepartmentName,
                        sDepartmentManager,
                        sDepartmentPhone,
                        sDepartmentMemory,
                        sRecorder,
                        sRecordDate,
                        sParDepartmetnID}, this.UpdateDepartmentOperationCompleted, userState);
        }
        
        private void OnUpdateDepartmentOperationCompleted(object arg) {
            if ((this.UpdateDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDepartmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEmployeeInfo(string sql) {
            object[] results = this.Invoke("GetEmployeeInfo", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeInfoAsync(string sql) {
            this.GetEmployeeInfoAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetEmployeeInfoAsync(string sql, object userState) {
            if ((this.GetEmployeeInfoOperationCompleted == null)) {
                this.GetEmployeeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeInfoOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeInfo", new object[] {
                        sql}, this.GetEmployeeInfoOperationCompleted, userState);
        }
        
        private void OnGetEmployeeInfoOperationCompleted(object arg) {
            if ((this.GetEmployeeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeInfoCompleted(this, new GetEmployeeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheAllEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTheAllEmployee(string sDepartmentID) {
            object[] results = this.Invoke("GetTheAllEmployee", new object[] {
                        sDepartmentID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheAllEmployeeAsync(string sDepartmentID) {
            this.GetTheAllEmployeeAsync(sDepartmentID, null);
        }
        
        /// <remarks/>
        public void GetTheAllEmployeeAsync(string sDepartmentID, object userState) {
            if ((this.GetTheAllEmployeeOperationCompleted == null)) {
                this.GetTheAllEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheAllEmployeeOperationCompleted);
            }
            this.InvokeAsync("GetTheAllEmployee", new object[] {
                        sDepartmentID}, this.GetTheAllEmployeeOperationCompleted, userState);
        }
        
        private void OnGetTheAllEmployeeOperationCompleted(object arg) {
            if ((this.GetTheAllEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheAllEmployeeCompleted(this, new GetTheAllEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheAllEmployee_SC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTheAllEmployee_SC() {
            object[] results = this.Invoke("GetTheAllEmployee_SC", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheAllEmployee_SCAsync() {
            this.GetTheAllEmployee_SCAsync(null);
        }
        
        /// <remarks/>
        public void GetTheAllEmployee_SCAsync(object userState) {
            if ((this.GetTheAllEmployee_SCOperationCompleted == null)) {
                this.GetTheAllEmployee_SCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheAllEmployee_SCOperationCompleted);
            }
            this.InvokeAsync("GetTheAllEmployee_SC", new object[0], this.GetTheAllEmployee_SCOperationCompleted, userState);
        }
        
        private void OnGetTheAllEmployee_SCOperationCompleted(object arg) {
            if ((this.GetTheAllEmployee_SCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheAllEmployee_SCCompleted(this, new GetTheAllEmployee_SCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Employee_Info", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Employee_Info(string sEmployeeNO) {
            object[] results = this.Invoke("Get_Employee_Info", new object[] {
                        sEmployeeNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Employee_InfoAsync(string sEmployeeNO) {
            this.Get_Employee_InfoAsync(sEmployeeNO, null);
        }
        
        /// <remarks/>
        public void Get_Employee_InfoAsync(string sEmployeeNO, object userState) {
            if ((this.Get_Employee_InfoOperationCompleted == null)) {
                this.Get_Employee_InfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Employee_InfoOperationCompleted);
            }
            this.InvokeAsync("Get_Employee_Info", new object[] {
                        sEmployeeNO}, this.Get_Employee_InfoOperationCompleted, userState);
        }
        
        private void OnGet_Employee_InfoOperationCompleted(object arg) {
            if ((this.Get_Employee_InfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Employee_InfoCompleted(this, new Get_Employee_InfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheEmpNameByEmpNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheEmpNameByEmpNo(string sEmpNo) {
            object[] results = this.Invoke("GetTheEmpNameByEmpNo", new object[] {
                        sEmpNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheEmpNameByEmpNoAsync(string sEmpNo) {
            this.GetTheEmpNameByEmpNoAsync(sEmpNo, null);
        }
        
        /// <remarks/>
        public void GetTheEmpNameByEmpNoAsync(string sEmpNo, object userState) {
            if ((this.GetTheEmpNameByEmpNoOperationCompleted == null)) {
                this.GetTheEmpNameByEmpNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheEmpNameByEmpNoOperationCompleted);
            }
            this.InvokeAsync("GetTheEmpNameByEmpNo", new object[] {
                        sEmpNo}, this.GetTheEmpNameByEmpNoOperationCompleted, userState);
        }
        
        private void OnGetTheEmpNameByEmpNoOperationCompleted(object arg) {
            if ((this.GetTheEmpNameByEmpNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheEmpNameByEmpNoCompleted(this, new GetTheEmpNameByEmpNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheEmpNoByEmpName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheEmpNoByEmpName(string sEmpName) {
            object[] results = this.Invoke("GetTheEmpNoByEmpName", new object[] {
                        sEmpName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheEmpNoByEmpNameAsync(string sEmpName) {
            this.GetTheEmpNoByEmpNameAsync(sEmpName, null);
        }
        
        /// <remarks/>
        public void GetTheEmpNoByEmpNameAsync(string sEmpName, object userState) {
            if ((this.GetTheEmpNoByEmpNameOperationCompleted == null)) {
                this.GetTheEmpNoByEmpNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheEmpNoByEmpNameOperationCompleted);
            }
            this.InvokeAsync("GetTheEmpNoByEmpName", new object[] {
                        sEmpName}, this.GetTheEmpNoByEmpNameOperationCompleted, userState);
        }
        
        private void OnGetTheEmpNoByEmpNameOperationCompleted(object arg) {
            if ((this.GetTheEmpNoByEmpNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheEmpNoByEmpNameCompleted(this, new GetTheEmpNoByEmpNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertEmployee(string sql) {
            this.Invoke("InsertEmployee", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void InsertEmployeeAsync(string sql) {
            this.InsertEmployeeAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsertEmployeeAsync(string sql, object userState) {
            if ((this.InsertEmployeeOperationCompleted == null)) {
                this.InsertEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmployeeOperationCompleted);
            }
            this.InvokeAsync("InsertEmployee", new object[] {
                        sql}, this.InsertEmployeeOperationCompleted, userState);
        }
        
        private void OnInsertEmployeeOperationCompleted(object arg) {
            if ((this.InsertEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmployee(string EmployeeNo) {
            this.Invoke("DeleteEmployee", new object[] {
                        EmployeeNo});
        }
        
        /// <remarks/>
        public void DeleteEmployeeAsync(string EmployeeNo) {
            this.DeleteEmployeeAsync(EmployeeNo, null);
        }
        
        /// <remarks/>
        public void DeleteEmployeeAsync(string EmployeeNo, object userState) {
            if ((this.DeleteEmployeeOperationCompleted == null)) {
                this.DeleteEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeOperationCompleted);
            }
            this.InvokeAsync("DeleteEmployee", new object[] {
                        EmployeeNo}, this.DeleteEmployeeOperationCompleted, userState);
        }
        
        private void OnDeleteEmployeeOperationCompleted(object arg) {
            if ((this.DeleteEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEmployee(
                    string sEmployeeNO, 
                    string sEmployeeNO1, 
                    string sPassword, 
                    string sEmployeeName, 
                    string sEmployeeSex, 
                    string sEmployeeBirthday, 
                    string sEmployeePhone1, 
                    string sEmployeePhone2, 
                    string sEmployeeEmail, 
                    string sQQMSN, 
                    string sEmployeeLevel, 
                    string sEmployeeDuty, 
                    string sDepartmentID, 
                    string sGroup, 
                    string sJobDate, 
                    string sAddress1, 
                    string sPost1, 
                    string sAddress2, 
                    string sPost2, 
                    string sState, 
                    string sExperience, 
                    string sInformationInCompany, 
                    string sComputer, 
                    string sIpAddress, 
                    string sMemory) {
            this.Invoke("UpdateEmployee", new object[] {
                        sEmployeeNO,
                        sEmployeeNO1,
                        sPassword,
                        sEmployeeName,
                        sEmployeeSex,
                        sEmployeeBirthday,
                        sEmployeePhone1,
                        sEmployeePhone2,
                        sEmployeeEmail,
                        sQQMSN,
                        sEmployeeLevel,
                        sEmployeeDuty,
                        sDepartmentID,
                        sGroup,
                        sJobDate,
                        sAddress1,
                        sPost1,
                        sAddress2,
                        sPost2,
                        sState,
                        sExperience,
                        sInformationInCompany,
                        sComputer,
                        sIpAddress,
                        sMemory});
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(
                    string sEmployeeNO, 
                    string sEmployeeNO1, 
                    string sPassword, 
                    string sEmployeeName, 
                    string sEmployeeSex, 
                    string sEmployeeBirthday, 
                    string sEmployeePhone1, 
                    string sEmployeePhone2, 
                    string sEmployeeEmail, 
                    string sQQMSN, 
                    string sEmployeeLevel, 
                    string sEmployeeDuty, 
                    string sDepartmentID, 
                    string sGroup, 
                    string sJobDate, 
                    string sAddress1, 
                    string sPost1, 
                    string sAddress2, 
                    string sPost2, 
                    string sState, 
                    string sExperience, 
                    string sInformationInCompany, 
                    string sComputer, 
                    string sIpAddress, 
                    string sMemory) {
            this.UpdateEmployeeAsync(sEmployeeNO, sEmployeeNO1, sPassword, sEmployeeName, sEmployeeSex, sEmployeeBirthday, sEmployeePhone1, sEmployeePhone2, sEmployeeEmail, sQQMSN, sEmployeeLevel, sEmployeeDuty, sDepartmentID, sGroup, sJobDate, sAddress1, sPost1, sAddress2, sPost2, sState, sExperience, sInformationInCompany, sComputer, sIpAddress, sMemory, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(
                    string sEmployeeNO, 
                    string sEmployeeNO1, 
                    string sPassword, 
                    string sEmployeeName, 
                    string sEmployeeSex, 
                    string sEmployeeBirthday, 
                    string sEmployeePhone1, 
                    string sEmployeePhone2, 
                    string sEmployeeEmail, 
                    string sQQMSN, 
                    string sEmployeeLevel, 
                    string sEmployeeDuty, 
                    string sDepartmentID, 
                    string sGroup, 
                    string sJobDate, 
                    string sAddress1, 
                    string sPost1, 
                    string sAddress2, 
                    string sPost2, 
                    string sState, 
                    string sExperience, 
                    string sInformationInCompany, 
                    string sComputer, 
                    string sIpAddress, 
                    string sMemory, 
                    object userState) {
            if ((this.UpdateEmployeeOperationCompleted == null)) {
                this.UpdateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployee", new object[] {
                        sEmployeeNO,
                        sEmployeeNO1,
                        sPassword,
                        sEmployeeName,
                        sEmployeeSex,
                        sEmployeeBirthday,
                        sEmployeePhone1,
                        sEmployeePhone2,
                        sEmployeeEmail,
                        sQQMSN,
                        sEmployeeLevel,
                        sEmployeeDuty,
                        sDepartmentID,
                        sGroup,
                        sJobDate,
                        sAddress1,
                        sPost1,
                        sAddress2,
                        sPost2,
                        sState,
                        sExperience,
                        sInformationInCompany,
                        sComputer,
                        sIpAddress,
                        sMemory}, this.UpdateEmployeeOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeOperationCompleted(object arg) {
            if ((this.UpdateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheProductNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheProductNumber(string sProductType) {
            object[] results = this.Invoke("GetTheProductNumber", new object[] {
                        sProductType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheProductNumberAsync(string sProductType) {
            this.GetTheProductNumberAsync(sProductType, null);
        }
        
        /// <remarks/>
        public void GetTheProductNumberAsync(string sProductType, object userState) {
            if ((this.GetTheProductNumberOperationCompleted == null)) {
                this.GetTheProductNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheProductNumberOperationCompleted);
            }
            this.InvokeAsync("GetTheProductNumber", new object[] {
                        sProductType}, this.GetTheProductNumberOperationCompleted, userState);
        }
        
        private void OnGetTheProductNumberOperationCompleted(object arg) {
            if ((this.GetTheProductNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheProductNumberCompleted(this, new GetTheProductNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheProdactByProductType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheProdactByProductType(string sType) {
            object[] results = this.Invoke("GetTheProdactByProductType", new object[] {
                        sType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheProdactByProductTypeAsync(string sType) {
            this.GetTheProdactByProductTypeAsync(sType, null);
        }
        
        /// <remarks/>
        public void GetTheProdactByProductTypeAsync(string sType, object userState) {
            if ((this.GetTheProdactByProductTypeOperationCompleted == null)) {
                this.GetTheProdactByProductTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheProdactByProductTypeOperationCompleted);
            }
            this.InvokeAsync("GetTheProdactByProductType", new object[] {
                        sType}, this.GetTheProdactByProductTypeOperationCompleted, userState);
        }
        
        private void OnGetTheProdactByProductTypeOperationCompleted(object arg) {
            if ((this.GetTheProdactByProductTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheProdactByProductTypeCompleted(this, new GetTheProdactByProductTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheProdactNoByProductName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheProdactNoByProductName(string sProductName) {
            object[] results = this.Invoke("GetTheProdactNoByProductName", new object[] {
                        sProductName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheProdactNoByProductNameAsync(string sProductName) {
            this.GetTheProdactNoByProductNameAsync(sProductName, null);
        }
        
        /// <remarks/>
        public void GetTheProdactNoByProductNameAsync(string sProductName, object userState) {
            if ((this.GetTheProdactNoByProductNameOperationCompleted == null)) {
                this.GetTheProdactNoByProductNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheProdactNoByProductNameOperationCompleted);
            }
            this.InvokeAsync("GetTheProdactNoByProductName", new object[] {
                        sProductName}, this.GetTheProdactNoByProductNameOperationCompleted, userState);
        }
        
        private void OnGetTheProdactNoByProductNameOperationCompleted(object arg) {
            if ((this.GetTheProdactNoByProductNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheProdactNoByProductNameCompleted(this, new GetTheProdactNoByProductNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThePathByOrderNO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetThePathByOrderNO(string sOrderNO) {
            object[] results = this.Invoke("GetThePathByOrderNO", new object[] {
                        sOrderNO});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetThePathByOrderNOAsync(string sOrderNO) {
            this.GetThePathByOrderNOAsync(sOrderNO, null);
        }
        
        /// <remarks/>
        public void GetThePathByOrderNOAsync(string sOrderNO, object userState) {
            if ((this.GetThePathByOrderNOOperationCompleted == null)) {
                this.GetThePathByOrderNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThePathByOrderNOOperationCompleted);
            }
            this.InvokeAsync("GetThePathByOrderNO", new object[] {
                        sOrderNO}, this.GetThePathByOrderNOOperationCompleted, userState);
        }
        
        private void OnGetThePathByOrderNOOperationCompleted(object arg) {
            if ((this.GetThePathByOrderNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThePathByOrderNOCompleted(this, new GetThePathByOrderNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheProductNameByProductNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheProductNameByProductNo(string sProductNo) {
            object[] results = this.Invoke("GetTheProductNameByProductNo", new object[] {
                        sProductNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheProductNameByProductNoAsync(string sProductNo) {
            this.GetTheProductNameByProductNoAsync(sProductNo, null);
        }
        
        /// <remarks/>
        public void GetTheProductNameByProductNoAsync(string sProductNo, object userState) {
            if ((this.GetTheProductNameByProductNoOperationCompleted == null)) {
                this.GetTheProductNameByProductNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheProductNameByProductNoOperationCompleted);
            }
            this.InvokeAsync("GetTheProductNameByProductNo", new object[] {
                        sProductNo}, this.GetTheProductNameByProductNoOperationCompleted, userState);
        }
        
        private void OnGetTheProductNameByProductNoOperationCompleted(object arg) {
            if ((this.GetTheProductNameByProductNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheProductNameByProductNoCompleted(this, new GetTheProductNameByProductNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProducts(string sql) {
            this.Invoke("InsertProducts", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void InsertProductsAsync(string sql) {
            this.InsertProductsAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsertProductsAsync(string sql, object userState) {
            if ((this.InsertProductsOperationCompleted == null)) {
                this.InsertProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProductsOperationCompleted);
            }
            this.InvokeAsync("InsertProducts", new object[] {
                        sql}, this.InsertProductsOperationCompleted, userState);
        }
        
        private void OnInsertProductsOperationCompleted(object arg) {
            if ((this.InsertProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProductsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProductSize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProductSize(string sql) {
            this.Invoke("InsertProductSize", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void InsertProductSizeAsync(string sql) {
            this.InsertProductSizeAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsertProductSizeAsync(string sql, object userState) {
            if ((this.InsertProductSizeOperationCompleted == null)) {
                this.InsertProductSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProductSizeOperationCompleted);
            }
            this.InvokeAsync("InsertProductSize", new object[] {
                        sql}, this.InsertProductSizeOperationCompleted, userState);
        }
        
        private void OnInsertProductSizeOperationCompleted(object arg) {
            if ((this.InsertProductSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProductSizeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProductSize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProductSize(string sID, string sProductNo, string sH, string sW, string sUnit, string sArea, string sSale_Price) {
            this.Invoke("UpdateProductSize", new object[] {
                        sID,
                        sProductNo,
                        sH,
                        sW,
                        sUnit,
                        sArea,
                        sSale_Price});
        }
        
        /// <remarks/>
        public void UpdateProductSizeAsync(string sID, string sProductNo, string sH, string sW, string sUnit, string sArea, string sSale_Price) {
            this.UpdateProductSizeAsync(sID, sProductNo, sH, sW, sUnit, sArea, sSale_Price, null);
        }
        
        /// <remarks/>
        public void UpdateProductSizeAsync(string sID, string sProductNo, string sH, string sW, string sUnit, string sArea, string sSale_Price, object userState) {
            if ((this.UpdateProductSizeOperationCompleted == null)) {
                this.UpdateProductSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductSizeOperationCompleted);
            }
            this.InvokeAsync("UpdateProductSize", new object[] {
                        sID,
                        sProductNo,
                        sH,
                        sW,
                        sUnit,
                        sArea,
                        sSale_Price}, this.UpdateProductSizeOperationCompleted, userState);
        }
        
        private void OnUpdateProductSizeOperationCompleted(object arg) {
            if ((this.UpdateProductSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductSizeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProductArea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProductArea(string sID, string sArea) {
            object[] results = this.Invoke("UpdateProductArea", new object[] {
                        sID,
                        sArea});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductAreaAsync(string sID, string sArea) {
            this.UpdateProductAreaAsync(sID, sArea, null);
        }
        
        /// <remarks/>
        public void UpdateProductAreaAsync(string sID, string sArea, object userState) {
            if ((this.UpdateProductAreaOperationCompleted == null)) {
                this.UpdateProductAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductAreaOperationCompleted);
            }
            this.InvokeAsync("UpdateProductArea", new object[] {
                        sID,
                        sArea}, this.UpdateProductAreaOperationCompleted, userState);
        }
        
        private void OnUpdateProductAreaOperationCompleted(object arg) {
            if ((this.UpdateProductAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductAreaCompleted(this, new UpdateProductAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProductSize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProductSize(string sID) {
            this.Invoke("DeleteProductSize", new object[] {
                        sID});
        }
        
        /// <remarks/>
        public void DeleteProductSizeAsync(string sID) {
            this.DeleteProductSizeAsync(sID, null);
        }
        
        /// <remarks/>
        public void DeleteProductSizeAsync(string sID, object userState) {
            if ((this.DeleteProductSizeOperationCompleted == null)) {
                this.DeleteProductSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductSizeOperationCompleted);
            }
            this.InvokeAsync("DeleteProductSize", new object[] {
                        sID}, this.DeleteProductSizeOperationCompleted, userState);
        }
        
        private void OnDeleteProductSizeOperationCompleted(object arg) {
            if ((this.DeleteProductSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductSizeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheProducts_Size", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTheProducts_Size(string sProductNo) {
            object[] results = this.Invoke("GetTheProducts_Size", new object[] {
                        sProductNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheProducts_SizeAsync(string sProductNo) {
            this.GetTheProducts_SizeAsync(sProductNo, null);
        }
        
        /// <remarks/>
        public void GetTheProducts_SizeAsync(string sProductNo, object userState) {
            if ((this.GetTheProducts_SizeOperationCompleted == null)) {
                this.GetTheProducts_SizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheProducts_SizeOperationCompleted);
            }
            this.InvokeAsync("GetTheProducts_Size", new object[] {
                        sProductNo}, this.GetTheProducts_SizeOperationCompleted, userState);
        }
        
        private void OnGetTheProducts_SizeOperationCompleted(object arg) {
            if ((this.GetTheProducts_SizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheProducts_SizeCompleted(this, new GetTheProducts_SizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProducts(string sProductNO) {
            this.Invoke("DeleteProducts", new object[] {
                        sProductNO});
        }
        
        /// <remarks/>
        public void DeleteProductsAsync(string sProductNO) {
            this.DeleteProductsAsync(sProductNO, null);
        }
        
        /// <remarks/>
        public void DeleteProductsAsync(string sProductNO, object userState) {
            if ((this.DeleteProductsOperationCompleted == null)) {
                this.DeleteProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductsOperationCompleted);
            }
            this.InvokeAsync("DeleteProducts", new object[] {
                        sProductNO}, this.DeleteProductsOperationCompleted, userState);
        }
        
        private void OnDeleteProductsOperationCompleted(object arg) {
            if ((this.DeleteProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProducts(string sProductNO, string sProductType2, string sProductName, string sProductMem, string sStartDate, string sEndDate, string sProductState, string sCreater, string sCreateTime) {
            this.Invoke("UpdateProducts", new object[] {
                        sProductNO,
                        sProductType2,
                        sProductName,
                        sProductMem,
                        sStartDate,
                        sEndDate,
                        sProductState,
                        sCreater,
                        sCreateTime});
        }
        
        /// <remarks/>
        public void UpdateProductsAsync(string sProductNO, string sProductType2, string sProductName, string sProductMem, string sStartDate, string sEndDate, string sProductState, string sCreater, string sCreateTime) {
            this.UpdateProductsAsync(sProductNO, sProductType2, sProductName, sProductMem, sStartDate, sEndDate, sProductState, sCreater, sCreateTime, null);
        }
        
        /// <remarks/>
        public void UpdateProductsAsync(string sProductNO, string sProductType2, string sProductName, string sProductMem, string sStartDate, string sEndDate, string sProductState, string sCreater, string sCreateTime, object userState) {
            if ((this.UpdateProductsOperationCompleted == null)) {
                this.UpdateProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductsOperationCompleted);
            }
            this.InvokeAsync("UpdateProducts", new object[] {
                        sProductNO,
                        sProductType2,
                        sProductName,
                        sProductMem,
                        sStartDate,
                        sEndDate,
                        sProductState,
                        sCreater,
                        sCreateTime}, this.UpdateProductsOperationCompleted, userState);
        }
        
        private void OnUpdateProductsOperationCompleted(object arg) {
            if ((this.UpdateProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProducts(string sql) {
            object[] results = this.Invoke("GetProducts", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsAsync(string sql) {
            this.GetProductsAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetProductsAsync(string sql, object userState) {
            if ((this.GetProductsOperationCompleted == null)) {
                this.GetProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsOperationCompleted);
            }
            this.InvokeAsync("GetProducts", new object[] {
                        sql}, this.GetProductsOperationCompleted, userState);
        }
        
        private void OnGetProductsOperationCompleted(object arg) {
            if ((this.GetProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyProductTo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CopyProductTo(string sProductNoA, string[] sProductNoB) {
            this.Invoke("CopyProductTo", new object[] {
                        sProductNoA,
                        sProductNoB});
        }
        
        /// <remarks/>
        public void CopyProductToAsync(string sProductNoA, string[] sProductNoB) {
            this.CopyProductToAsync(sProductNoA, sProductNoB, null);
        }
        
        /// <remarks/>
        public void CopyProductToAsync(string sProductNoA, string[] sProductNoB, object userState) {
            if ((this.CopyProductToOperationCompleted == null)) {
                this.CopyProductToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyProductToOperationCompleted);
            }
            this.InvokeAsync("CopyProductTo", new object[] {
                        sProductNoA,
                        sProductNoB}, this.CopyProductToOperationCompleted, userState);
        }
        
        private void OnCopyProductToOperationCompleted(object arg) {
            if ((this.CopyProductToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyProductToCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProductType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProductType(string sql) {
            this.Invoke("InsertProductType", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void InsertProductTypeAsync(string sql) {
            this.InsertProductTypeAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsertProductTypeAsync(string sql, object userState) {
            if ((this.InsertProductTypeOperationCompleted == null)) {
                this.InsertProductTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProductTypeOperationCompleted);
            }
            this.InvokeAsync("InsertProductType", new object[] {
                        sql}, this.InsertProductTypeOperationCompleted, userState);
        }
        
        private void OnInsertProductTypeOperationCompleted(object arg) {
            if ((this.InsertProductTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProductTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProductType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProductType(string sProductType) {
            this.Invoke("DeleteProductType", new object[] {
                        sProductType});
        }
        
        /// <remarks/>
        public void DeleteProductTypeAsync(string sProductType) {
            this.DeleteProductTypeAsync(sProductType, null);
        }
        
        /// <remarks/>
        public void DeleteProductTypeAsync(string sProductType, object userState) {
            if ((this.DeleteProductTypeOperationCompleted == null)) {
                this.DeleteProductTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteProductType", new object[] {
                        sProductType}, this.DeleteProductTypeOperationCompleted, userState);
        }
        
        private void OnDeleteProductTypeOperationCompleted(object arg) {
            if ((this.DeleteProductTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProductType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProductType(string sProductType, string sProductTypeName, string sProductTypeMemory, string sParentProductType) {
            this.Invoke("UpdateProductType", new object[] {
                        sProductType,
                        sProductTypeName,
                        sProductTypeMemory,
                        sParentProductType});
        }
        
        /// <remarks/>
        public void UpdateProductTypeAsync(string sProductType, string sProductTypeName, string sProductTypeMemory, string sParentProductType) {
            this.UpdateProductTypeAsync(sProductType, sProductTypeName, sProductTypeMemory, sParentProductType, null);
        }
        
        /// <remarks/>
        public void UpdateProductTypeAsync(string sProductType, string sProductTypeName, string sProductTypeMemory, string sParentProductType, object userState) {
            if ((this.UpdateProductTypeOperationCompleted == null)) {
                this.UpdateProductTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateProductType", new object[] {
                        sProductType,
                        sProductTypeName,
                        sProductTypeMemory,
                        sParentProductType}, this.UpdateProductTypeOperationCompleted, userState);
        }
        
        private void OnUpdateProductTypeOperationCompleted(object arg) {
            if ((this.UpdateProductTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheProductsType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheProductsType(string ProductTypeName) {
            object[] results = this.Invoke("GetTheProductsType", new object[] {
                        ProductTypeName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheProductsTypeAsync(string ProductTypeName) {
            this.GetTheProductsTypeAsync(ProductTypeName, null);
        }
        
        /// <remarks/>
        public void GetTheProductsTypeAsync(string ProductTypeName, object userState) {
            if ((this.GetTheProductsTypeOperationCompleted == null)) {
                this.GetTheProductsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheProductsTypeOperationCompleted);
            }
            this.InvokeAsync("GetTheProductsType", new object[] {
                        ProductTypeName}, this.GetTheProductsTypeOperationCompleted, userState);
        }
        
        private void OnGetTheProductsTypeOperationCompleted(object arg) {
            if ((this.GetTheProductsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheProductsTypeCompleted(this, new GetTheProductsTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductType(string sql) {
            object[] results = this.Invoke("GetProductType", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductTypeAsync(string sql) {
            this.GetProductTypeAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetProductTypeAsync(string sql, object userState) {
            if ((this.GetProductTypeOperationCompleted == null)) {
                this.GetProductTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductTypeOperationCompleted);
            }
            this.InvokeAsync("GetProductType", new object[] {
                        sql}, this.GetProductTypeOperationCompleted, userState);
        }
        
        private void OnGetProductTypeOperationCompleted(object arg) {
            if ((this.GetProductTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductTypeCompleted(this, new GetProductTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProductsPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProductsPrice(string sSql) {
            this.Invoke("InsertProductsPrice", new object[] {
                        sSql});
        }
        
        /// <remarks/>
        public void InsertProductsPriceAsync(string sSql) {
            this.InsertProductsPriceAsync(sSql, null);
        }
        
        /// <remarks/>
        public void InsertProductsPriceAsync(string sSql, object userState) {
            if ((this.InsertProductsPriceOperationCompleted == null)) {
                this.InsertProductsPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProductsPriceOperationCompleted);
            }
            this.InvokeAsync("InsertProductsPrice", new object[] {
                        sSql}, this.InsertProductsPriceOperationCompleted, userState);
        }
        
        private void OnInsertProductsPriceOperationCompleted(object arg) {
            if ((this.InsertProductsPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProductsPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProductsPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProductsPrice(string sID) {
            this.Invoke("DeleteProductsPrice", new object[] {
                        sID});
        }
        
        /// <remarks/>
        public void DeleteProductsPriceAsync(string sID) {
            this.DeleteProductsPriceAsync(sID, null);
        }
        
        /// <remarks/>
        public void DeleteProductsPriceAsync(string sID, object userState) {
            if ((this.DeleteProductsPriceOperationCompleted == null)) {
                this.DeleteProductsPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductsPriceOperationCompleted);
            }
            this.InvokeAsync("DeleteProductsPrice", new object[] {
                        sID}, this.DeleteProductsPriceOperationCompleted, userState);
        }
        
        private void OnDeleteProductsPriceOperationCompleted(object arg) {
            if ((this.DeleteProductsPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductsPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductsPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsPrice(string sSql) {
            object[] results = this.Invoke("GetProductsPrice", new object[] {
                        sSql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsPriceAsync(string sSql) {
            this.GetProductsPriceAsync(sSql, null);
        }
        
        /// <remarks/>
        public void GetProductsPriceAsync(string sSql, object userState) {
            if ((this.GetProductsPriceOperationCompleted == null)) {
                this.GetProductsPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsPriceOperationCompleted);
            }
            this.InvokeAsync("GetProductsPrice", new object[] {
                        sSql}, this.GetProductsPriceOperationCompleted, userState);
        }
        
        private void OnGetProductsPriceOperationCompleted(object arg) {
            if ((this.GetProductsPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsPriceCompleted(this, new GetProductsPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProductsPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProductsPrice(string sId, string sProductPriceName, string sProductPriceTypeA, string sProductPriceTypeB, string sProductPriceState, string sProductPriceMemory, string sStartDate, string sEndDate, string sRecorder, string sRecordDate) {
            this.Invoke("UpdateProductsPrice", new object[] {
                        sId,
                        sProductPriceName,
                        sProductPriceTypeA,
                        sProductPriceTypeB,
                        sProductPriceState,
                        sProductPriceMemory,
                        sStartDate,
                        sEndDate,
                        sRecorder,
                        sRecordDate});
        }
        
        /// <remarks/>
        public void UpdateProductsPriceAsync(string sId, string sProductPriceName, string sProductPriceTypeA, string sProductPriceTypeB, string sProductPriceState, string sProductPriceMemory, string sStartDate, string sEndDate, string sRecorder, string sRecordDate) {
            this.UpdateProductsPriceAsync(sId, sProductPriceName, sProductPriceTypeA, sProductPriceTypeB, sProductPriceState, sProductPriceMemory, sStartDate, sEndDate, sRecorder, sRecordDate, null);
        }
        
        /// <remarks/>
        public void UpdateProductsPriceAsync(string sId, string sProductPriceName, string sProductPriceTypeA, string sProductPriceTypeB, string sProductPriceState, string sProductPriceMemory, string sStartDate, string sEndDate, string sRecorder, string sRecordDate, object userState) {
            if ((this.UpdateProductsPriceOperationCompleted == null)) {
                this.UpdateProductsPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductsPriceOperationCompleted);
            }
            this.InvokeAsync("UpdateProductsPrice", new object[] {
                        sId,
                        sProductPriceName,
                        sProductPriceTypeA,
                        sProductPriceTypeB,
                        sProductPriceState,
                        sProductPriceMemory,
                        sStartDate,
                        sEndDate,
                        sRecorder,
                        sRecordDate}, this.UpdateProductsPriceOperationCompleted, userState);
        }
        
        private void OnUpdateProductsPriceOperationCompleted(object arg) {
            if ((this.UpdateProductsPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductsPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProductsPrice_Company", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProductsPrice_Company(string sql) {
            this.Invoke("InsertProductsPrice_Company", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void InsertProductsPrice_CompanyAsync(string sql) {
            this.InsertProductsPrice_CompanyAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsertProductsPrice_CompanyAsync(string sql, object userState) {
            if ((this.InsertProductsPrice_CompanyOperationCompleted == null)) {
                this.InsertProductsPrice_CompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProductsPrice_CompanyOperationCompleted);
            }
            this.InvokeAsync("InsertProductsPrice_Company", new object[] {
                        sql}, this.InsertProductsPrice_CompanyOperationCompleted, userState);
        }
        
        private void OnInsertProductsPrice_CompanyOperationCompleted(object arg) {
            if ((this.InsertProductsPrice_CompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProductsPrice_CompanyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProductsPrice_Company", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProductsPrice_Company(string sID) {
            this.Invoke("DeleteProductsPrice_Company", new object[] {
                        sID});
        }
        
        /// <remarks/>
        public void DeleteProductsPrice_CompanyAsync(string sID) {
            this.DeleteProductsPrice_CompanyAsync(sID, null);
        }
        
        /// <remarks/>
        public void DeleteProductsPrice_CompanyAsync(string sID, object userState) {
            if ((this.DeleteProductsPrice_CompanyOperationCompleted == null)) {
                this.DeleteProductsPrice_CompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductsPrice_CompanyOperationCompleted);
            }
            this.InvokeAsync("DeleteProductsPrice_Company", new object[] {
                        sID}, this.DeleteProductsPrice_CompanyOperationCompleted, userState);
        }
        
        private void OnDeleteProductsPrice_CompanyOperationCompleted(object arg) {
            if ((this.DeleteProductsPrice_CompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductsPrice_CompanyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductsPrice_Company", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsPrice_Company(string sql) {
            object[] results = this.Invoke("GetProductsPrice_Company", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsPrice_CompanyAsync(string sql) {
            this.GetProductsPrice_CompanyAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetProductsPrice_CompanyAsync(string sql, object userState) {
            if ((this.GetProductsPrice_CompanyOperationCompleted == null)) {
                this.GetProductsPrice_CompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsPrice_CompanyOperationCompleted);
            }
            this.InvokeAsync("GetProductsPrice_Company", new object[] {
                        sql}, this.GetProductsPrice_CompanyOperationCompleted, userState);
        }
        
        private void OnGetProductsPrice_CompanyOperationCompleted(object arg) {
            if ((this.GetProductsPrice_CompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsPrice_CompanyCompleted(this, new GetProductsPrice_CompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProductsPrice_Product", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProductsPrice_Product(string sql) {
            this.Invoke("InsertProductsPrice_Product", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void InsertProductsPrice_ProductAsync(string sql) {
            this.InsertProductsPrice_ProductAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsertProductsPrice_ProductAsync(string sql, object userState) {
            if ((this.InsertProductsPrice_ProductOperationCompleted == null)) {
                this.InsertProductsPrice_ProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProductsPrice_ProductOperationCompleted);
            }
            this.InvokeAsync("InsertProductsPrice_Product", new object[] {
                        sql}, this.InsertProductsPrice_ProductOperationCompleted, userState);
        }
        
        private void OnInsertProductsPrice_ProductOperationCompleted(object arg) {
            if ((this.InsertProductsPrice_ProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProductsPrice_ProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProductsPrice_Product", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProductsPrice_Product(string sID) {
            this.Invoke("DeleteProductsPrice_Product", new object[] {
                        sID});
        }
        
        /// <remarks/>
        public void DeleteProductsPrice_ProductAsync(string sID) {
            this.DeleteProductsPrice_ProductAsync(sID, null);
        }
        
        /// <remarks/>
        public void DeleteProductsPrice_ProductAsync(string sID, object userState) {
            if ((this.DeleteProductsPrice_ProductOperationCompleted == null)) {
                this.DeleteProductsPrice_ProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductsPrice_ProductOperationCompleted);
            }
            this.InvokeAsync("DeleteProductsPrice_Product", new object[] {
                        sID}, this.DeleteProductsPrice_ProductOperationCompleted, userState);
        }
        
        private void OnDeleteProductsPrice_ProductOperationCompleted(object arg) {
            if ((this.DeleteProductsPrice_ProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductsPrice_ProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductsPrice_Product", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsPrice_Product(string sSql) {
            object[] results = this.Invoke("GetProductsPrice_Product", new object[] {
                        sSql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsPrice_ProductAsync(string sSql) {
            this.GetProductsPrice_ProductAsync(sSql, null);
        }
        
        /// <remarks/>
        public void GetProductsPrice_ProductAsync(string sSql, object userState) {
            if ((this.GetProductsPrice_ProductOperationCompleted == null)) {
                this.GetProductsPrice_ProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsPrice_ProductOperationCompleted);
            }
            this.InvokeAsync("GetProductsPrice_Product", new object[] {
                        sSql}, this.GetProductsPrice_ProductOperationCompleted, userState);
        }
        
        private void OnGetProductsPrice_ProductOperationCompleted(object arg) {
            if ((this.GetProductsPrice_ProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsPrice_ProductCompleted(this, new GetProductsPrice_ProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProductsPrice_Size", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProductsPrice_Size(string sql) {
            this.Invoke("InsertProductsPrice_Size", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void InsertProductsPrice_SizeAsync(string sql) {
            this.InsertProductsPrice_SizeAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsertProductsPrice_SizeAsync(string sql, object userState) {
            if ((this.InsertProductsPrice_SizeOperationCompleted == null)) {
                this.InsertProductsPrice_SizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProductsPrice_SizeOperationCompleted);
            }
            this.InvokeAsync("InsertProductsPrice_Size", new object[] {
                        sql}, this.InsertProductsPrice_SizeOperationCompleted, userState);
        }
        
        private void OnInsertProductsPrice_SizeOperationCompleted(object arg) {
            if ((this.InsertProductsPrice_SizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProductsPrice_SizeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProductsPrice_Size", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProductsPrice_Size(string sID) {
            this.Invoke("DeleteProductsPrice_Size", new object[] {
                        sID});
        }
        
        /// <remarks/>
        public void DeleteProductsPrice_SizeAsync(string sID) {
            this.DeleteProductsPrice_SizeAsync(sID, null);
        }
        
        /// <remarks/>
        public void DeleteProductsPrice_SizeAsync(string sID, object userState) {
            if ((this.DeleteProductsPrice_SizeOperationCompleted == null)) {
                this.DeleteProductsPrice_SizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductsPrice_SizeOperationCompleted);
            }
            this.InvokeAsync("DeleteProductsPrice_Size", new object[] {
                        sID}, this.DeleteProductsPrice_SizeOperationCompleted, userState);
        }
        
        private void OnDeleteProductsPrice_SizeOperationCompleted(object arg) {
            if ((this.DeleteProductsPrice_SizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductsPrice_SizeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductsPrice_Size", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsPrice_Size(string sql) {
            object[] results = this.Invoke("GetProductsPrice_Size", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsPrice_SizeAsync(string sql) {
            this.GetProductsPrice_SizeAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetProductsPrice_SizeAsync(string sql, object userState) {
            if ((this.GetProductsPrice_SizeOperationCompleted == null)) {
                this.GetProductsPrice_SizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsPrice_SizeOperationCompleted);
            }
            this.InvokeAsync("GetProductsPrice_Size", new object[] {
                        sql}, this.GetProductsPrice_SizeOperationCompleted, userState);
        }
        
        private void OnGetProductsPrice_SizeOperationCompleted(object arg) {
            if ((this.GetProductsPrice_SizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsPrice_SizeCompleted(this, new GetProductsPrice_SizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProductsPrice_Size", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProductsPrice_Size(string sID, string sHight, string sWidth, string sUnit, string sArea, string sCost_Price, string sSale_Price, string sProductPriceID) {
            this.Invoke("UpdateProductsPrice_Size", new object[] {
                        sID,
                        sHight,
                        sWidth,
                        sUnit,
                        sArea,
                        sCost_Price,
                        sSale_Price,
                        sProductPriceID});
        }
        
        /// <remarks/>
        public void UpdateProductsPrice_SizeAsync(string sID, string sHight, string sWidth, string sUnit, string sArea, string sCost_Price, string sSale_Price, string sProductPriceID) {
            this.UpdateProductsPrice_SizeAsync(sID, sHight, sWidth, sUnit, sArea, sCost_Price, sSale_Price, sProductPriceID, null);
        }
        
        /// <remarks/>
        public void UpdateProductsPrice_SizeAsync(string sID, string sHight, string sWidth, string sUnit, string sArea, string sCost_Price, string sSale_Price, string sProductPriceID, object userState) {
            if ((this.UpdateProductsPrice_SizeOperationCompleted == null)) {
                this.UpdateProductsPrice_SizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductsPrice_SizeOperationCompleted);
            }
            this.InvokeAsync("UpdateProductsPrice_Size", new object[] {
                        sID,
                        sHight,
                        sWidth,
                        sUnit,
                        sArea,
                        sCost_Price,
                        sSale_Price,
                        sProductPriceID}, this.UpdateProductsPrice_SizeOperationCompleted, userState);
        }
        
        private void OnUpdateProductsPrice_SizeOperationCompleted(object arg) {
            if ((this.UpdateProductsPrice_SizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductsPrice_SizeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrdersInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrdersInfo(string sql) {
            this.Invoke("AddOrdersInfo", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void AddOrdersInfoAsync(string sql) {
            this.AddOrdersInfoAsync(sql, null);
        }
        
        /// <remarks/>
        public void AddOrdersInfoAsync(string sql, object userState) {
            if ((this.AddOrdersInfoOperationCompleted == null)) {
                this.AddOrdersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrdersInfoOperationCompleted);
            }
            this.InvokeAsync("AddOrdersInfo", new object[] {
                        sql}, this.AddOrdersInfoOperationCompleted, userState);
        }
        
        private void OnAddOrdersInfoOperationCompleted(object arg) {
            if ((this.AddOrdersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrdersInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdersInfoAndOrders_ProductsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrdersInfoAndOrders_ProductsInfo(string Sql) {
            object[] results = this.Invoke("GetOrdersInfoAndOrders_ProductsInfo", new object[] {
                        Sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersInfoAndOrders_ProductsInfoAsync(string Sql) {
            this.GetOrdersInfoAndOrders_ProductsInfoAsync(Sql, null);
        }
        
        /// <remarks/>
        public void GetOrdersInfoAndOrders_ProductsInfoAsync(string Sql, object userState) {
            if ((this.GetOrdersInfoAndOrders_ProductsInfoOperationCompleted == null)) {
                this.GetOrdersInfoAndOrders_ProductsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersInfoAndOrders_ProductsInfoOperationCompleted);
            }
            this.InvokeAsync("GetOrdersInfoAndOrders_ProductsInfo", new object[] {
                        Sql}, this.GetOrdersInfoAndOrders_ProductsInfoOperationCompleted, userState);
        }
        
        private void OnGetOrdersInfoAndOrders_ProductsInfoOperationCompleted(object arg) {
            if ((this.GetOrdersInfoAndOrders_ProductsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersInfoAndOrders_ProductsInfoCompleted(this, new GetOrdersInfoAndOrders_ProductsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductPhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] GetProductPhoto(string sOrderNO, string sOrderIndex, string sSeparateNO) {
            object[] results = this.Invoke("GetProductPhoto", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateNO});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductPhotoAsync(string sOrderNO, string sOrderIndex, string sSeparateNO) {
            this.GetProductPhotoAsync(sOrderNO, sOrderIndex, sSeparateNO, null);
        }
        
        /// <remarks/>
        public void GetProductPhotoAsync(string sOrderNO, string sOrderIndex, string sSeparateNO, object userState) {
            if ((this.GetProductPhotoOperationCompleted == null)) {
                this.GetProductPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductPhotoOperationCompleted);
            }
            this.InvokeAsync("GetProductPhoto", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateNO}, this.GetProductPhotoOperationCompleted, userState);
        }
        
        private void OnGetProductPhotoOperationCompleted(object arg) {
            if ((this.GetProductPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductPhotoCompleted(this, new GetProductPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdersInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrdersInfo(string Sql) {
            object[] results = this.Invoke("GetOrdersInfo", new object[] {
                        Sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersInfoAsync(string Sql) {
            this.GetOrdersInfoAsync(Sql, null);
        }
        
        /// <remarks/>
        public void GetOrdersInfoAsync(string Sql, object userState) {
            if ((this.GetOrdersInfoOperationCompleted == null)) {
                this.GetOrdersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersInfoOperationCompleted);
            }
            this.InvokeAsync("GetOrdersInfo", new object[] {
                        Sql}, this.GetOrdersInfoOperationCompleted, userState);
        }
        
        private void OnGetOrdersInfoOperationCompleted(object arg) {
            if ((this.GetOrdersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersInfoCompleted(this, new GetOrdersInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrdersInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrdersInfo(string OrderNO, string CompanyID, string Customer, string Phone, string Email, string FPH, string Files, string Path1, string Path2, string Path3, string SendWay, string OrderMemory, string GetGoodsDate, string OrderEmployeeName) {
            this.Invoke("UpdateOrdersInfo", new object[] {
                        OrderNO,
                        CompanyID,
                        Customer,
                        Phone,
                        Email,
                        FPH,
                        Files,
                        Path1,
                        Path2,
                        Path3,
                        SendWay,
                        OrderMemory,
                        GetGoodsDate,
                        OrderEmployeeName});
        }
        
        /// <remarks/>
        public void UpdateOrdersInfoAsync(string OrderNO, string CompanyID, string Customer, string Phone, string Email, string FPH, string Files, string Path1, string Path2, string Path3, string SendWay, string OrderMemory, string GetGoodsDate, string OrderEmployeeName) {
            this.UpdateOrdersInfoAsync(OrderNO, CompanyID, Customer, Phone, Email, FPH, Files, Path1, Path2, Path3, SendWay, OrderMemory, GetGoodsDate, OrderEmployeeName, null);
        }
        
        /// <remarks/>
        public void UpdateOrdersInfoAsync(string OrderNO, string CompanyID, string Customer, string Phone, string Email, string FPH, string Files, string Path1, string Path2, string Path3, string SendWay, string OrderMemory, string GetGoodsDate, string OrderEmployeeName, object userState) {
            if ((this.UpdateOrdersInfoOperationCompleted == null)) {
                this.UpdateOrdersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrdersInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateOrdersInfo", new object[] {
                        OrderNO,
                        CompanyID,
                        Customer,
                        Phone,
                        Email,
                        FPH,
                        Files,
                        Path1,
                        Path2,
                        Path3,
                        SendWay,
                        OrderMemory,
                        GetGoodsDate,
                        OrderEmployeeName}, this.UpdateOrdersInfoOperationCompleted, userState);
        }
        
        private void OnUpdateOrdersInfoOperationCompleted(object arg) {
            if ((this.UpdateOrdersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrdersInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOrders(string sOrderNO) {
            this.Invoke("DeleteOrders", new object[] {
                        sOrderNO});
        }
        
        /// <remarks/>
        public void DeleteOrdersAsync(string sOrderNO) {
            this.DeleteOrdersAsync(sOrderNO, null);
        }
        
        /// <remarks/>
        public void DeleteOrdersAsync(string sOrderNO, object userState) {
            if ((this.DeleteOrdersOperationCompleted == null)) {
                this.DeleteOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrdersOperationCompleted);
            }
            this.InvokeAsync("DeleteOrders", new object[] {
                        sOrderNO}, this.DeleteOrdersOperationCompleted, userState);
        }
        
        private void OnDeleteOrdersOperationCompleted(object arg) {
            if ((this.DeleteOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrdersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOrders_Products", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOrders_Products(string sOrderNo, string sOrderIndex, string ProductNumber, string OrderEmployee) {
            this.Invoke("DeleteOrders_Products", new object[] {
                        sOrderNo,
                        sOrderIndex,
                        ProductNumber,
                        OrderEmployee});
        }
        
        /// <remarks/>
        public void DeleteOrders_ProductsAsync(string sOrderNo, string sOrderIndex, string ProductNumber, string OrderEmployee) {
            this.DeleteOrders_ProductsAsync(sOrderNo, sOrderIndex, ProductNumber, OrderEmployee, null);
        }
        
        /// <remarks/>
        public void DeleteOrders_ProductsAsync(string sOrderNo, string sOrderIndex, string ProductNumber, string OrderEmployee, object userState) {
            if ((this.DeleteOrders_ProductsOperationCompleted == null)) {
                this.DeleteOrders_ProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrders_ProductsOperationCompleted);
            }
            this.InvokeAsync("DeleteOrders_Products", new object[] {
                        sOrderNo,
                        sOrderIndex,
                        ProductNumber,
                        OrderEmployee}, this.DeleteOrders_ProductsOperationCompleted, userState);
        }
        
        private void OnDeleteOrders_ProductsOperationCompleted(object arg) {
            if ((this.DeleteOrders_ProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrders_ProductsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_ProductsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateOrders_ProductsInfo(
                    string OrderNO, 
                    string OrderIndex, 
                    string ProductID, 
                    string Box, 
                    string Hight, 
                    string Width, 
                    string Unit, 
                    string Page, 
                    string ProductNumber, 
                    string Paper, 
                    string Add_Photo, 
                    string Gold_Paper, 
                    string Customer_Confirm1, 
                    string Customer_Confirm2, 
                    string film, 
                    string InsidePage, 
                    string Biao, 
                    string Ban, 
                    string Diao, 
                    string sPrice1, 
                    string sPrice2, 
                    string SCFS, 
                    string OrderMemory, 
                    string WorkMemory, 
                    string GetGoodsType, 
                    string GetGoodsDate, 
                    string Output, 
                    string OrderEmployee, 
                    string ProductType, 
                    string WorkNumber, 
                    double SCZXPrice, 
                    double XCPrice, 
                    double XKPrice, 
                    string Fram) {
            object[] results = this.Invoke("UpdateOrders_ProductsInfo", new object[] {
                        OrderNO,
                        OrderIndex,
                        ProductID,
                        Box,
                        Hight,
                        Width,
                        Unit,
                        Page,
                        ProductNumber,
                        Paper,
                        Add_Photo,
                        Gold_Paper,
                        Customer_Confirm1,
                        Customer_Confirm2,
                        film,
                        InsidePage,
                        Biao,
                        Ban,
                        Diao,
                        sPrice1,
                        sPrice2,
                        SCFS,
                        OrderMemory,
                        WorkMemory,
                        GetGoodsType,
                        GetGoodsDate,
                        Output,
                        OrderEmployee,
                        ProductType,
                        WorkNumber,
                        SCZXPrice,
                        XCPrice,
                        XKPrice,
                        Fram});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrders_ProductsInfoAsync(
                    string OrderNO, 
                    string OrderIndex, 
                    string ProductID, 
                    string Box, 
                    string Hight, 
                    string Width, 
                    string Unit, 
                    string Page, 
                    string ProductNumber, 
                    string Paper, 
                    string Add_Photo, 
                    string Gold_Paper, 
                    string Customer_Confirm1, 
                    string Customer_Confirm2, 
                    string film, 
                    string InsidePage, 
                    string Biao, 
                    string Ban, 
                    string Diao, 
                    string sPrice1, 
                    string sPrice2, 
                    string SCFS, 
                    string OrderMemory, 
                    string WorkMemory, 
                    string GetGoodsType, 
                    string GetGoodsDate, 
                    string Output, 
                    string OrderEmployee, 
                    string ProductType, 
                    string WorkNumber, 
                    double SCZXPrice, 
                    double XCPrice, 
                    double XKPrice, 
                    string Fram) {
            this.UpdateOrders_ProductsInfoAsync(OrderNO, OrderIndex, ProductID, Box, Hight, Width, Unit, Page, ProductNumber, Paper, Add_Photo, Gold_Paper, Customer_Confirm1, Customer_Confirm2, film, InsidePage, Biao, Ban, Diao, sPrice1, sPrice2, SCFS, OrderMemory, WorkMemory, GetGoodsType, GetGoodsDate, Output, OrderEmployee, ProductType, WorkNumber, SCZXPrice, XCPrice, XKPrice, Fram, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_ProductsInfoAsync(
                    string OrderNO, 
                    string OrderIndex, 
                    string ProductID, 
                    string Box, 
                    string Hight, 
                    string Width, 
                    string Unit, 
                    string Page, 
                    string ProductNumber, 
                    string Paper, 
                    string Add_Photo, 
                    string Gold_Paper, 
                    string Customer_Confirm1, 
                    string Customer_Confirm2, 
                    string film, 
                    string InsidePage, 
                    string Biao, 
                    string Ban, 
                    string Diao, 
                    string sPrice1, 
                    string sPrice2, 
                    string SCFS, 
                    string OrderMemory, 
                    string WorkMemory, 
                    string GetGoodsType, 
                    string GetGoodsDate, 
                    string Output, 
                    string OrderEmployee, 
                    string ProductType, 
                    string WorkNumber, 
                    double SCZXPrice, 
                    double XCPrice, 
                    double XKPrice, 
                    string Fram, 
                    object userState) {
            if ((this.UpdateOrders_ProductsInfoOperationCompleted == null)) {
                this.UpdateOrders_ProductsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_ProductsInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_ProductsInfo", new object[] {
                        OrderNO,
                        OrderIndex,
                        ProductID,
                        Box,
                        Hight,
                        Width,
                        Unit,
                        Page,
                        ProductNumber,
                        Paper,
                        Add_Photo,
                        Gold_Paper,
                        Customer_Confirm1,
                        Customer_Confirm2,
                        film,
                        InsidePage,
                        Biao,
                        Ban,
                        Diao,
                        sPrice1,
                        sPrice2,
                        SCFS,
                        OrderMemory,
                        WorkMemory,
                        GetGoodsType,
                        GetGoodsDate,
                        Output,
                        OrderEmployee,
                        ProductType,
                        WorkNumber,
                        SCZXPrice,
                        XCPrice,
                        XKPrice,
                        Fram}, this.UpdateOrders_ProductsInfoOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_ProductsInfoOperationCompleted(object arg) {
            if ((this.UpdateOrders_ProductsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_ProductsInfoCompleted(this, new UpdateOrders_ProductsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/returnOrderNO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string returnOrderNO(string OrderNO) {
            object[] results = this.Invoke("returnOrderNO", new object[] {
                        OrderNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void returnOrderNOAsync(string OrderNO) {
            this.returnOrderNOAsync(OrderNO, null);
        }
        
        /// <remarks/>
        public void returnOrderNOAsync(string OrderNO, object userState) {
            if ((this.returnOrderNOOperationCompleted == null)) {
                this.returnOrderNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreturnOrderNOOperationCompleted);
            }
            this.InvokeAsync("returnOrderNO", new object[] {
                        OrderNO}, this.returnOrderNOOperationCompleted, userState);
        }
        
        private void OnreturnOrderNOOperationCompleted(object arg) {
            if ((this.returnOrderNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.returnOrderNOCompleted(this, new returnOrderNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductTypeName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductTypeName(string sProductName) {
            object[] results = this.Invoke("GetProductTypeName", new object[] {
                        sProductName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductTypeNameAsync(string sProductName) {
            this.GetProductTypeNameAsync(sProductName, null);
        }
        
        /// <remarks/>
        public void GetProductTypeNameAsync(string sProductName, object userState) {
            if ((this.GetProductTypeNameOperationCompleted == null)) {
                this.GetProductTypeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductTypeNameOperationCompleted);
            }
            this.InvokeAsync("GetProductTypeName", new object[] {
                        sProductName}, this.GetProductTypeNameOperationCompleted, userState);
        }
        
        private void OnGetProductTypeNameOperationCompleted(object arg) {
            if ((this.GetProductTypeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductTypeNameCompleted(this, new GetProductTypeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConfig_Code_No", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfig_Code_No(string sConfig_NO) {
            object[] results = this.Invoke("GetConfig_Code_No", new object[] {
                        sConfig_NO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfig_Code_NoAsync(string sConfig_NO) {
            this.GetConfig_Code_NoAsync(sConfig_NO, null);
        }
        
        /// <remarks/>
        public void GetConfig_Code_NoAsync(string sConfig_NO, object userState) {
            if ((this.GetConfig_Code_NoOperationCompleted == null)) {
                this.GetConfig_Code_NoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfig_Code_NoOperationCompleted);
            }
            this.InvokeAsync("GetConfig_Code_No", new object[] {
                        sConfig_NO}, this.GetConfig_Code_NoOperationCompleted, userState);
        }
        
        private void OnGetConfig_Code_NoOperationCompleted(object arg) {
            if ((this.GetConfig_Code_NoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfig_Code_NoCompleted(this, new GetConfig_Code_NoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrdersPath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrdersPath(string sOrderNO, string sPath, string sPathType) {
            this.Invoke("UpdateOrdersPath", new object[] {
                        sOrderNO,
                        sPath,
                        sPathType});
        }
        
        /// <remarks/>
        public void UpdateOrdersPathAsync(string sOrderNO, string sPath, string sPathType) {
            this.UpdateOrdersPathAsync(sOrderNO, sPath, sPathType, null);
        }
        
        /// <remarks/>
        public void UpdateOrdersPathAsync(string sOrderNO, string sPath, string sPathType, object userState) {
            if ((this.UpdateOrdersPathOperationCompleted == null)) {
                this.UpdateOrdersPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrdersPathOperationCompleted);
            }
            this.InvokeAsync("UpdateOrdersPath", new object[] {
                        sOrderNO,
                        sPath,
                        sPathType}, this.UpdateOrdersPathOperationCompleted, userState);
        }
        
        private void OnUpdateOrdersPathOperationCompleted(object arg) {
            if ((this.UpdateOrdersPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrdersPathCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_OutPut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_OutPut(string sOrderNO, string sOrderIndex, string sOutPut) {
            this.Invoke("UpdateOrders_Products_OutPut", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutPut});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_OutPutAsync(string sOrderNO, string sOrderIndex, string sOutPut) {
            this.UpdateOrders_Products_OutPutAsync(sOrderNO, sOrderIndex, sOutPut, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_OutPutAsync(string sOrderNO, string sOrderIndex, string sOutPut, object userState) {
            if ((this.UpdateOrders_Products_OutPutOperationCompleted == null)) {
                this.UpdateOrders_Products_OutPutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_OutPutOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_OutPut", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutPut}, this.UpdateOrders_Products_OutPutOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_OutPutOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_OutPutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_OutPutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_OutputDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_OutputDate(string sOrderNO, string sOrderIndex, string sOutputDate) {
            this.Invoke("UpdateOrders_Products_OutputDate", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutputDate});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_OutputDateAsync(string sOrderNO, string sOrderIndex, string sOutputDate) {
            this.UpdateOrders_Products_OutputDateAsync(sOrderNO, sOrderIndex, sOutputDate, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_OutputDateAsync(string sOrderNO, string sOrderIndex, string sOutputDate, object userState) {
            if ((this.UpdateOrders_Products_OutputDateOperationCompleted == null)) {
                this.UpdateOrders_Products_OutputDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_OutputDateOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_OutputDate", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sOutputDate}, this.UpdateOrders_Products_OutputDateOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_OutputDateOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_OutputDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_OutputDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_ProductDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_ProductDate(string sOrderNO, string sOrderIndex, string sProductDate) {
            this.Invoke("UpdateOrders_Products_ProductDate", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sProductDate});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_ProductDateAsync(string sOrderNO, string sOrderIndex, string sProductDate) {
            this.UpdateOrders_Products_ProductDateAsync(sOrderNO, sOrderIndex, sProductDate, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_ProductDateAsync(string sOrderNO, string sOrderIndex, string sProductDate, object userState) {
            if ((this.UpdateOrders_Products_ProductDateOperationCompleted == null)) {
                this.UpdateOrders_Products_ProductDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_ProductDateOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_ProductDate", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sProductDate}, this.UpdateOrders_Products_ProductDateOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_ProductDateOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_ProductDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_ProductDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_GetGoodsDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_GetGoodsDate(string sOrderNO, string sOrderIndex, string sGetGoodsDate) {
            this.Invoke("UpdateOrders_Products_GetGoodsDate", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sGetGoodsDate});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_GetGoodsDateAsync(string sOrderNO, string sOrderIndex, string sGetGoodsDate) {
            this.UpdateOrders_Products_GetGoodsDateAsync(sOrderNO, sOrderIndex, sGetGoodsDate, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_GetGoodsDateAsync(string sOrderNO, string sOrderIndex, string sGetGoodsDate, object userState) {
            if ((this.UpdateOrders_Products_GetGoodsDateOperationCompleted == null)) {
                this.UpdateOrders_Products_GetGoodsDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_GetGoodsDateOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_GetGoodsDate", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sGetGoodsDate}, this.UpdateOrders_Products_GetGoodsDateOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_GetGoodsDateOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_GetGoodsDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_GetGoodsDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_GetGoodsType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_GetGoodsType(string sOrderNO, string sOrderIndex, string sGetGoodsType) {
            this.Invoke("UpdateOrders_Products_GetGoodsType", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sGetGoodsType});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_GetGoodsTypeAsync(string sOrderNO, string sOrderIndex, string sGetGoodsType) {
            this.UpdateOrders_Products_GetGoodsTypeAsync(sOrderNO, sOrderIndex, sGetGoodsType, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_GetGoodsTypeAsync(string sOrderNO, string sOrderIndex, string sGetGoodsType, object userState) {
            if ((this.UpdateOrders_Products_GetGoodsTypeOperationCompleted == null)) {
                this.UpdateOrders_Products_GetGoodsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_GetGoodsTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_GetGoodsType", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sGetGoodsType}, this.UpdateOrders_Products_GetGoodsTypeOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_GetGoodsTypeOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_GetGoodsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_GetGoodsTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_ProductType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_ProductType(string[] sOrderNO, string[] sOrderIndex, string sProductType) {
            this.Invoke("UpdateOrders_Products_ProductType", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sProductType});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_ProductTypeAsync(string[] sOrderNO, string[] sOrderIndex, string sProductType) {
            this.UpdateOrders_Products_ProductTypeAsync(sOrderNO, sOrderIndex, sProductType, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_ProductTypeAsync(string[] sOrderNO, string[] sOrderIndex, string sProductType, object userState) {
            if ((this.UpdateOrders_Products_ProductTypeOperationCompleted == null)) {
                this.UpdateOrders_Products_ProductTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_ProductTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_ProductType", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sProductType}, this.UpdateOrders_Products_ProductTypeOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_ProductTypeOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_ProductTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_ProductTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductTypeXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductTypeXML() {
            object[] results = this.Invoke("GetProductTypeXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductTypeXMLAsync() {
            this.GetProductTypeXMLAsync(null);
        }
        
        /// <remarks/>
        public void GetProductTypeXMLAsync(object userState) {
            if ((this.GetProductTypeXMLOperationCompleted == null)) {
                this.GetProductTypeXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductTypeXMLOperationCompleted);
            }
            this.InvokeAsync("GetProductTypeXML", new object[0], this.GetProductTypeXMLOperationCompleted, userState);
        }
        
        private void OnGetProductTypeXMLOperationCompleted(object arg) {
            if ((this.GetProductTypeXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductTypeXMLCompleted(this, new GetProductTypeXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductsXML() {
            object[] results = this.Invoke("GetProductsXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsXMLAsync() {
            this.GetProductsXMLAsync(null);
        }
        
        /// <remarks/>
        public void GetProductsXMLAsync(object userState) {
            if ((this.GetProductsXMLOperationCompleted == null)) {
                this.GetProductsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsXMLOperationCompleted);
            }
            this.InvokeAsync("GetProductsXML", new object[0], this.GetProductsXMLOperationCompleted, userState);
        }
        
        private void OnGetProductsXMLOperationCompleted(object arg) {
            if ((this.GetProductsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsXMLCompleted(this, new GetProductsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConfig_CodeXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfig_CodeXML() {
            object[] results = this.Invoke("GetConfig_CodeXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfig_CodeXMLAsync() {
            this.GetConfig_CodeXMLAsync(null);
        }
        
        /// <remarks/>
        public void GetConfig_CodeXMLAsync(object userState) {
            if ((this.GetConfig_CodeXMLOperationCompleted == null)) {
                this.GetConfig_CodeXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfig_CodeXMLOperationCompleted);
            }
            this.InvokeAsync("GetConfig_CodeXML", new object[0], this.GetConfig_CodeXMLOperationCompleted, userState);
        }
        
        private void OnGetConfig_CodeXMLOperationCompleted(object arg) {
            if ((this.GetConfig_CodeXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfig_CodeXMLCompleted(this, new GetConfig_CodeXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompanyXML() {
            object[] results = this.Invoke("GetCompanyXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyXMLAsync() {
            this.GetCompanyXMLAsync(null);
        }
        
        /// <remarks/>
        public void GetCompanyXMLAsync(object userState) {
            if ((this.GetCompanyXMLOperationCompleted == null)) {
                this.GetCompanyXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyXMLOperationCompleted);
            }
            this.InvokeAsync("GetCompanyXML", new object[0], this.GetCompanyXMLOperationCompleted, userState);
        }
        
        private void OnGetCompanyXMLOperationCompleted(object arg) {
            if ((this.GetCompanyXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyXMLCompleted(this, new GetCompanyXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentXML() {
            object[] results = this.Invoke("GetDepartmentXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentXMLAsync() {
            this.GetDepartmentXMLAsync(null);
        }
        
        /// <remarks/>
        public void GetDepartmentXMLAsync(object userState) {
            if ((this.GetDepartmentXMLOperationCompleted == null)) {
                this.GetDepartmentXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentXMLOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentXML", new object[0], this.GetDepartmentXMLOperationCompleted, userState);
        }
        
        private void OnGetDepartmentXMLOperationCompleted(object arg) {
            if ((this.GetDepartmentXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentXMLCompleted(this, new GetDepartmentXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Reports_Area", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Reports_Area(string sReNo) {
            object[] results = this.Invoke("Get_Reports_Area", new object[] {
                        sReNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Reports_AreaAsync(string sReNo) {
            this.Get_Reports_AreaAsync(sReNo, null);
        }
        
        /// <remarks/>
        public void Get_Reports_AreaAsync(string sReNo, object userState) {
            if ((this.Get_Reports_AreaOperationCompleted == null)) {
                this.Get_Reports_AreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Reports_AreaOperationCompleted);
            }
            this.InvokeAsync("Get_Reports_Area", new object[] {
                        sReNo}, this.Get_Reports_AreaOperationCompleted, userState);
        }
        
        private void OnGet_Reports_AreaOperationCompleted(object arg) {
            if ((this.Get_Reports_AreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Reports_AreaCompleted(this, new Get_Reports_AreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeeXML() {
            object[] results = this.Invoke("GetEmployeeXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeXMLAsync() {
            this.GetEmployeeXMLAsync(null);
        }
        
        /// <remarks/>
        public void GetEmployeeXMLAsync(object userState) {
            if ((this.GetEmployeeXMLOperationCompleted == null)) {
                this.GetEmployeeXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeXMLOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeXML", new object[0], this.GetEmployeeXMLOperationCompleted, userState);
        }
        
        private void OnGetEmployeeXMLOperationCompleted(object arg) {
            if ((this.GetEmployeeXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeXMLCompleted(this, new GetEmployeeXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductsPrice_ProductandProductsPrice_SizeXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductsPrice_ProductandProductsPrice_SizeXML() {
            object[] results = this.Invoke("GetProductsPrice_ProductandProductsPrice_SizeXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsPrice_ProductandProductsPrice_SizeXMLAsync() {
            this.GetProductsPrice_ProductandProductsPrice_SizeXMLAsync(null);
        }
        
        /// <remarks/>
        public void GetProductsPrice_ProductandProductsPrice_SizeXMLAsync(object userState) {
            if ((this.GetProductsPrice_ProductandProductsPrice_SizeXMLOperationCompleted == null)) {
                this.GetProductsPrice_ProductandProductsPrice_SizeXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsPrice_ProductandProductsPrice_SizeXMLOperationCompleted);
            }
            this.InvokeAsync("GetProductsPrice_ProductandProductsPrice_SizeXML", new object[0], this.GetProductsPrice_ProductandProductsPrice_SizeXMLOperationCompleted, userState);
        }
        
        private void OnGetProductsPrice_ProductandProductsPrice_SizeXMLOperationCompleted(object arg) {
            if ((this.GetProductsPrice_ProductandProductsPrice_SizeXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsPrice_ProductandProductsPrice_SizeXMLCompleted(this, new GetProductsPrice_ProductandProductsPrice_SizeXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ComposeXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_ComposeXML() {
            object[] results = this.Invoke("Get_ComposeXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ComposeXMLAsync() {
            this.Get_ComposeXMLAsync(null);
        }
        
        /// <remarks/>
        public void Get_ComposeXMLAsync(object userState) {
            if ((this.Get_ComposeXMLOperationCompleted == null)) {
                this.Get_ComposeXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ComposeXMLOperationCompleted);
            }
            this.InvokeAsync("Get_ComposeXML", new object[0], this.Get_ComposeXMLOperationCompleted, userState);
        }
        
        private void OnGet_ComposeXMLOperationCompleted(object arg) {
            if ((this.Get_ComposeXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ComposeXMLCompleted(this, new Get_ComposeXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OrderPathXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_OrderPathXML() {
            object[] results = this.Invoke("Get_OrderPathXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_OrderPathXMLAsync() {
            this.Get_OrderPathXMLAsync(null);
        }
        
        /// <remarks/>
        public void Get_OrderPathXMLAsync(object userState) {
            if ((this.Get_OrderPathXMLOperationCompleted == null)) {
                this.Get_OrderPathXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_OrderPathXMLOperationCompleted);
            }
            this.InvokeAsync("Get_OrderPathXML", new object[0], this.Get_OrderPathXMLOperationCompleted, userState);
        }
        
        private void OnGet_OrderPathXMLOperationCompleted(object arg) {
            if ((this.Get_OrderPathXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_OrderPathXMLCompleted(this, new Get_OrderPathXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginSelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginSelect(string sEmployeeNO, string sPassword) {
            object[] results = this.Invoke("LoginSelect", new object[] {
                        sEmployeeNO,
                        sPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginSelectAsync(string sEmployeeNO, string sPassword) {
            this.LoginSelectAsync(sEmployeeNO, sPassword, null);
        }
        
        /// <remarks/>
        public void LoginSelectAsync(string sEmployeeNO, string sPassword, object userState) {
            if ((this.LoginSelectOperationCompleted == null)) {
                this.LoginSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginSelectOperationCompleted);
            }
            this.InvokeAsync("LoginSelect", new object[] {
                        sEmployeeNO,
                        sPassword}, this.LoginSelectOperationCompleted, userState);
        }
        
        private void OnLoginSelectOperationCompleted(object arg) {
            if ((this.LoginSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginSelectCompleted(this, new LoginSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_InsertOrderLogo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_InsertOrderLogo(string[] sOrderNO, string sProcess, string sDepartment1, string sEmployee1, string sEmployee2, string sDate2, string sState, string sOpType) {
            this.Invoke("UpdateOrders_InsertOrderLogo", new object[] {
                        sOrderNO,
                        sProcess,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sDate2,
                        sState,
                        sOpType});
        }
        
        /// <remarks/>
        public void UpdateOrders_InsertOrderLogoAsync(string[] sOrderNO, string sProcess, string sDepartment1, string sEmployee1, string sEmployee2, string sDate2, string sState, string sOpType) {
            this.UpdateOrders_InsertOrderLogoAsync(sOrderNO, sProcess, sDepartment1, sEmployee1, sEmployee2, sDate2, sState, sOpType, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_InsertOrderLogoAsync(string[] sOrderNO, string sProcess, string sDepartment1, string sEmployee1, string sEmployee2, string sDate2, string sState, string sOpType, object userState) {
            if ((this.UpdateOrders_InsertOrderLogoOperationCompleted == null)) {
                this.UpdateOrders_InsertOrderLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_InsertOrderLogoOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_InsertOrderLogo", new object[] {
                        sOrderNO,
                        sProcess,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sDate2,
                        sState,
                        sOpType}, this.UpdateOrders_InsertOrderLogoOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_InsertOrderLogoOperationCompleted(object arg) {
            if ((this.UpdateOrders_InsertOrderLogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_InsertOrderLogoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_Products_InsertOrderLogo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_Products_InsertOrderLogo(string sOrderNO, string[] sOrderIndex, string sProcess, string sDepartment1, string sEmployee1, string sEmployee2, string sDate2, string sState, string sOpType) {
            this.Invoke("UpdateOrders_Products_InsertOrderLogo", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sProcess,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sDate2,
                        sState,
                        sOpType});
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_InsertOrderLogoAsync(string sOrderNO, string[] sOrderIndex, string sProcess, string sDepartment1, string sEmployee1, string sEmployee2, string sDate2, string sState, string sOpType) {
            this.UpdateOrders_Products_InsertOrderLogoAsync(sOrderNO, sOrderIndex, sProcess, sDepartment1, sEmployee1, sEmployee2, sDate2, sState, sOpType, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_Products_InsertOrderLogoAsync(string sOrderNO, string[] sOrderIndex, string sProcess, string sDepartment1, string sEmployee1, string sEmployee2, string sDate2, string sState, string sOpType, object userState) {
            if ((this.UpdateOrders_Products_InsertOrderLogoOperationCompleted == null)) {
                this.UpdateOrders_Products_InsertOrderLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_Products_InsertOrderLogoOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_Products_InsertOrderLogo", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sProcess,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sDate2,
                        sState,
                        sOpType}, this.UpdateOrders_Products_InsertOrderLogoOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_Products_InsertOrderLogoOperationCompleted(object arg) {
            if ((this.UpdateOrders_Products_InsertOrderLogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_Products_InsertOrderLogoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrders_OrderLogo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrders_OrderLogo(string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string sProcess, string sDepartment1, string sEmployee1, string sEmployee2, string sDate2, string sState, string sOpType) {
            this.Invoke("UpdateOrders_OrderLogo", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sDate2,
                        sState,
                        sOpType});
        }
        
        /// <remarks/>
        public void UpdateOrders_OrderLogoAsync(string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string sProcess, string sDepartment1, string sEmployee1, string sEmployee2, string sDate2, string sState, string sOpType) {
            this.UpdateOrders_OrderLogoAsync(sOrderNO, sOrderIndex, sSeparateOrder, sProcess, sDepartment1, sEmployee1, sEmployee2, sDate2, sState, sOpType, null);
        }
        
        /// <remarks/>
        public void UpdateOrders_OrderLogoAsync(string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string sProcess, string sDepartment1, string sEmployee1, string sEmployee2, string sDate2, string sState, string sOpType, object userState) {
            if ((this.UpdateOrders_OrderLogoOperationCompleted == null)) {
                this.UpdateOrders_OrderLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrders_OrderLogoOperationCompleted);
            }
            this.InvokeAsync("UpdateOrders_OrderLogo", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sProcess,
                        sDepartment1,
                        sEmployee1,
                        sEmployee2,
                        sDate2,
                        sState,
                        sOpType}, this.UpdateOrders_OrderLogoOperationCompleted, userState);
        }
        
        private void OnUpdateOrders_OrderLogoOperationCompleted(object arg) {
            if ((this.UpdateOrders_OrderLogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrders_OrderLogoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Select_OrderLogo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Select_OrderLogo(string sOrderNO, string sOrderIndex) {
            object[] results = this.Invoke("Select_OrderLogo", new object[] {
                        sOrderNO,
                        sOrderIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Select_OrderLogoAsync(string sOrderNO, string sOrderIndex) {
            this.Select_OrderLogoAsync(sOrderNO, sOrderIndex, null);
        }
        
        /// <remarks/>
        public void Select_OrderLogoAsync(string sOrderNO, string sOrderIndex, object userState) {
            if ((this.Select_OrderLogoOperationCompleted == null)) {
                this.Select_OrderLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelect_OrderLogoOperationCompleted);
            }
            this.InvokeAsync("Select_OrderLogo", new object[] {
                        sOrderNO,
                        sOrderIndex}, this.Select_OrderLogoOperationCompleted, userState);
        }
        
        private void OnSelect_OrderLogoOperationCompleted(object arg) {
            if ((this.Select_OrderLogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Select_OrderLogoCompleted(this, new Select_OrderLogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OrderLogo_Employee2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_OrderLogo_Employee2(string sOrderNO, string sOrderIndex) {
            object[] results = this.Invoke("Get_OrderLogo_Employee2", new object[] {
                        sOrderNO,
                        sOrderIndex});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_OrderLogo_Employee2Async(string sOrderNO, string sOrderIndex) {
            this.Get_OrderLogo_Employee2Async(sOrderNO, sOrderIndex, null);
        }
        
        /// <remarks/>
        public void Get_OrderLogo_Employee2Async(string sOrderNO, string sOrderIndex, object userState) {
            if ((this.Get_OrderLogo_Employee2OperationCompleted == null)) {
                this.Get_OrderLogo_Employee2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_OrderLogo_Employee2OperationCompleted);
            }
            this.InvokeAsync("Get_OrderLogo_Employee2", new object[] {
                        sOrderNO,
                        sOrderIndex}, this.Get_OrderLogo_Employee2OperationCompleted, userState);
        }
        
        private void OnGet_OrderLogo_Employee2OperationCompleted(object arg) {
            if ((this.Get_OrderLogo_Employee2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_OrderLogo_Employee2Completed(this, new Get_OrderLogo_Employee2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheCurrentGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTheCurrentGroup(string sGroup) {
            object[] results = this.Invoke("GetTheCurrentGroup", new object[] {
                        sGroup});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTheCurrentGroupAsync(string sGroup) {
            this.GetTheCurrentGroupAsync(sGroup, null);
        }
        
        /// <remarks/>
        public void GetTheCurrentGroupAsync(string sGroup, object userState) {
            if ((this.GetTheCurrentGroupOperationCompleted == null)) {
                this.GetTheCurrentGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheCurrentGroupOperationCompleted);
            }
            this.InvokeAsync("GetTheCurrentGroup", new object[] {
                        sGroup}, this.GetTheCurrentGroupOperationCompleted, userState);
        }
        
        private void OnGetTheCurrentGroupOperationCompleted(object arg) {
            if ((this.GetTheCurrentGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheCurrentGroupCompleted(this, new GetTheCurrentGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Orders_Products_OrderMemory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Orders_Products_OrderMemory(string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string sOrderMemory) {
            this.Invoke("Update_Orders_Products_OrderMemory", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sOrderMemory});
        }
        
        /// <remarks/>
        public void Update_Orders_Products_OrderMemoryAsync(string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string sOrderMemory) {
            this.Update_Orders_Products_OrderMemoryAsync(sOrderNO, sOrderIndex, sSeparateOrder, sOrderMemory, null);
        }
        
        /// <remarks/>
        public void Update_Orders_Products_OrderMemoryAsync(string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string sOrderMemory, object userState) {
            if ((this.Update_Orders_Products_OrderMemoryOperationCompleted == null)) {
                this.Update_Orders_Products_OrderMemoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Orders_Products_OrderMemoryOperationCompleted);
            }
            this.InvokeAsync("Update_Orders_Products_OrderMemory", new object[] {
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sOrderMemory}, this.Update_Orders_Products_OrderMemoryOperationCompleted, userState);
        }
        
        private void OnUpdate_Orders_Products_OrderMemoryOperationCompleted(object arg) {
            if ((this.Update_Orders_Products_OrderMemoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Orders_Products_OrderMemoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Report", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_Report(string sRpNo, string sRpName, string sRpFile, string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string[] sRpNumber, string sCreater, string sCreateDate) {
            this.Invoke("Insert_Report", new object[] {
                        sRpNo,
                        sRpName,
                        sRpFile,
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sRpNumber,
                        sCreater,
                        sCreateDate});
        }
        
        /// <remarks/>
        public void Insert_ReportAsync(string sRpNo, string sRpName, string sRpFile, string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string[] sRpNumber, string sCreater, string sCreateDate) {
            this.Insert_ReportAsync(sRpNo, sRpName, sRpFile, sOrderNO, sOrderIndex, sSeparateOrder, sRpNumber, sCreater, sCreateDate, null);
        }
        
        /// <remarks/>
        public void Insert_ReportAsync(string sRpNo, string sRpName, string sRpFile, string[] sOrderNO, string[] sOrderIndex, string[] sSeparateOrder, string[] sRpNumber, string sCreater, string sCreateDate, object userState) {
            if ((this.Insert_ReportOperationCompleted == null)) {
                this.Insert_ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_ReportOperationCompleted);
            }
            this.InvokeAsync("Insert_Report", new object[] {
                        sRpNo,
                        sRpName,
                        sRpFile,
                        sOrderNO,
                        sOrderIndex,
                        sSeparateOrder,
                        sRpNumber,
                        sCreater,
                        sCreateDate}, this.Insert_ReportOperationCompleted, userState);
        }
        
        private void OnInsert_ReportOperationCompleted(object arg) {
            if ((this.Insert_ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_ReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Reports", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Reports(string sReNo) {
            object[] results = this.Invoke("Get_Reports", new object[] {
                        sReNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ReportsAsync(string sReNo) {
            this.Get_ReportsAsync(sReNo, null);
        }
        
        /// <remarks/>
        public void Get_ReportsAsync(string sReNo, object userState) {
            if ((this.Get_ReportsOperationCompleted == null)) {
                this.Get_ReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ReportsOperationCompleted);
            }
            this.InvokeAsync("Get_Reports", new object[] {
                        sReNo}, this.Get_ReportsOperationCompleted, userState);
        }
        
        private void OnGet_ReportsOperationCompleted(object arg) {
            if ((this.Get_ReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ReportsCompleted(this, new Get_ReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Reports_State", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Reports_State(string sReNo) {
            object[] results = this.Invoke("Get_Reports_State", new object[] {
                        sReNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Reports_StateAsync(string sReNo) {
            this.Get_Reports_StateAsync(sReNo, null);
        }
        
        /// <remarks/>
        public void Get_Reports_StateAsync(string sReNo, object userState) {
            if ((this.Get_Reports_StateOperationCompleted == null)) {
                this.Get_Reports_StateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Reports_StateOperationCompleted);
            }
            this.InvokeAsync("Get_Reports_State", new object[] {
                        sReNo}, this.Get_Reports_StateOperationCompleted, userState);
        }
        
        private void OnGet_Reports_StateOperationCompleted(object arg) {
            if ((this.Get_Reports_StateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Reports_StateCompleted(this, new Get_Reports_StateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Report_GetGoods", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Report_GetGoods(string sReNo) {
            object[] results = this.Invoke("Get_Report_GetGoods", new object[] {
                        sReNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Report_GetGoodsAsync(string sReNo) {
            this.Get_Report_GetGoodsAsync(sReNo, null);
        }
        
        /// <remarks/>
        public void Get_Report_GetGoodsAsync(string sReNo, object userState) {
            if ((this.Get_Report_GetGoodsOperationCompleted == null)) {
                this.Get_Report_GetGoodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Report_GetGoodsOperationCompleted);
            }
            this.InvokeAsync("Get_Report_GetGoods", new object[] {
                        sReNo}, this.Get_Report_GetGoodsOperationCompleted, userState);
        }
        
        private void OnGet_Report_GetGoodsOperationCompleted(object arg) {
            if ((this.Get_Report_GetGoodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Report_GetGoodsCompleted(this, new Get_Report_GetGoodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Report_Orders_Products", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Report_Orders_Products(string Sql) {
            object[] results = this.Invoke("Get_Report_Orders_Products", new object[] {
                        Sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Report_Orders_ProductsAsync(string Sql) {
            this.Get_Report_Orders_ProductsAsync(Sql, null);
        }
        
        /// <remarks/>
        public void Get_Report_Orders_ProductsAsync(string Sql, object userState) {
            if ((this.Get_Report_Orders_ProductsOperationCompleted == null)) {
                this.Get_Report_Orders_ProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Report_Orders_ProductsOperationCompleted);
            }
            this.InvokeAsync("Get_Report_Orders_Products", new object[] {
                        Sql}, this.Get_Report_Orders_ProductsOperationCompleted, userState);
        }
        
        private void OnGet_Report_Orders_ProductsOperationCompleted(object arg) {
            if ((this.Get_Report_Orders_ProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Report_Orders_ProductsCompleted(this, new Get_Report_Orders_ProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Report_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Report_All(string sql) {
            object[] results = this.Invoke("Get_Report_All", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Report_AllAsync(string sql) {
            this.Get_Report_AllAsync(sql, null);
        }
        
        /// <remarks/>
        public void Get_Report_AllAsync(string sql, object userState) {
            if ((this.Get_Report_AllOperationCompleted == null)) {
                this.Get_Report_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Report_AllOperationCompleted);
            }
            this.InvokeAsync("Get_Report_All", new object[] {
                        sql}, this.Get_Report_AllOperationCompleted, userState);
        }
        
        private void OnGet_Report_AllOperationCompleted(object arg) {
            if ((this.Get_Report_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Report_AllCompleted(this, new Get_Report_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Logo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_Logo(string sql) {
            this.Invoke("Insert_Logo", new object[] {
                        sql});
        }
        
        /// <remarks/>
        public void Insert_LogoAsync(string sql) {
            this.Insert_LogoAsync(sql, null);
        }
        
        /// <remarks/>
        public void Insert_LogoAsync(string sql, object userState) {
            if ((this.Insert_LogoOperationCompleted == null)) {
                this.Insert_LogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_LogoOperationCompleted);
            }
            this.InvokeAsync("Insert_Logo", new object[] {
                        sql}, this.Insert_LogoOperationCompleted, userState);
        }
        
        private void OnInsert_LogoOperationCompleted(object arg) {
            if ((this.Insert_LogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_LogoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_Logo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Logo(string sID) {
            this.Invoke("Delete_Logo", new object[] {
                        sID});
        }
        
        /// <remarks/>
        public void Delete_LogoAsync(string sID) {
            this.Delete_LogoAsync(sID, null);
        }
        
        /// <remarks/>
        public void Delete_LogoAsync(string sID, object userState) {
            if ((this.Delete_LogoOperationCompleted == null)) {
                this.Delete_LogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_LogoOperationCompleted);
            }
            this.InvokeAsync("Delete_Logo", new object[] {
                        sID}, this.Delete_LogoOperationCompleted, userState);
        }
        
        private void OnDelete_LogoOperationCompleted(object arg) {
            if ((this.Delete_LogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_LogoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Logo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Logo(string sID, string sContent, string sOperator, string sOpDateTime) {
            this.Invoke("Update_Logo", new object[] {
                        sID,
                        sContent,
                        sOperator,
                        sOpDateTime});
        }
        
        /// <remarks/>
        public void Update_LogoAsync(string sID, string sContent, string sOperator, string sOpDateTime) {
            this.Update_LogoAsync(sID, sContent, sOperator, sOpDateTime, null);
        }
        
        /// <remarks/>
        public void Update_LogoAsync(string sID, string sContent, string sOperator, string sOpDateTime, object userState) {
            if ((this.Update_LogoOperationCompleted == null)) {
                this.Update_LogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_LogoOperationCompleted);
            }
            this.InvokeAsync("Update_Logo", new object[] {
                        sID,
                        sContent,
                        sOperator,
                        sOpDateTime}, this.Update_LogoOperationCompleted, userState);
        }
        
        private void OnUpdate_LogoOperationCompleted(object arg) {
            if ((this.Update_LogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_LogoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Logo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Logo(string sSql) {
            object[] results = this.Invoke("Get_Logo", new object[] {
                        sSql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_LogoAsync(string sSql) {
            this.Get_LogoAsync(sSql, null);
        }
        
        /// <remarks/>
        public void Get_LogoAsync(string sSql, object userState) {
            if ((this.Get_LogoOperationCompleted == null)) {
                this.Get_LogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_LogoOperationCompleted);
            }
            this.InvokeAsync("Get_Logo", new object[] {
                        sSql}, this.Get_LogoOperationCompleted, userState);
        }
        
        private void OnGet_LogoOperationCompleted(object arg) {
            if ((this.Get_LogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_LogoCompleted(this, new Get_LogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BarCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_BarCodes(string[] sOrderNO, string[] sOrderIndex) {
            object[] results = this.Invoke("Get_BarCodes", new object[] {
                        sOrderNO,
                        sOrderIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BarCodesAsync(string[] sOrderNO, string[] sOrderIndex) {
            this.Get_BarCodesAsync(sOrderNO, sOrderIndex, null);
        }
        
        /// <remarks/>
        public void Get_BarCodesAsync(string[] sOrderNO, string[] sOrderIndex, object userState) {
            if ((this.Get_BarCodesOperationCompleted == null)) {
                this.Get_BarCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BarCodesOperationCompleted);
            }
            this.InvokeAsync("Get_BarCodes", new object[] {
                        sOrderNO,
                        sOrderIndex}, this.Get_BarCodesOperationCompleted, userState);
        }
        
        private void OnGet_BarCodesOperationCompleted(object arg) {
            if ((this.Get_BarCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BarCodesCompleted(this, new Get_BarCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_BarCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_BarCode(string sOrderNO) {
            object[] results = this.Invoke("Get_BarCode", new object[] {
                        sOrderNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_BarCodeAsync(string sOrderNO) {
            this.Get_BarCodeAsync(sOrderNO, null);
        }
        
        /// <remarks/>
        public void Get_BarCodeAsync(string sOrderNO, object userState) {
            if ((this.Get_BarCodeOperationCompleted == null)) {
                this.Get_BarCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_BarCodeOperationCompleted);
            }
            this.InvokeAsync("Get_BarCode", new object[] {
                        sOrderNO}, this.Get_BarCodeOperationCompleted, userState);
        }
        
        private void OnGet_BarCodeOperationCompleted(object arg) {
            if ((this.Get_BarCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_BarCodeCompleted(this, new Get_BarCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_DetailTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_DetailTable(string sql) {
            object[] results = this.Invoke("Get_DetailTable", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_DetailTableAsync(string sql) {
            this.Get_DetailTableAsync(sql, null);
        }
        
        /// <remarks/>
        public void Get_DetailTableAsync(string sql, object userState) {
            if ((this.Get_DetailTableOperationCompleted == null)) {
                this.Get_DetailTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DetailTableOperationCompleted);
            }
            this.InvokeAsync("Get_DetailTable", new object[] {
                        sql}, this.Get_DetailTableOperationCompleted, userState);
        }
        
        private void OnGet_DetailTableOperationCompleted(object arg) {
            if ((this.Get_DetailTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_DetailTableCompleted(this, new Get_DetailTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CountTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_CountTable(string sql) {
            object[] results = this.Invoke("Get_CountTable", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CountTableAsync(string sql) {
            this.Get_CountTableAsync(sql, null);
        }
        
        /// <remarks/>
        public void Get_CountTableAsync(string sql, object userState) {
            if ((this.Get_CountTableOperationCompleted == null)) {
                this.Get_CountTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CountTableOperationCompleted);
            }
            this.InvokeAsync("Get_CountTable", new object[] {
                        sql}, this.Get_CountTableOperationCompleted, userState);
        }
        
        private void OnGet_CountTableOperationCompleted(object arg) {
            if ((this.Get_CountTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CountTableCompleted(this, new Get_CountTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_DetailEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_DetailEmployee(string sql) {
            object[] results = this.Invoke("Get_DetailEmployee", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_DetailEmployeeAsync(string sql) {
            this.Get_DetailEmployeeAsync(sql, null);
        }
        
        /// <remarks/>
        public void Get_DetailEmployeeAsync(string sql, object userState) {
            if ((this.Get_DetailEmployeeOperationCompleted == null)) {
                this.Get_DetailEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DetailEmployeeOperationCompleted);
            }
            this.InvokeAsync("Get_DetailEmployee", new object[] {
                        sql}, this.Get_DetailEmployeeOperationCompleted, userState);
        }
        
        private void OnGet_DetailEmployeeOperationCompleted(object arg) {
            if ((this.Get_DetailEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_DetailEmployeeCompleted(this, new Get_DetailEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CountEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_CountEmployee(string sql) {
            object[] results = this.Invoke("Get_CountEmployee", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CountEmployeeAsync(string sql) {
            this.Get_CountEmployeeAsync(sql, null);
        }
        
        /// <remarks/>
        public void Get_CountEmployeeAsync(string sql, object userState) {
            if ((this.Get_CountEmployeeOperationCompleted == null)) {
                this.Get_CountEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CountEmployeeOperationCompleted);
            }
            this.InvokeAsync("Get_CountEmployee", new object[] {
                        sql}, this.Get_CountEmployeeOperationCompleted, userState);
        }
        
        private void OnGet_CountEmployeeOperationCompleted(object arg) {
            if ((this.Get_CountEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CountEmployeeCompleted(this, new Get_CountEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Count_RecordList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Count_RecordList(string sql) {
            object[] results = this.Invoke("Count_RecordList", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Count_RecordListAsync(string sql) {
            this.Count_RecordListAsync(sql, null);
        }
        
        /// <remarks/>
        public void Count_RecordListAsync(string sql, object userState) {
            if ((this.Count_RecordListOperationCompleted == null)) {
                this.Count_RecordListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCount_RecordListOperationCompleted);
            }
            this.InvokeAsync("Count_RecordList", new object[] {
                        sql}, this.Count_RecordListOperationCompleted, userState);
        }
        
        private void OnCount_RecordListOperationCompleted(object arg) {
            if ((this.Count_RecordListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Count_RecordListCompleted(this, new Count_RecordListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Detail_RecordList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Detail_RecordList(string Sql) {
            object[] results = this.Invoke("Detail_RecordList", new object[] {
                        Sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Detail_RecordListAsync(string Sql) {
            this.Detail_RecordListAsync(Sql, null);
        }
        
        /// <remarks/>
        public void Detail_RecordListAsync(string Sql, object userState) {
            if ((this.Detail_RecordListOperationCompleted == null)) {
                this.Detail_RecordListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetail_RecordListOperationCompleted);
            }
            this.InvokeAsync("Detail_RecordList", new object[] {
                        Sql}, this.Detail_RecordListOperationCompleted, userState);
        }
        
        private void OnDetail_RecordListOperationCompleted(object arg) {
            if ((this.Detail_RecordListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Detail_RecordListCompleted(this, new Detail_RecordListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Compose", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_Compose(string sProductNO, string sHight, string sWidth) {
            this.Invoke("Insert_Compose", new object[] {
                        sProductNO,
                        sHight,
                        sWidth});
        }
        
        /// <remarks/>
        public void Insert_ComposeAsync(string sProductNO, string sHight, string sWidth) {
            this.Insert_ComposeAsync(sProductNO, sHight, sWidth, null);
        }
        
        /// <remarks/>
        public void Insert_ComposeAsync(string sProductNO, string sHight, string sWidth, object userState) {
            if ((this.Insert_ComposeOperationCompleted == null)) {
                this.Insert_ComposeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_ComposeOperationCompleted);
            }
            this.InvokeAsync("Insert_Compose", new object[] {
                        sProductNO,
                        sHight,
                        sWidth}, this.Insert_ComposeOperationCompleted, userState);
        }
        
        private void OnInsert_ComposeOperationCompleted(object arg) {
            if ((this.Insert_ComposeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_ComposeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Compose", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Compose(string sID, string sHight, string sWidth) {
            this.Invoke("Update_Compose", new object[] {
                        sID,
                        sHight,
                        sWidth});
        }
        
        /// <remarks/>
        public void Update_ComposeAsync(string sID, string sHight, string sWidth) {
            this.Update_ComposeAsync(sID, sHight, sWidth, null);
        }
        
        /// <remarks/>
        public void Update_ComposeAsync(string sID, string sHight, string sWidth, object userState) {
            if ((this.Update_ComposeOperationCompleted == null)) {
                this.Update_ComposeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_ComposeOperationCompleted);
            }
            this.InvokeAsync("Update_Compose", new object[] {
                        sID,
                        sHight,
                        sWidth}, this.Update_ComposeOperationCompleted, userState);
        }
        
        private void OnUpdate_ComposeOperationCompleted(object arg) {
            if ((this.Update_ComposeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_ComposeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_Compose", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Compose(string sID) {
            this.Invoke("Delete_Compose", new object[] {
                        sID});
        }
        
        /// <remarks/>
        public void Delete_ComposeAsync(string sID) {
            this.Delete_ComposeAsync(sID, null);
        }
        
        /// <remarks/>
        public void Delete_ComposeAsync(string sID, object userState) {
            if ((this.Delete_ComposeOperationCompleted == null)) {
                this.Delete_ComposeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_ComposeOperationCompleted);
            }
            this.InvokeAsync("Delete_Compose", new object[] {
                        sID}, this.Delete_ComposeOperationCompleted, userState);
        }
        
        private void OnDelete_ComposeOperationCompleted(object arg) {
            if ((this.Delete_ComposeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_ComposeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Compose", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Compose(string sProductNO) {
            object[] results = this.Invoke("Get_Compose", new object[] {
                        sProductNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ComposeAsync(string sProductNO) {
            this.Get_ComposeAsync(sProductNO, null);
        }
        
        /// <remarks/>
        public void Get_ComposeAsync(string sProductNO, object userState) {
            if ((this.Get_ComposeOperationCompleted == null)) {
                this.Get_ComposeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ComposeOperationCompleted);
            }
            this.InvokeAsync("Get_Compose", new object[] {
                        sProductNO}, this.Get_ComposeOperationCompleted, userState);
        }
        
        private void OnGet_ComposeOperationCompleted(object arg) {
            if ((this.Get_ComposeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ComposeCompleted(this, new Get_ComposeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThe_EmployeeNO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetThe_EmployeeNO(string sGroup) {
            object[] results = this.Invoke("GetThe_EmployeeNO", new object[] {
                        sGroup});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetThe_EmployeeNOAsync(string sGroup) {
            this.GetThe_EmployeeNOAsync(sGroup, null);
        }
        
        /// <remarks/>
        public void GetThe_EmployeeNOAsync(string sGroup, object userState) {
            if ((this.GetThe_EmployeeNOOperationCompleted == null)) {
                this.GetThe_EmployeeNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThe_EmployeeNOOperationCompleted);
            }
            this.InvokeAsync("GetThe_EmployeeNO", new object[] {
                        sGroup}, this.GetThe_EmployeeNOOperationCompleted, userState);
        }
        
        private void OnGetThe_EmployeeNOOperationCompleted(object arg) {
            if ((this.GetThe_EmployeeNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThe_EmployeeNOCompleted(this, new GetThe_EmployeeNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetThe_Employee_NameCompletedEventHandler(object sender, GetThe_Employee_NameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThe_Employee_NameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThe_Employee_NameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void OrderCountCompletedEventHandler(object sender, OrderCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void OrderCount_KPCompletedEventHandler(object sender, OrderCount_KPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderCount_KPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderCount_KPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ProductTypeCountCompletedEventHandler(object sender, ProductTypeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductTypeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductTypeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CompanyOutputPaperCountCompletedEventHandler(object sender, CompanyOutputPaperCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompanyOutputPaperCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompanyOutputPaperCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CompanyDesignCountCompletedEventHandler(object sender, CompanyDesignCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompanyDesignCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompanyDesignCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ThreeCountCompletedEventHandler(object sender, ThreeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThreeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThreeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void MonthThreeCountCompletedEventHandler(object sender, MonthThreeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MonthThreeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MonthThreeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void XC_PageCountCompletedEventHandler(object sender, XC_PageCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XC_PageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XC_PageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void XK_PageCountCompletedEventHandler(object sender, XK_PageCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XK_PageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XK_PageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SeparateOrderCompletedEventHandler(object sender, SeparateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeparateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SeparateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SubtractOrderLogoNumberForSeparateOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateNewOrderLogoForSeparateOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SeparateOrderAndCreateNewOrderLogo_aCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SeparateOrderAndCreateNewOrderLogoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void MergeOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_OrderPath_AllCompletedEventHandler(object sender, Get_OrderPath_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_OrderPath_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_OrderPath_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertOutPut_DirectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_OutPut_DirectionCompletedEventHandler(object sender, Get_OutPut_DirectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_OutPut_DirectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_OutPut_DirectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteOutPut_DirectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_OutPut_Direction_SizeCompletedEventHandler(object sender, Get_OutPut_Direction_SizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_OutPut_Direction_SizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_OutPut_Direction_SizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheSumByPageCompletedEventHandler(object sender, GetTheSumByPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheSumByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheSumByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOutPut_OpTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_Products_SizeCompletedEventHandler(object sender, Get_Products_SizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Products_SizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Products_SizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SearchStockCompletedEventHandler(object sender, SearchStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStockCompletedEventHandler(object sender, UpdateStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void StockEnterCompletedEventHandler(object sender, StockEnterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockEnterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockEnterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SearchStockLogoCompletedEventHandler(object sender, SearchStockLogoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchStockLogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchStockLogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SearchSupplierCompletedEventHandler(object sender, SearchSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertSupplierCompletedEventHandler(object sender, InsertSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateSupplierCompletedEventHandler(object sender, UpdateSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsDeleteSupplierCompletedEventHandler(object sender, IsDeleteSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDeleteSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDeleteSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Insert_workbackCompletedEventHandler(object sender, Insert_workbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_workbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_workbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOrdersInfoAndOrders_WorkBackCompletedEventHandler(object sender, GetOrdersInfoAndOrders_WorkBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersInfoAndOrders_WorkBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersInfoAndOrders_WorkBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_PathCompletedEventHandler(object sender, UpdateOrders_PathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrders_PathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrders_PathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_SCFSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateWork_TimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateWorkShop_TimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Count_ProductsPriceCompletedEventHandler(object sender, Count_ProductsPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Count_ProductsPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Count_ProductsPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Insert_Orders_Products_OrderMemory_Product_backCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void selset_Product_backCompletedEventHandler(object sender, selset_Product_backCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selset_Product_backCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selset_Product_backCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_BarCodes_backCompletedEventHandler(object sender, Get_BarCodes_backCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BarCodes_backCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BarCodes_backCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Update_Orders_Products_OrderMemory_Product_backCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Insert_Report_BackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_Reports_BackCompletedEventHandler(object sender, Get_Reports_BackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Reports_BackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Reports_BackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ProductTypeCount_XCCompletedEventHandler(object sender, ProductTypeCount_XCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductTypeCount_XCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductTypeCount_XCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Count_PricesCompletedEventHandler(object sender, Count_PricesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Count_PricesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Count_PricesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_JoinProductTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_OutProductTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Update_Orders_Products_OrderMemory_Product_back_CJCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteOrders_Products_BackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddOrdersInfo_DDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddOrders_ProductsInfo_XXCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOrders_ProductsInfo_XXCompletedEventHandler(object sender, GetOrders_ProductsInfo_XXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrders_ProductsInfo_XXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrders_ProductsInfo_XXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Update_Orders_Products_OrderMemory_Product_back_CJ_TimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SearchProductCompletedEventHandler(object sender, SearchProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveProductCompletedEventHandler(object sender, SaveProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProductCompletedEventHandler(object sender, UpdateProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsDeleteProductCompletedEventHandler(object sender, IsDeleteProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDeleteProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDeleteProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Update_Orders_Products_ProductTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsDeleteProduct_IsDeleteCompletedEventHandler(object sender, IsDeleteProduct_IsDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDeleteProduct_IsDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDeleteProduct_IsDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void EmployeeDesignCountCompletedEventHandler(object sender, EmployeeDesignCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDesignCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDesignCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SearchOrderProductsCompletedEventHandler(object sender, SearchOrderProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchOrderProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchOrderProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_JYBTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_DJTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Count_TotalCashCompletedEventHandler(object sender, Count_TotalCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Count_TotalCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Count_TotalCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPTypeCompletedEventHandler(object sender, GetPTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddOrders_ProductsInfoCompletedEventHandler(object sender, AddOrders_ProductsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrders_ProductsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrders_ProductsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCompamyCompletedEventHandler(object sender, GetCompamyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompamyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompamyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertCompanyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteCompanyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateCompanyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCompanyTypeCompletedEventHandler(object sender, GetCompanyTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertCompanyTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateCompanyTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteCompanyTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDepartmentInfoCompletedEventHandler(object sender, GetDepartmentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheAllDepartmentCompletedEventHandler(object sender, GetTheAllDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheAllDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheAllDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheDepByDepNoCompletedEventHandler(object sender, GetTheDepByDepNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheDepByDepNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheDepByDepNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheDepNameByDepNoCompletedEventHandler(object sender, GetTheDepNameByDepNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheDepNameByDepNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheDepNameByDepNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertDepartmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteDepartmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateDepartmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmployeeInfoCompletedEventHandler(object sender, GetEmployeeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheAllEmployeeCompletedEventHandler(object sender, GetTheAllEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheAllEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheAllEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheAllEmployee_SCCompletedEventHandler(object sender, GetTheAllEmployee_SCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheAllEmployee_SCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheAllEmployee_SCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_Employee_InfoCompletedEventHandler(object sender, Get_Employee_InfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Employee_InfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Employee_InfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheEmpNameByEmpNoCompletedEventHandler(object sender, GetTheEmpNameByEmpNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheEmpNameByEmpNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheEmpNameByEmpNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheEmpNoByEmpNameCompletedEventHandler(object sender, GetTheEmpNoByEmpNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheEmpNoByEmpNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheEmpNoByEmpNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertEmployeeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteEmployeeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateEmployeeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheProductNumberCompletedEventHandler(object sender, GetTheProductNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheProductNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheProductNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheProdactByProductTypeCompletedEventHandler(object sender, GetTheProdactByProductTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheProdactByProductTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheProdactByProductTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheProdactNoByProductNameCompletedEventHandler(object sender, GetTheProdactNoByProductNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheProdactNoByProductNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheProdactNoByProductNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetThePathByOrderNOCompletedEventHandler(object sender, GetThePathByOrderNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThePathByOrderNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThePathByOrderNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheProductNameByProductNoCompletedEventHandler(object sender, GetTheProductNameByProductNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheProductNameByProductNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheProductNameByProductNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertProductsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertProductSizeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProductSizeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProductAreaCompletedEventHandler(object sender, UpdateProductAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProductSizeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheProducts_SizeCompletedEventHandler(object sender, GetTheProducts_SizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheProducts_SizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheProducts_SizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProductsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProductsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductsCompletedEventHandler(object sender, GetProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CopyProductToCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertProductTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProductTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProductTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheProductsTypeCompletedEventHandler(object sender, GetTheProductsTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheProductsTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheProductsTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductTypeCompletedEventHandler(object sender, GetProductTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertProductsPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProductsPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductsPriceCompletedEventHandler(object sender, GetProductsPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProductsPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertProductsPrice_CompanyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProductsPrice_CompanyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductsPrice_CompanyCompletedEventHandler(object sender, GetProductsPrice_CompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsPrice_CompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsPrice_CompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertProductsPrice_ProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProductsPrice_ProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductsPrice_ProductCompletedEventHandler(object sender, GetProductsPrice_ProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsPrice_ProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsPrice_ProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertProductsPrice_SizeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProductsPrice_SizeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductsPrice_SizeCompletedEventHandler(object sender, GetProductsPrice_SizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsPrice_SizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsPrice_SizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProductsPrice_SizeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddOrdersInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOrdersInfoAndOrders_ProductsInfoCompletedEventHandler(object sender, GetOrdersInfoAndOrders_ProductsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersInfoAndOrders_ProductsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersInfoAndOrders_ProductsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductPhotoCompletedEventHandler(object sender, GetProductPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOrdersInfoCompletedEventHandler(object sender, GetOrdersInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrdersInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteOrdersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteOrders_ProductsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_ProductsInfoCompletedEventHandler(object sender, UpdateOrders_ProductsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrders_ProductsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrders_ProductsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void returnOrderNOCompletedEventHandler(object sender, returnOrderNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class returnOrderNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal returnOrderNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductTypeNameCompletedEventHandler(object sender, GetProductTypeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductTypeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductTypeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetConfig_Code_NoCompletedEventHandler(object sender, GetConfig_Code_NoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfig_Code_NoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfig_Code_NoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrdersPathCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_OutPutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_OutputDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_ProductDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_GetGoodsDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_GetGoodsTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_ProductTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductTypeXMLCompletedEventHandler(object sender, GetProductTypeXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductTypeXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductTypeXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductsXMLCompletedEventHandler(object sender, GetProductsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetConfig_CodeXMLCompletedEventHandler(object sender, GetConfig_CodeXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfig_CodeXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfig_CodeXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCompanyXMLCompletedEventHandler(object sender, GetCompanyXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDepartmentXMLCompletedEventHandler(object sender, GetDepartmentXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_Reports_AreaCompletedEventHandler(object sender, Get_Reports_AreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Reports_AreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Reports_AreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmployeeXMLCompletedEventHandler(object sender, GetEmployeeXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProductsPrice_ProductandProductsPrice_SizeXMLCompletedEventHandler(object sender, GetProductsPrice_ProductandProductsPrice_SizeXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsPrice_ProductandProductsPrice_SizeXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsPrice_ProductandProductsPrice_SizeXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_ComposeXMLCompletedEventHandler(object sender, Get_ComposeXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ComposeXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ComposeXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_OrderPathXMLCompletedEventHandler(object sender, Get_OrderPathXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_OrderPathXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_OrderPathXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void LoginSelectCompletedEventHandler(object sender, LoginSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_InsertOrderLogoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_Products_InsertOrderLogoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrders_OrderLogoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Select_OrderLogoCompletedEventHandler(object sender, Select_OrderLogoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Select_OrderLogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Select_OrderLogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_OrderLogo_Employee2CompletedEventHandler(object sender, Get_OrderLogo_Employee2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_OrderLogo_Employee2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_OrderLogo_Employee2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTheCurrentGroupCompletedEventHandler(object sender, GetTheCurrentGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheCurrentGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheCurrentGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Update_Orders_Products_OrderMemoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Insert_ReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_ReportsCompletedEventHandler(object sender, Get_ReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_Reports_StateCompletedEventHandler(object sender, Get_Reports_StateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Reports_StateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Reports_StateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_Report_GetGoodsCompletedEventHandler(object sender, Get_Report_GetGoodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Report_GetGoodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Report_GetGoodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_Report_Orders_ProductsCompletedEventHandler(object sender, Get_Report_Orders_ProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Report_Orders_ProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Report_Orders_ProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_Report_AllCompletedEventHandler(object sender, Get_Report_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Report_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Report_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Insert_LogoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Delete_LogoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Update_LogoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_LogoCompletedEventHandler(object sender, Get_LogoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_LogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_LogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_BarCodesCompletedEventHandler(object sender, Get_BarCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BarCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BarCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_BarCodeCompletedEventHandler(object sender, Get_BarCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_BarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_BarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_DetailTableCompletedEventHandler(object sender, Get_DetailTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_DetailTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_DetailTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_CountTableCompletedEventHandler(object sender, Get_CountTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CountTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CountTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_DetailEmployeeCompletedEventHandler(object sender, Get_DetailEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_DetailEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_DetailEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_CountEmployeeCompletedEventHandler(object sender, Get_CountEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CountEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CountEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Count_RecordListCompletedEventHandler(object sender, Count_RecordListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Count_RecordListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Count_RecordListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Detail_RecordListCompletedEventHandler(object sender, Detail_RecordListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Detail_RecordListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Detail_RecordListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Insert_ComposeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Update_ComposeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Delete_ComposeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Get_ComposeCompletedEventHandler(object sender, Get_ComposeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ComposeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ComposeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetThe_EmployeeNOCompletedEventHandler(object sender, GetThe_EmployeeNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThe_EmployeeNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThe_EmployeeNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591